# write out a script to invoke monado
string(REGEX MATCH "tcsh$" TCSHELL $ENV{SHELL})
string(REGEX MATCH "csh$" CSHELL $ENV{SHELL})
if(CSHELL)
    set(SET_CMD "setenv")
    set(SPACER " ")
else()
    set(SET_CMD "export")
    set(SPACER "=")
endif()

if(CSHELL)
    set(MONADO_OUT "${CMAKE_CURRENT_SOURCE_DIR}/illixr_monado_oxr.csh")
    set(XR_OUT "${CMAKE_CURRENT_SOURCE_DIR}/openxr_ht_test.csh")
    set(IXR_OUT "${CMAKE_CURRENT_SOURCE_DIR}/illixr_ht_test.csh")
else()
    set(MONADO_OUT "${CMAKE_CURRENT_SOURCE_DIR}/illixr_monado_oxr.sh")
    set(XR_OUT "${CMAKE_CURRENT_SOURCE_DIR}/openxr_ht_test.sh")
    set(IXR_OUT "${CMAKE_CURRENT_SOURCE_DIR}/illixr_ht_test.sh")
endif()

macro(write_three TXT)
    file(APPEND ${MONADO_OUT} "${TXT}")
    file(APPEND ${XR_OUT} "${TXT}")
    file(APPEND ${IXR_OUT} "${TXT}")
endmacro()

file(WRITE ${MONADO_OUT} "")
file(WRITE ${XR_OUT} "")
file(WRITE ${IXR_OUT} "")
if(CSHELL)
    if(TCSHELL)
        write_three("#!/usr/bin/env tcsh\n\n")
    else()
        write_three("#!/usr/bin/env csh\n\n")
    endif()
else()
    write_three("#!/usr/bin/env sh\n\n")
endif()

write_three("# set environment variables\n")

write_three("${SET_CMD} IXIR_PTH${SPACER}${CMAKE_INSTALL_PREFIX}/lib\n\n")

if(CSHELL)
    write_three("if ( $?LD_LIBRARY_PATH ) then\n")
else()
    write_three("if [ ! -z \"$LD_LIBRARY_PATH\" ]\nthen\n")
endif()
write_three("  ${SET_CMD} LD_LIBRARY_PATH${SPACER}\\\${IXIR_PTH}:\\\${LD_LIBRARY_PATH}\n")
write_three("else\n")
write_three("  ${SET_CMD} LD_LIBRARY_PATH${SPACER}\\\${IXIR_PTH}\n")
if(CSHELL)
    write_three("endif\n\n")
else()
    write_three("fi\n\n")
endif()

if(CSHELL)
    file(APPEND ${MONADO_OUT} "if ( $?XDG_RUNTIME_DIR ) then\n")
    file(APPEND ${XR_OUT} "if ( $?XDG_RUNTIME_DIR ) then\n")
else()
    file(APPEND ${MONADO_OUT} "if [ ! -z \"$XDG_RUNTIME_DIR\" ]; then\n")
    file(APPEND ${XR_OUT} "if [ ! -z \"$XDG_RUNTIME_DIR\" ]; then\n")
endif()
file(APPEND ${MONADO_OUT} "  ${SET_CMD} IPC_PTH${SPACER}$XDG_RUNTIME_DIR\n")
file(APPEND ${XR_OUT} "  ${SET_CMD} IPC_PTH${SPACER}$XDG_RUNTIME_DIR\n")
file(APPEND ${MONADO_OUT} "else\n")
file(APPEND ${XR_OUT} "else\n")
file(APPEND ${MONADO_OUT} "  ${SET_CMD} IPC_PTH${SPACER}/tmp\n")
file(APPEND ${XR_OUT} "  ${SET_CMD} IPC_PTH${SPACER}/tmp\n")
if(CSHELL)
    file(APPEND ${MONADO_OUT} "endif\n\n")
    file(APPEND ${XR_OUT} "endif\n\n")
else()
    file(APPEND ${MONADO_OUT} "fi\n\n")
    file(APPEND ${XR_OUT} "fi\n\n")
endif()

file(APPEND ${MONADO_OUT} "${SET_CMD} XR_RUNTIME_JSON${SPACER}${MONADO_RUNTIME_${ver}}\n\n")
file(APPEND ${XR_OUT} "${SET_CMD} XR_RUNTIME_JSON${SPACER}${MONADO_RUNTIME_${ver}}\n\n")
file(APPEND ${MONADO_OUT} "rm -f \${IPC_PTH}/monado_comp_ipc\n\n")
if(CSHELL)
    file(APPEND ${XR_OUT} "set socket_file=\${IPC_PTH}/monado_comp_ipc\n\n")
else()
    file(APPEND ${XR_OUT} "socket_file=\${IPC_PTH}/monado_comp_ipc\n\n")
endif()
file(APPEND ${MONADO_OUT} "# launch monado service\n")
file(APPEND ${MONADO_OUT} "${CMAKE_INSTALL_PREFIX}/bin/monado-service\n")

file(APPEND ${IXR_OUT} "${SET_CMD} ILLIXR_DATA${SPACER}${CMAKE_SOURCE_DIR}/data/mav0\n")
if(DEMO_DATA)
    file(APPEND ${IXR_OUT} "${SET_CMD} ILLIXR_DEMO_DATA${SPACER}${DEMO_DATA}\n")
else()
    file(APPEND ${IXR_OUT} "${SET_CMD} ILLIXR_DEMO_DATA${SPACER}${CMAKE_CURRENT_SOURCE_DIR}/demo_data\n")
endif()
file(APPEND ${IXR_OUT} "${SET_CMD} ILLIXR_OFFLOAD_ENABLE${SPACER}${ENABLE_OFFLOAD}\n")
file(APPEND ${IXR_OUT} "${SET_CMD} ILLIXR_ENABLE_VERBOSE_ERRORS${SPACER}${ENABLE_VERBOSE_ERRORS}\n")
file(APPEND ${IXR_OUT} "${SET_CMD} ILLIXR_ALIGNMENT_ENABLE${SPACER}${ENABLE_ALIGNMENT}\n")
file(APPEND ${IXR_OUT} "${SET_CMD} ILLIXR_ENABLE_PRE_SLEEP${SPACER}${ENABLE_PRE_SLEEP}\n")
file(APPEND ${IXR_OUT} "${SET_CMD} CALCULATOR_CONFIG_FILE${SPACER}${CMAKE_INSTALL_PREFIX}/share/mediapipe/graphs/hand_tracking/hand_tracking_desktop_live.pbtxt\n")
file(APPEND ${IXR_OUT} "${SET_CMD} HT_INPUT${SPACER}cam\n")
file(APPEND ${IXR_OUT} "${SET_CMD} HT_INPUT_TYPE${SPACER}MULTI\n")
file(APPEND ${IXR_OUT} "${SET_CMD} HT_DUMP_DATA${SPACER}TRUE\n")
file(APPEND ${IXR_OUT} "${SET_CMD} ILLIXR_RUN_DURATION${SPACER}300\n")
file(APPEND ${IXR_OUT} "${SET_CMD} ILLIXR_TEST_DATA${SPACER}${CMAKE_INSTALL_PREFIX}/share/fps30_dur10\n\n")

file(APPEND ${IXR_OUT} "${CMAKE_INSTALL_PREFIX}/bin/main.dbg.exe --plugins=zed.data_injection,hand_tracking")

file(APPEND ${XR_OUT} "# give the monado service script time to clean up socket\n")
file(APPEND ${XR_OUT} "sleep 1\n\n")
file(APPEND ${XR_OUT} "# now loop, waiting for the socket file to appear\n")

if(CSHELL)
    file(APPEND ${XR_OUT} "set timeout=90   # seconds\n\n")
    file(APPEND ${XR_OUT} "set x=0\n")
    file(APPEND ${XR_OUT} "while (\$x <= \$timeout)\n")
    file(APPEND ${XR_OUT} "    if ( -e \"\$socket_file\" ) then\n")
    file(APPEND ${XR_OUT} "        break\n")
    file(APPEND ${XR_OUT} "    endif\n")
    file(APPEND ${XR_OUT} "    sleep 1\n")
    file(APPEND ${XR_OUT} "    @ x= \$x + 1\n")
    file(APPEND ${XR_OUT} "end\n\n")
    file(APPEND ${XR_OUT} "# exit if timeout reached\n")
    file(APPEND ${XR_OUT} "if ( \$x >= \$timeout ) then\n")
    file(APPEND ${XR_OUT} "    echo \"Timeout exceeded waiting for socket to open at\\n \$socket_file\"\n")
    file(APPEND ${XR_OUT} "    exit 1\n")
    file(APPEND ${XR_OUT} "endif\n\n")
else()
    file(APPEND ${XR_OUT} "timeout=90   # seconds\n\n")
    file(APPEND ${XR_OUT} "x=0\n")
    file(APPEND ${XR_OUT} "while [ \$x -le \$timeout ]\n")
    file(APPEND ${XR_OUT} "do\n")
    file(APPEND ${XR_OUT} "    if [ -e \"\$socket_file\" ]; then\n")
    file(APPEND ${XR_OUT} "        break\n")
    file(APPEND ${XR_OUT} "    fi\n")
    file(APPEND ${XR_OUT} "    sleep 1\n")
    file(APPEND ${XR_OUT} "    x=\$(( \$x + 1 ))\n")
    file(APPEND ${XR_OUT} "done\n\n")
    file(APPEND ${XR_OUT} "# exit if timeout reached\n")
    file(APPEND ${XR_OUT} "if [ \$x -ge \$timeout ]; then\n")
    file(APPEND ${XR_OUT} "    echo \"Timeout exceeded waiting for socket to open at\\n \$socket_file\"\n")
    file(APPEND ${XR_OUT} "    exit 1\n")
    file(APPEND ${XR_OUT} "fi\n\n")
endif()
file(APPEND ${XR_OUT} "${SET_CMD} XR_RUNTIME_JSON${SPACER}${CMAKE_INSTALL_PREFIX}/share/openxr/1/openxr_monado.json\n")
file(APPEND ${XR_OUT} "# launch openxr app\n")
file(APPEND ${XR_OUT} "${CMAKE_INSTALL_PREFIX}/bin/illixr_oxr_test\n\n")

execute_process(COMMAND chmod 744 ${MONADO_OUT})
execute_process(COMMAND chmod 744 ${XR_OUT})
execute_process(COMMAND chmod 744 ${IXR_OUT})

install(PROGRAMS ${MONADO_OUT} ${XR_OUT} ${IXR_OUT} TYPE BIN)
message("\n\nIn order to run the tests you will need three terminals. Also be sure to have run 'make install' or its equivalent first.\n")
message("In the first terminal run:")
message("  ${MONADO_OUT}\n")
message("in the second terminal run:")
message("  ${IXR_OUT}\n")
message("then in third terminal run")
message("  ${XR_OUT}")
