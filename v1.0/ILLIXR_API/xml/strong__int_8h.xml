<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="strong__int_8h" kind="file" language="C++">
    <compoundname>strong_int.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">iosfwd</includes>
    <includes local="no">limits</includes>
    <includes local="no">ostream</includes>
    <includes local="no">type_traits</includes>
    <includes local="yes">absl/base/macros.h</includes>
    <includes local="yes">absl/log/absl_log.h</includes>
    <includes refid="port_2port_8h" local="yes">mediapipe/framework/port/port.h</includes>
    <includedby refid="collection__item__id_8h" local="yes">/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/collection_item_id.h</includedby>
    <includedby refid="safe__int_8h" local="yes">/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/safe_int.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/strong_int.h</label>
        <link refid="strong__int_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>mediapipe/framework/port/port.h</label>
        <link refid="port_2port_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>absl/base/macros.h</label>
      </node>
      <node id="10">
        <label>absl/base/port.h</label>
      </node>
      <node id="8">
        <label>absl/log/absl_log.h</label>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="3">
        <label>iosfwd</label>
      </node>
      <node id="4">
        <label>limits</label>
      </node>
      <node id="5">
        <label>ostream</label>
      </node>
      <node id="6">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/hand_tracking_publisher.hpp</label>
        <link refid="hand__tracking__publisher_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/core/begin_loop_calculator.h</label>
        <link refid="begin__loop__calculator_8h_source"/>
      </node>
      <node id="12">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/core/clip_vector_size_calculator.h</label>
        <link refid="clip__vector__size__calculator_8h_source"/>
      </node>
      <node id="13">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/core/end_loop_calculator.h</label>
        <link refid="end__loop__calculator_8h_source"/>
      </node>
      <node id="14">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/core/split_vector_calculator.h</label>
        <link refid="split__vector__calculator_8h_source"/>
      </node>
      <node id="42">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/internal/callback_packet_calculator.h</label>
        <link refid="callback__packet__calculator_8h_source"/>
      </node>
      <node id="92">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/image_to_tensor_converter.h</label>
        <link refid="image__to__tensor__converter_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/image_to_tensor_converter_gl_buffer.h</label>
        <link refid="image__to__tensor__converter__gl__buffer_8h_source"/>
      </node>
      <node id="16">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/image_to_tensor_converter_gl_texture.h</label>
        <link refid="image__to__tensor__converter__gl__texture_8h_source"/>
      </node>
      <node id="90">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/image_to_tensor_converter_gl_utils.h</label>
        <link refid="image__to__tensor__converter__gl__utils_8h_source"/>
      </node>
      <node id="17">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/image_to_tensor_converter_opencv.h</label>
        <link refid="image__to__tensor__converter__opencv_8h_source"/>
      </node>
      <node id="93">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/image_to_tensor_utils.h</label>
        <link refid="image__to__tensor__utils_8h_source"/>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator.h</label>
        <link refid="inference__calculator_8h_source"/>
      </node>
      <node id="94">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.h</label>
        <link refid="inference__calculator__utils_8h_source"/>
      </node>
      <node id="96">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_feedback_manager.h</label>
        <link refid="inference__feedback__manager_8h_source"/>
      </node>
      <node id="37">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_interpreter_delegate_runner.h</label>
        <link refid="inference__interpreter__delegate__runner_8h_source"/>
      </node>
      <node id="95">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_io_mapper.h</label>
        <link refid="inference__io__mapper_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_runner.h</label>
        <link refid="inference__runner_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/tensor_span.h</label>
        <link refid="tensor__span_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/association_calculator.h</label>
        <link refid="association__calculator_8h_source"/>
      </node>
      <node id="19">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/collection_has_min_size_calculator.h</label>
        <link refid="collection__has__min__size__calculator_8h_source"/>
      </node>
      <node id="20">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/detections_to_rects_calculator.h</label>
        <link refid="detections__to__rects__calculator_8h_source"/>
      </node>
      <node id="21">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/filter_collection_calculator.h</label>
        <link refid="filter__collection__calculator_8h_source"/>
      </node>
      <node id="43">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/illixr_output_calculator.h</label>
        <link refid="illixr__output__calculator_8h_source"/>
      </node>
      <node id="22">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/landmarks_to_render_data_calculator.h</label>
        <link refid="landmarks__to__render__data__calculator_8h_source"/>
      </node>
      <node id="38">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h</label>
        <link refid="contract_8h_source"/>
      </node>
      <node id="39">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/node.h</label>
        <link refid="node_8h_source"/>
      </node>
      <node id="78">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h</label>
        <link refid="api_2packet_8h_source"/>
      </node>
      <node id="40">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h</label>
        <link refid="api_2port_8h_source"/>
      </node>
      <node id="41">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_base.h</label>
        <link refid="calculator__base_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_context.h</label>
        <link refid="calculator__context_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_context_manager.h</label>
        <link refid="calculator__context__manager_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_contract.h</label>
        <link refid="calculator__contract_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_framework.h</label>
        <link refid="calculator__framework_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_graph.h</label>
        <link refid="calculator__graph_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_node.h</label>
        <link refid="calculator__node_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_registry.h</label>
        <link refid="calculator__registry_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_state.h</label>
        <link refid="calculator__state_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/collection.h</label>
        <link refid="collection_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/collection_item_id.h</label>
        <link refid="collection__item__id_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/safe_int.h</label>
        <link refid="safe__int_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/strong_int.h</label>
        <link refid="strong__int_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h</label>
        <link refid="image_8h_source"/>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image_opencv.h</label>
        <link refid="image__opencv_8h_source"/>
      </node>
      <node id="91">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/tensor.h</label>
        <link refid="tensor_8h_source"/>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/graph_output_stream.h</label>
        <link refid="graph__output__stream_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/graph_service.h</label>
        <link refid="graph__service_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/graph_service_manager.h</label>
        <link refid="graph__service__manager_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/input_side_packet_handler.h</label>
        <link refid="input__side__packet__handler_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/input_stream.h</label>
        <link refid="input__stream_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/input_stream_handler.h</label>
        <link refid="input__stream__handler_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/input_stream_manager.h</label>
        <link refid="input__stream__manager_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/input_stream_shard.h</label>
        <link refid="input__stream__shard_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/legacy_calculator_support.h</label>
        <link refid="legacy__calculator__support_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/mediapipe_profiling.h</label>
        <link refid="mediapipe__profiling_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/memory_manager_service.h</label>
        <link refid="memory__manager__service_8h_source"/>
      </node>
      <node id="84">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/output_side_packet.h</label>
        <link refid="output__side__packet_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/output_side_packet_impl.h</label>
        <link refid="output__side__packet__impl_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/output_stream.h</label>
        <link refid="output__stream_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/output_stream_handler.h</label>
        <link refid="output__stream__handler_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/output_stream_manager.h</label>
        <link refid="output__stream__manager_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/output_stream_poller.h</label>
        <link refid="output__stream__poller_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/output_stream_shard.h</label>
        <link refid="output__stream__shard_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h</label>
        <link refid="packet_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_generator.h</label>
        <link refid="packet__generator_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_generator_graph.h</label>
        <link refid="packet__generator__graph_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_set.h</label>
        <link refid="packet__set_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_type.h</label>
        <link refid="packet__type_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/platform_specific_profiling.h</label>
        <link refid="platform__specific__profiling_8h_source"/>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/profiler/graph_profiler.h</label>
        <link refid="graph__profiler_8h_source"/>
      </node>
      <node id="87">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/profiler/graph_profiler_stub.h</label>
        <link refid="graph__profiler__stub_8h_source"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/profiler/graph_tracer.h</label>
        <link refid="graph__tracer_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/profiler/trace_buffer.h</label>
        <link refid="trace__buffer_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/profiler/trace_builder.h</label>
        <link refid="trace__builder_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/scheduler.h</label>
        <link refid="scheduler_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/scheduler_queue.h</label>
        <link refid="scheduler__queue_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h</label>
        <link refid="status__handler_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/stream_handler/default_input_stream_handler.h</label>
        <link refid="default__input__stream__handler_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/stream_handler/fixed_size_input_stream_handler.h</label>
        <link refid="fixed__size__input__stream__handler_8h_source"/>
      </node>
      <node id="24">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/stream_handler/immediate_input_stream_handler.h</label>
        <link refid="immediate__input__stream__handler_8h_source"/>
      </node>
      <node id="33">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/stream_handler/in_order_output_stream_handler.h</label>
        <link refid="in__order__output__stream__handler_8h_source"/>
      </node>
      <node id="69">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/subgraph.h</label>
        <link refid="subgraph_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/timestamp.h</label>
        <link refid="timestamp_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/container_util.h</label>
        <link refid="container__util_8h_source"/>
      </node>
      <node id="65">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/fill_packet_set.h</label>
        <link refid="fill__packet__set_8h_source"/>
      </node>
      <node id="66">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.h</label>
        <link refid="options__field__util_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_syntax_util.h</label>
        <link refid="options__syntax__util_8h_source"/>
      </node>
      <node id="68">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_util.h</label>
        <link refid="options__util_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/packet_generator_wrapper_calculator.h</label>
        <link refid="packet__generator__wrapper__calculator_8h_source"/>
      </node>
      <node id="46">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/subgraph_expansion.h</label>
        <link refid="subgraph__expansion_8h_source"/>
      </node>
      <node id="72">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/tag_map.h</label>
        <link refid="tag__map_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/tag_map_helper.h</label>
        <link refid="tag__map__helper_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/validated_graph_config.h</label>
        <link refid="validated__graph__config_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gl_calculator_helper.h</label>
        <link refid="gl__calculator__helper_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gl_context.h</label>
        <link refid="gl__context_8h_source"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gl_context_internal.h</label>
        <link refid="gl__context__internal_8h_source"/>
      </node>
      <node id="99">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gl_texture_buffer.h</label>
        <link refid="gl__texture__buffer_8h_source"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gl_texture_buffer_pool.h</label>
        <link refid="gl__texture__buffer__pool_8h_source"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h</label>
        <link refid="gpu__buffer_8h_source"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_multi_pool.h</label>
        <link refid="gpu__buffer__multi__pool_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_service.h</label>
        <link refid="gpu__service_8h_source"/>
      </node>
      <node id="27">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h</label>
        <link refid="gpu__shared__data__internal_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/util/header_util.h</label>
        <link refid="header__util_8h_source"/>
      </node>
      <node id="9">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/plugin.hpp</label>
        <link refid="plugin_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structmediapipe_1_1intops_1_1NullStrongIntValidator" prot="public">mediapipe::intops::NullStrongIntValidator</innerclass>
    <innerclass refid="classmediapipe_1_1intops_1_1StrongInt" prot="public">mediapipe::intops::StrongInt</innerclass>
    <innernamespace refid="namespacemediapipe">mediapipe</innernamespace>
    <innernamespace refid="namespacemediapipe_1_1intops">mediapipe::intops</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="strong__int_8h_1a68c3dfa99cd5f6776c2626a34ae72ccd" prot="public" static="no">
        <name>STRONG_INT_VS_STRONG_INT_BINARY_OP</name>
        <param><defname>op</defname></param>
        <initializer>  template &lt;typename TagType, typename ValueType, typename ValidatorType&gt; \
  inline StrongInt&lt;TagType, ValueType, ValidatorType&gt; operator op(        \
      StrongInt&lt;TagType, ValueType, ValidatorType&gt; lhs,                   \
      StrongInt&lt;TagType, ValueType, ValidatorType&gt; rhs) {                 \
    lhs op## = rhs;                                                       \
    return lhs;                                                           \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/strong_int.h" line="387" column="9" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/strong_int.h" bodystart="387" bodyend="394"/>
      </memberdef>
      <memberdef kind="define" id="strong__int_8h_1a9afcc52912868c8a6c01768c5941be7e" prot="public" static="no">
        <name>STRONG_INT_VS_NUMERIC_BINARY_OP</name>
        <param><defname>op</defname></param>
        <initializer>  template &lt;typename TagType, typename ValueType, typename ValidatorType, \
            typename NumType&gt;                                             \
  inline StrongInt&lt;TagType, ValueType, ValidatorType&gt; operator op(        \
      StrongInt&lt;TagType, ValueType, ValidatorType&gt; lhs, NumType rhs) {    \
    lhs op## = rhs;                                                       \
    return lhs;                                                           \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/strong_int.h" line="405" column="9" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/strong_int.h" bodystart="405" bodyend="412"/>
      </memberdef>
      <memberdef kind="define" id="strong__int_8h_1a4acfd5cc3b9e1bb2584b83b910934366" prot="public" static="no">
        <name>NUMERIC_VS_STRONG_INT_BINARY_OP</name>
        <param><defname>op</defname></param>
        <initializer>  template &lt;typename TagType, typename ValueType, typename ValidatorType, \
            typename NumType&gt;                                             \
  inline StrongInt&lt;TagType, ValueType, ValidatorType&gt; operator op(        \
      NumType lhs, StrongInt&lt;TagType, ValueType, ValidatorType&gt; rhs) {    \
    rhs op## = lhs;                                                       \
    return rhs;                                                           \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/strong_int.h" line="415" column="9" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/strong_int.h" bodystart="415" bodyend="422"/>
      </memberdef>
      <memberdef kind="define" id="strong__int_8h_1ad563794aae2c88fcfe788cb80966ed7b" prot="public" static="no">
        <name>STRONG_INT_COMPARISON_OP</name>
        <param><defname>op</defname></param>
        <initializer>  template &lt;typename TagType, typename ValueType, typename ValidatorType&gt;     \
  inline bool operator op(StrongInt&lt;TagType, ValueType, ValidatorType&gt; lhs,   \
                          StrongInt&lt;TagType, ValueType, ValidatorType&gt; rhs) { \
    return lhs.value() op rhs.value();                                        \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/strong_int.h" line="433" column="9" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/strong_int.h" bodystart="433" bodyend="438"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>The<sp/>MediaPipe<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>StrongInt&lt;T&gt;<sp/>is<sp/>a<sp/>simple<sp/>template<sp/>class<sp/>mechanism<sp/>for<sp/>defining<sp/>&quot;logical&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>integer-like<sp/>class<sp/>types<sp/>that<sp/>support<sp/>almost<sp/>all<sp/>of<sp/>the<sp/>same<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>native<sp/>integer<sp/>types,<sp/>but<sp/>which<sp/>prevents<sp/>assignment,<sp/>construction,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>other<sp/>operations<sp/>from<sp/>other<sp/>integer-like<sp/>types.<sp/><sp/>In<sp/>other<sp/>words,<sp/>you<sp/>cannot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>assign<sp/>from<sp/>raw<sp/>integer<sp/>types<sp/>or<sp/>other<sp/>StrongInt&lt;&gt;<sp/>types,<sp/>nor<sp/>can<sp/>you<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>most<sp/>arithmetic<sp/>or<sp/>logical<sp/>operations.<sp/><sp/>This<sp/>provides<sp/>a<sp/>simple<sp/>form<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dimensionality<sp/>in<sp/>that<sp/>you<sp/>can<sp/>add<sp/>two<sp/>instances<sp/>of<sp/>StrongInt&lt;T&gt;,<sp/>producing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>StrongInt&lt;T&gt;,<sp/>but<sp/>you<sp/>can<sp/>not<sp/>add<sp/>a<sp/>StrongInt&lt;T&gt;<sp/>and<sp/>a<sp/>raw<sp/>T<sp/>nor<sp/>can<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>StrongInt&lt;T&gt;<sp/>and<sp/>a<sp/>StrongInt&lt;U&gt;.<sp/><sp/>Details<sp/>on<sp/>supported<sp/>operations<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>addition<sp/>to<sp/>type<sp/>strength,<sp/>StrongInt<sp/>provides<sp/>a<sp/>way<sp/>to<sp/>inject<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>validation<sp/>of<sp/>the<sp/>various<sp/>operations.<sp/><sp/>This<sp/>allows<sp/>you<sp/>to<sp/>define<sp/>StrongInt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>types<sp/>that<sp/>check<sp/>for<sp/>overflow<sp/>conditions<sp/>and<sp/>react<sp/>in<sp/>standard<sp/>or<sp/>custom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ways.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>StrongInt&lt;T&gt;<sp/>with<sp/>a<sp/>NullStrongIntValidator<sp/>should<sp/>compile<sp/>away<sp/>to<sp/>a<sp/>raw<sp/>T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>optimized<sp/>mode.<sp/><sp/>What<sp/>this<sp/>means<sp/>is<sp/>that<sp/>the<sp/>generated<sp/>assembly<sp/>for:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>int64_t<sp/>foo<sp/>=<sp/>123;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>int64_t<sp/>bar<sp/>=<sp/>456;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>int64_t<sp/>baz<sp/>=<sp/>foo<sp/>+<sp/>bar;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>constexpr<sp/>int64_t<sp/>fubar<sp/>=<sp/>789;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>...should<sp/>be<sp/>identical<sp/>to<sp/>the<sp/>generated<sp/>assembly<sp/>for:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>DEFINE_STRONG_INT_TYPE(MyStrongInt,<sp/>int64_t);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>MyStrongInt<sp/>foo(123);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>MyStrongInt<sp/>bar(456);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>MyStrongInt<sp/>baz<sp/>=<sp/>foo<sp/>+<sp/>bar;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>constexpr<sp/>MyStrongInt<sp/>fubar(789);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>the<sp/>methods<sp/>are<sp/>all<sp/>inline<sp/>and<sp/>non-virtual<sp/>and<sp/>the<sp/>class<sp/>has<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>one<sp/>data<sp/>member,<sp/>the<sp/>compiler<sp/>can<sp/>erase<sp/>the<sp/>StrongInt<sp/>class<sp/>entirely<sp/>in<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>code-generation<sp/>phase.<sp/><sp/>This<sp/>also<sp/>means<sp/>that<sp/>you<sp/>can<sp/>pass<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>around<sp/>by<sp/>value<sp/>just<sp/>as<sp/>you<sp/>would<sp/>a<sp/>raw<sp/>T.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>important<sp/>to<sp/>note<sp/>that<sp/>StrongInt<sp/>does<sp/>NOT<sp/>generate<sp/>compile<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>warnings<sp/>or<sp/>errors<sp/>for<sp/>overflows<sp/>on<sp/>implicit<sp/>constant<sp/>conversions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Usage:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>StrongInt&lt;TagType,<sp/>NativeType,<sp/>ValidatorType<sp/>=<sp/>NullStrongIntValidator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Creates<sp/>a<sp/>new<sp/>StrongInt<sp/>instance<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>TagType:<sp/>The<sp/>unique<sp/>type<sp/>which<sp/>discriminates<sp/>this<sp/>StrongInt&lt;T&gt;<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other<sp/>StrongInt&lt;U&gt;<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>NativeType:<sp/>The<sp/>primitive<sp/>integral<sp/>type<sp/>this<sp/>StrongInt<sp/>will<sp/>hold,<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined<sp/>by<sp/>std::is_integral<sp/>(see<sp/>&lt;type_traits&gt;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ValidatorType:<sp/>The<sp/>type<sp/>of<sp/>validation<sp/>used<sp/>by<sp/>this<sp/>StrongInt<sp/>type.<sp/><sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>few<sp/>pre-built<sp/>validator<sp/>types<sp/>are<sp/>provided<sp/>here,<sp/>but<sp/>the<sp/>caller<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>any<sp/>custom<sp/>validator<sp/>they<sp/>desire.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Supported<sp/>operations:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;<sp/>=<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>!StrongInt&lt;T&gt;<sp/>=&gt;<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>~StrongInt&lt;T&gt;<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-StrongInt&lt;T&gt;<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>+StrongInt&lt;T&gt;<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>++StrongInt&lt;T&gt;<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;++<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>--StrongInt&lt;T&gt;<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;--<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;<sp/>+<sp/>StrongInt&lt;T&gt;<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;<sp/>-<sp/>StrongInt&lt;T&gt;<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;<sp/>*<sp/>(numeric<sp/>type)<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;<sp/>/<sp/>(numeric<sp/>type)<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;<sp/>%<sp/>(numeric<sp/>type)<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;<sp/>&lt;&lt;<sp/>(numeric<sp/>type)<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;<sp/>&gt;&gt;<sp/>(numeric<sp/>type)<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;<sp/>&amp;<sp/>StrongInt&lt;T&gt;<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;<sp/>|<sp/>StrongInt&lt;T&gt;<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>StrongInt&lt;T&gt;<sp/>^<sp/>StrongInt&lt;T&gt;<sp/>=&gt;<sp/>StrongInt&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>For<sp/>binary<sp/>operations,<sp/>the<sp/>equivalent<sp/>op-equal<sp/>(eg<sp/>+=<sp/>vs.<sp/>+)<sp/>operations<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>also<sp/>supported.<sp/><sp/>Other<sp/>operator<sp/>combinations<sp/>should<sp/>cause<sp/>compile-time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Validators:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>NullStrongIntValidator:<sp/>Do<sp/>no<sp/>validation.<sp/><sp/>This<sp/>should<sp/>be<sp/>entirely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimized<sp/>away<sp/>by<sp/>the<sp/>compiler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEDIAPIPE_DEPS_STRONG_INT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEDIAPIPE_DEPS_STRONG_INT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;absl/base/macros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;absl/log/absl_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/port/port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mediapipe<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">intops<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>validators<sp/>which<sp/>can<sp/>be<sp/>plugged-in<sp/>to<sp/>make<sp/>StrongInt<sp/>resilient<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>things<sp/>like<sp/>overflows.<sp/>This<sp/>is<sp/>a<sp/>do-nothing<sp/>implementation<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compile-time<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>For<sp/>all<sp/>validation<sp/>functions<sp/>that<sp/>operate<sp/>on<sp/>an<sp/>existing<sp/>StrongInt&lt;T&gt;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>type<sp/>argument<sp/>&apos;T&apos;<sp/>*must*<sp/>be<sp/>StrongInt&lt;T&gt;::ValueType<sp/>(the<sp/>int<sp/>type<sp/>being</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>strengthened).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NullStrongIntValidator<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>initialization<sp/>of<sp/>StrongInt&lt;T&gt;<sp/>from<sp/>arg,<sp/>type<sp/>U.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>templated<sp/>default<sp/>implementation<sp/>has<sp/>an<sp/>arbitrary<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>value<sp/>for<sp/>the<sp/>sole<sp/>purpose<sp/>of<sp/>conforming<sp/>to<sp/>c++11<sp/>constexpr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Custom<sp/>validator<sp/>implementations<sp/>can<sp/>choose<sp/>to<sp/>return<sp/>void<sp/>or<sp/>use<sp/>a<sp/>similar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>value<sp/>constexpr<sp/>construct<sp/>if<sp/>constexpr<sp/>initialization<sp/>is<sp/>desirable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>StrongInt<sp/>class<sp/>does<sp/>not<sp/>care<sp/>about<sp/>or<sp/>use<sp/>the<sp/>returned<sp/>value.<sp/>Any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returned<sp/>value<sp/>is<sp/>solely<sp/>there<sp/>to<sp/>allow<sp/>the<sp/>constexpr<sp/>declaration;<sp/>custom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>validators<sp/>can<sp/>only<sp/>fail<sp/>/<sp/>abort<sp/>when<sp/>detecting<sp/>an<sp/>invalid<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>other<sp/>than<sp/>the<sp/>constexpr<sp/>behavior,<sp/>the<sp/>below<sp/>2<sp/>custom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>validator<sp/>implementations<sp/>are<sp/>logically<sp/>equivalent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>U&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>void<sp/>ValidateInit(U<sp/>arg)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(arg<sp/>&lt;<sp/>0)<sp/>ABSL_LOG(FATAL)<sp/>&lt;&lt;<sp/>&quot;arg<sp/>&lt;<sp/>0&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>U&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>constexpr<sp/>bool<sp/>ValidateInit(U<sp/>arg)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>(arg<sp/>&lt;<sp/>0)<sp/>?<sp/>(LOG(FATAL)<sp/>&lt;&lt;<sp/>&quot;arg<sp/>&lt;<sp/>0&quot;,<sp/>false)<sp/>:<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>constexpr<sp/>ValidateInit<sp/>implementation<sp/>has<sp/>the<sp/>added<sp/>advantage<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>validation<sp/>can<sp/>take<sp/>place<sp/>(fail)<sp/>at<sp/>compile<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ValidateInit(U<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>-value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateNegate(T<sp/>value)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>~value;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateBitNot(T<sp/>value)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>lhs<sp/>+<sp/>rhs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateAdd(T<sp/>lhs,<sp/>T<sp/>rhs)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>lhs<sp/>-<sp/>rhs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateSubtract(T<sp/>lhs,<sp/>T<sp/>rhs)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>lhs<sp/>*<sp/>rhs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateMultiply(T<sp/>lhs,<sp/>U<sp/>rhs)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>lhs<sp/>/<sp/>rhs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateDivide(T<sp/>lhs,<sp/>U<sp/>rhs)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>lhs<sp/>%<sp/>rhs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateModulo(T<sp/>lhs,<sp/>U<sp/>rhs)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>lhs<sp/>&lt;&lt;<sp/>rhs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateLeftShift(T<sp/>lhs,<sp/>int64_t<sp/>rhs)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>lhs<sp/>&gt;&gt;<sp/>rhs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateRightShift(T<sp/>lhs,<sp/>int64_t<sp/>rhs)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>lhs<sp/>&amp;<sp/>rhs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateBitAnd(T<sp/>lhs,<sp/>T<sp/>rhs)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>lhs<sp/>|<sp/>rhs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateBitOr(T<sp/>lhs,<sp/>T<sp/>rhs)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>lhs<sp/>^<sp/>rhs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateBitXor(T<sp/>lhs,<sp/>T<sp/>rhs)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal">};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Holds<sp/>an<sp/>integer<sp/>value<sp/>(of<sp/>type<sp/>NativeType)<sp/>and<sp/>behaves<sp/>as<sp/>a<sp/>NativeType<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>exposing<sp/>assignment,<sp/>unary,<sp/>comparison,<sp/>and<sp/>arithmetic<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>is<sp/>NOT<sp/>thread-safe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TagType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NativeType,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValidatorType<sp/>=<sp/>NullStrongIntValidator&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StrongInt<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NativeType<sp/>ValueType;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>value<sp/>initialization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>StrongInt()</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>value_((ValidatorType::template<sp/>ValidateInit&lt;ValueType&gt;(NativeType()),</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NativeType()))<sp/>{}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Explicit<sp/>initialization<sp/>from<sp/>another<sp/>StrongInt<sp/>type<sp/>that<sp/>has<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>of:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>ToType<sp/>StrongIntConvert(FromType<sp/>source,<sp/>ToType*);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>uses<sp/>Argument<sp/>Dependent<sp/>Lookup<sp/>(ADL)<sp/>to<sp/>find<sp/>which<sp/>function<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>Assume<sp/>you<sp/>have<sp/>two<sp/>StrongInt<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>DEFINE_STRONG_INT_TYPE(Bytes,<sp/>int64_t);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>DEFINE_STRONG_INT_TYPE(Megabytes,<sp/>int64_t);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>If<sp/>you<sp/>want<sp/>to<sp/>be<sp/>able<sp/>to<sp/>(explicitly)<sp/>construct<sp/>an<sp/>instance<sp/>of<sp/>Bytes<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>an<sp/>instance<sp/>of<sp/>Megabytes,<sp/>simply<sp/>define<sp/>a<sp/>converter<sp/>function<sp/>in<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>namespace<sp/>as<sp/>either<sp/>Bytes<sp/>or<sp/>Megabytes<sp/>(or<sp/>both):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Megabytes<sp/>StrongIntConvert(Bytes<sp/>arg,<sp/>Megabytes*<sp/>/*<sp/>unused<sp/>*/)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>Megabytes((arg<sp/>&gt;&gt;<sp/>20).value());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>The<sp/>second<sp/>argument<sp/>is<sp/>needed<sp/>to<sp/>differentiate<sp/>conversions,<sp/>and<sp/>it<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>passed<sp/>as<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgTagType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgNativeType,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgValidatorType&gt;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>StrongInt(</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StrongInt&lt;ArgTagType,<sp/>ArgNativeType,<sp/>ArgValidatorType&gt;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>to<sp/>pass<sp/>both<sp/>the<sp/>&quot;from&quot;<sp/>type<sp/>and<sp/>the<sp/>&quot;to&quot;<sp/>type<sp/>as<sp/>args<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conversions<sp/>to<sp/>be<sp/>differentiated.<sp/><sp/>The<sp/>converter<sp/>can<sp/>not<sp/>be<sp/>a<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>explicit<sp/>template<sp/>call<sp/>syntax<sp/>defeats<sp/>ADL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>StrongInt<sp/>*dummy<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>StrongInt<sp/>converted<sp/>=<sp/>StrongIntConvert(arg,<sp/>dummy);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>=<sp/>converted.value();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Explicit<sp/>initialization<sp/>from<sp/>a<sp/>numeric<sp/>primitive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_convertible&lt;T,<sp/>ValueType&gt;::value&gt;::type&gt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>StrongInt(T<sp/>init_value)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>value_((ValidatorType::template<sp/>ValidateInit&lt;ValueType&gt;(init_value),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;ValueType&gt;(init_value)))<sp/>{}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>default<sp/>copy<sp/>constructor,<sp/>assignment,<sp/>and<sp/>destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accesses<sp/>the<sp/>raw<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>ValueType<sp/>value()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_;<sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accesses<sp/>the<sp/>raw<sp/>value,<sp/>with<sp/>cast.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Primarily<sp/>for<sp/>compatibility<sp/>with<sp/>int-type.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValType&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>ValType<sp/>value()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ValType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value_);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Metadata<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ValueType<sp/>Max()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;ValueType&gt;::max();<sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ValueType<sp/>Min()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;ValueType&gt;::min();<sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unary<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StrongInt<sp/>operator+()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StrongInt(value_);<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StrongInt<sp/>operator-()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateNegate&lt;ValueType&gt;(value_);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StrongInt(-value_);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StrongInt<sp/>operator~()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateBitNot&lt;ValueType&gt;(value_);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StrongInt(ValueType(~value_));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>and<sp/>decrement<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>StrongInt<sp/>&amp;operator++()<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>++x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateAdd&lt;ValueType&gt;(value_,<sp/>ValueType(1));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>++value_;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StrongInt<sp/>operator++(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>postfix_flag)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>x++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateAdd&lt;ValueType&gt;(value_,<sp/>ValueType(1));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>StrongInt<sp/>temp(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>++value_;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>StrongInt<sp/>&amp;operator--()<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>--x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateSubtract&lt;ValueType&gt;(value_,<sp/>ValueType(1));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>--value_;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StrongInt<sp/>operator--(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>postfix_flag)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>x--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateSubtract&lt;ValueType&gt;(value_,<sp/>ValueType(1));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>StrongInt<sp/>temp(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>--value_;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Action-Assignment<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>StrongInt<sp/>&amp;operator+=(StrongInt<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateAdd&lt;ValueType&gt;(value_,<sp/>arg.value());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>+=<sp/>arg.value();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>StrongInt<sp/>&amp;operator-=(StrongInt<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateSubtract&lt;ValueType&gt;(value_,<sp/>arg.value());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>-=<sp/>arg.value();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgType&gt;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>StrongInt<sp/>&amp;operator*=(ArgType<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateMultiply&lt;ValueType,<sp/>ArgType&gt;(value_,<sp/>arg);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>*=<sp/>arg;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgType&gt;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>StrongInt<sp/>&amp;operator/=(ArgType<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateDivide&lt;ValueType,<sp/>ArgType&gt;(value_,<sp/>arg);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>/=<sp/>arg;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgType&gt;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>StrongInt<sp/>&amp;operator%=(ArgType<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateModulo&lt;ValueType,<sp/>ArgType&gt;(value_,<sp/>arg);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>%=<sp/>arg;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>StrongInt<sp/>&amp;operator&lt;&lt;=(int64_t<sp/>arg)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(whitespace/operators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateLeftShift&lt;ValueType&gt;(value_,<sp/>arg);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>&lt;&lt;=<sp/>arg;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>StrongInt<sp/>&amp;operator&gt;&gt;=(int64_t<sp/>arg)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(whitespace/operators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateRightShift&lt;ValueType&gt;(value_,<sp/>arg);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>&gt;&gt;=<sp/>arg;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>StrongInt<sp/>&amp;operator&amp;=(StrongInt<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateBitAnd&lt;ValueType&gt;(value_,<sp/>arg.value());</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>&amp;=<sp/>arg.value();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>StrongInt<sp/>&amp;operator|=(StrongInt<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateBitOr&lt;ValueType&gt;(value_,<sp/>arg.value());</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>|=<sp/>arg.value();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>StrongInt<sp/>&amp;operator^=(StrongInt<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidatorType::template<sp/>ValidateBitXor&lt;ValueType&gt;(value_,<sp/>arg.value());</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>value_<sp/>^=<sp/>arg.value();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>integer<sp/>value<sp/>of<sp/>type<sp/>ValueType.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>ValueType<sp/>value_;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(std::is_integral&lt;ValueType&gt;::value,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>integer<sp/>type<sp/>for<sp/>strong<sp/>int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal">};</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Provide<sp/>the<sp/>&lt;&lt;<sp/>operator,<sp/>primarily<sp/>for<sp/>logging<sp/>purposes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TagType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Val</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">atorType&gt;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">std::ostream<sp/>&amp;operator&lt;&lt;(std::ostream<sp/>&amp;os,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StrongInt&lt;TagType,<sp/>ValueType,<sp/>ValidatorType&gt;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>arg.value();</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Provide<sp/>the<sp/>&lt;&lt;<sp/>operator,<sp/>primarily<sp/>for<sp/>logging<sp/>purposes.<sp/>Specialized<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int8_t<sp/>so<sp/>that<sp/>an<sp/>integer<sp/>and<sp/>not<sp/>a<sp/>character<sp/>is<sp/>printed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TagType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Val</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">atorType&gt;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">std::ostream<sp/>&amp;operator&lt;&lt;(std::ostream<sp/>&amp;os,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StrongInt&lt;TagType,<sp/>int8_t,<sp/>ValidatorType&gt;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>static_cast&lt;int&gt;(arg.value());</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Provide<sp/>the<sp/>&lt;&lt;<sp/>operator,<sp/>primarily<sp/>for<sp/>logging<sp/>purposes.<sp/>Specialized<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint8_t<sp/>so<sp/>that<sp/>an<sp/>integer<sp/>and<sp/>not<sp/>a<sp/>character<sp/>is<sp/>printed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TagType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Val</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">atorType&gt;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">std::ostream<sp/>&amp;operator&lt;&lt;(std::ostream<sp/>&amp;os,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StrongInt&lt;TagType,<sp/>uint8_t,<sp/>ValidatorType&gt;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>static_cast&lt;unsigned<sp/>int&gt;(arg.value());</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>operators<sp/>that<sp/>take<sp/>two<sp/>StrongInt<sp/>arguments.<sp/>These<sp/>operators<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defined<sp/>in<sp/>terms<sp/>of<sp/>their<sp/>op-equal<sp/>member<sp/>function<sp/>cousins.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRONG_INT_VS_STRONG_INT_BINARY_OP(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>TagType,<sp/>typename<sp/>ValueType,<sp/>typename<sp/>ValidatorType&gt;<sp/>\</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor"><sp/><sp/>inline<sp/>StrongInt&lt;TagType,<sp/>ValueType,<sp/>ValidatorType&gt;<sp/>operator<sp/>op(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>StrongInt&lt;TagType,<sp/>ValueType,<sp/>ValidatorType&gt;<sp/>lhs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>StrongInt&lt;TagType,<sp/>ValueType,<sp/>ValidatorType&gt;<sp/>rhs)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>lhs<sp/>op##<sp/>=<sp/>rhs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="393"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>lhs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="394"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">STRONG_INT_VS_STRONG_INT_BINARY_OP(+)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">STRONG_INT_VS_STRONG_INT_BINARY_OP(-)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">STRONG_INT_VS_STRONG_INT_BINARY_OP(&amp;)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">STRONG_INT_VS_STRONG_INT_BINARY_OP(|)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">STRONG_INT_VS_STRONG_INT_BINARY_OP(^)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STRONG_INT_VS_STRONG_INT_BINARY_OP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>operators<sp/>that<sp/>take<sp/>one<sp/>StrongInt<sp/>and<sp/>one<sp/>native<sp/>integer<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>operators<sp/>are<sp/>defined<sp/>in<sp/>terms<sp/>of<sp/>their<sp/>op-equal<sp/>member<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cousins,<sp/>mostly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRONG_INT_VS_NUMERIC_BINARY_OP(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>TagType,<sp/>typename<sp/>ValueType,<sp/>typename<sp/>ValidatorType,<sp/>\</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>NumType&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"><sp/><sp/>inline<sp/>StrongInt&lt;TagType,<sp/>ValueType,<sp/>ValidatorType&gt;<sp/>operator<sp/>op(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>StrongInt&lt;TagType,<sp/>ValueType,<sp/>ValidatorType&gt;<sp/>lhs,<sp/>NumType<sp/>rhs)<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>lhs<sp/>op##<sp/>=<sp/>rhs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>lhs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>used<sp/>for<sp/>commutative<sp/>operators<sp/>between<sp/>one<sp/>StrongInt<sp/>and<sp/>one<sp/>native</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/>integer<sp/>argument.<sp/><sp/>That<sp/>is<sp/>a<sp/>long<sp/>way<sp/>of<sp/>saying<sp/>&quot;multiplication&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUMERIC_VS_STRONG_INT_BINARY_OP(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>TagType,<sp/>typename<sp/>ValueType,<sp/>typename<sp/>ValidatorType,<sp/>\</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>NumType&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"><sp/><sp/>inline<sp/>StrongInt&lt;TagType,<sp/>ValueType,<sp/>ValidatorType&gt;<sp/>operator<sp/>op(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>NumType<sp/>lhs,<sp/>StrongInt&lt;TagType,<sp/>ValueType,<sp/>ValidatorType&gt;<sp/>rhs)<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>rhs<sp/>op##<sp/>=<sp/>lhs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>rhs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">STRONG_INT_VS_NUMERIC_BINARY_OP(*)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">NUMERIC_VS_STRONG_INT_BINARY_OP(*)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">STRONG_INT_VS_NUMERIC_BINARY_OP(/)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">STRONG_INT_VS_NUMERIC_BINARY_OP(%)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">STRONG_INT_VS_NUMERIC_BINARY_OP(&lt;&lt;)<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(whitespace/operators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal">STRONG_INT_VS_NUMERIC_BINARY_OP(&gt;&gt;)<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(whitespace/operators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STRONG_INT_VS_NUMERIC_BINARY_OP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>NUMERIC_VS_STRONG_INT_BINARY_OP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>comparison<sp/>operators.<sp/><sp/>We<sp/>allow<sp/>all<sp/>comparison<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRONG_INT_COMPARISON_OP(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>TagType,<sp/>typename<sp/>ValueType,<sp/>typename<sp/>ValidatorType&gt;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"><sp/><sp/>inline<sp/>bool<sp/>operator<sp/>op(StrongInt&lt;TagType,<sp/>ValueType,<sp/>ValidatorType&gt;<sp/>lhs,<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StrongInt&lt;TagType,<sp/>ValueType,<sp/>ValidatorType&gt;<sp/>rhs)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>lhs.value()<sp/>op<sp/>rhs.value();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal">STRONG_INT_COMPARISON_OP(==)<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(whitespace/operators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal">STRONG_INT_COMPARISON_OP(!=)<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(whitespace/operators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal">STRONG_INT_COMPARISON_OP(&lt;)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(whitespace/operators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal">STRONG_INT_COMPARISON_OP(&lt;=)<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(whitespace/operators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal">STRONG_INT_COMPARISON_OP(&gt;)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(whitespace/operators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">STRONG_INT_COMPARISON_OP(&gt;=)<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(whitespace/operators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STRONG_INT_COMPARISON_OP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>intops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mediapipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>MEDIAPIPE_DEPS_STRONG_INT_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/strong_int.h"/>
  </compounddef>
</doxygen>
