<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="input__stream__manager_8h" kind="file" language="C++">
    <compoundname>input_stream_manager.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">deque</includes>
    <includes local="no">functional</includes>
    <includes local="no">list</includes>
    <includes local="no">string</includes>
    <includes local="yes">absl/base/thread_annotations.h</includes>
    <includes local="yes">absl/synchronization/mutex.h</includes>
    <includes refid="packet_8h" local="yes">mediapipe/framework/packet.h</includes>
    <includes refid="packet__type_8h" local="yes">mediapipe/framework/packet_type.h</includes>
    <includes refid="port_8h" local="yes">mediapipe/framework/port.h</includes>
    <includes refid="port_2status_8h" local="yes">mediapipe/framework/port/status.h</includes>
    <includes refid="timestamp_8h" local="yes">mediapipe/framework/timestamp.h</includes>
    <includedby refid="calculator__graph_8cc" local="yes">/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_graph.cc</includedby>
    <includedby refid="calculator__node_8cc" local="yes">/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_node.cc</includedby>
    <includedby refid="graph__output__stream_8h" local="yes">/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/graph_output_stream.h</includedby>
    <includedby refid="input__stream__handler_8h" local="yes">/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/input_stream_handler.h</includedby>
    <includedby refid="input__stream__manager_8cc" local="yes">/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/input_stream_manager.cc</includedby>
    <incdepgraph>
      <node id="77">
        <label>mediapipe/framework/collection.h</label>
        <link refid="collection_8h_source"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>mediapipe/framework/collection_item_id.h</label>
        <link refid="collection__item__id_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>mediapipe/framework/demangle.h</label>
        <link refid="demangle_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>mediapipe/framework/deps/canonical_errors.h</label>
        <link refid="deps_2canonical__errors_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>mediapipe/framework/deps/no_destructor.h</label>
        <link refid="no__destructor_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>mediapipe/framework/deps/registration.h</label>
        <link refid="registration_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>mediapipe/framework/deps/registration_token.h</label>
        <link refid="registration__token_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>mediapipe/framework/deps/safe_int.h</label>
        <link refid="safe__int_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>mediapipe/framework/deps/source_location.h</label>
        <link refid="deps_2source__location_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>mediapipe/framework/deps/status.h</label>
        <link refid="deps_2status_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>mediapipe/framework/deps/status_builder.h</label>
        <link refid="deps_2status__builder_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>mediapipe/framework/deps/status_macros.h</label>
        <link refid="deps_2status__macros_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>mediapipe/framework/deps/strong_int.h</label>
        <link refid="strong__int_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/input_stream_manager.h</label>
        <link refid="input__stream__manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>mediapipe/framework/packet.h</label>
        <link refid="packet_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>mediapipe/framework/packet_set.h</label>
        <link refid="packet__set_8h_source"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>mediapipe/framework/packet_type.h</label>
        <link refid="packet__type_8h_source"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>mediapipe/framework/port.h</label>
        <link refid="port_8h_source"/>
      </node>
      <node id="35">
        <label>mediapipe/framework/port/canonical_errors.h</label>
        <link refid="port_2canonical__errors_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>mediapipe/framework/port/core_proto_inc.h</label>
        <link refid="core__proto__inc_8h_source"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>mediapipe/framework/port/logging.h</label>
        <link refid="logging_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>mediapipe/framework/port/port.h</label>
        <link refid="port_2port_8h_source"/>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>mediapipe/framework/port/proto_ns.h</label>
        <link refid="proto__ns_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>mediapipe/framework/port/status.h</label>
        <link refid="port_2status_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>mediapipe/framework/port/status_builder.h</label>
        <link refid="port_2status__builder_8h_source"/>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>mediapipe/framework/port/status_macros.h</label>
        <link refid="port_2status__macros_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>mediapipe/framework/port/statusor.h</label>
        <link refid="statusor_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>mediapipe/framework/timestamp.h</label>
        <link refid="timestamp_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>mediapipe/framework/tool/status_util.h</label>
        <link refid="status__util_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>mediapipe/framework/tool/tag_map.h</label>
        <link refid="tag__map_8h_source"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>mediapipe/framework/tool/tag_map_helper.h</label>
        <link refid="tag__map__helper_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>mediapipe/framework/tool/type_util.h</label>
        <link refid="type__util_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>mediapipe/framework/tool/validate_name.h</label>
        <link refid="validate__name_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>mediapipe/framework/type_map.h</label>
        <link refid="type__map_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>mediapipe/util/unused.hpp</label>
        <link refid="unused_8hpp_source"/>
      </node>
      <node id="39">
        <label>absl/base/attributes.h</label>
      </node>
      <node id="14">
        <label>absl/base/macros.h</label>
      </node>
      <node id="66">
        <label>absl/base/port.h</label>
      </node>
      <node id="7">
        <label>absl/base/thread_annotations.h</label>
      </node>
      <node id="82">
        <label>absl/container/btree_map.h</label>
      </node>
      <node id="27">
        <label>absl/container/flat_hash_map.h</label>
      </node>
      <node id="28">
        <label>absl/container/flat_hash_set.h</label>
      </node>
      <node id="15">
        <label>absl/log/absl_check.h</label>
      </node>
      <node id="16">
        <label>absl/log/absl_log.h</label>
      </node>
      <node id="17">
        <label>absl/memory/memory.h</label>
      </node>
      <node id="29">
        <label>absl/meta/type_traits.h</label>
      </node>
      <node id="40">
        <label>absl/status/status.h</label>
      </node>
      <node id="18">
        <label>absl/status/statusor.h</label>
      </node>
      <node id="45">
        <label>absl/strings/has_ostream_operator.h</label>
      </node>
      <node id="19">
        <label>absl/strings/str_cat.h</label>
      </node>
      <node id="30">
        <label>absl/strings/str_join.h</label>
      </node>
      <node id="31">
        <label>absl/strings/str_split.h</label>
      </node>
      <node id="32">
        <label>absl/strings/string_view.h</label>
      </node>
      <node id="8">
        <label>absl/synchronization/mutex.h</label>
      </node>
      <node id="44">
        <label>absl/time/time.h</label>
      </node>
      <node id="76">
        <label>absl/types/span.h</label>
      </node>
      <node id="23">
        <label>algorithm</label>
      </node>
      <node id="60">
        <label>cmath</label>
      </node>
      <node id="10">
        <label>cstddef</label>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="78">
        <label>cstdlib</label>
      </node>
      <node id="3">
        <label>deque</label>
      </node>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="46">
        <label>glog/logging.h</label>
      </node>
      <node id="84">
        <label>google/protobuf/io/tokenizer.h</label>
      </node>
      <node id="49">
        <label>google/protobuf/message.h</label>
      </node>
      <node id="50">
        <label>google/protobuf/message_lite.h</label>
      </node>
      <node id="51">
        <label>google/protobuf/repeated_field.h</label>
      </node>
      <node id="85">
        <label>google/protobuf/text_format.h</label>
      </node>
      <node id="38">
        <label>iosfwd</label>
      </node>
      <node id="79">
        <label>iterator</label>
      </node>
      <node id="63">
        <label>limits</label>
      </node>
      <node id="62">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>list</label>
      </node>
      <node id="72">
        <label>map</label>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
      <node id="12">
        <label>ostream</label>
      </node>
      <node id="75">
        <label>set</label>
      </node>
      <node id="55">
        <label>sstream</label>
      </node>
      <node id="70">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="24">
        <label>tuple</label>
      </node>
      <node id="13">
        <label>type_traits</label>
      </node>
      <node id="68">
        <label>typeinfo</label>
      </node>
      <node id="25">
        <label>unordered_map</label>
      </node>
      <node id="26">
        <label>unordered_set</label>
      </node>
      <node id="21">
        <label>utility</label>
      </node>
      <node id="34">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/hand_tracking_publisher.hpp</label>
        <link refid="hand__tracking__publisher_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/core/begin_loop_calculator.h</label>
        <link refid="begin__loop__calculator_8h_source"/>
      </node>
      <node id="8">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/core/clip_vector_size_calculator.h</label>
        <link refid="clip__vector__size__calculator_8h_source"/>
      </node>
      <node id="9">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/core/end_loop_calculator.h</label>
        <link refid="end__loop__calculator_8h_source"/>
      </node>
      <node id="10">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/core/split_vector_calculator.h</label>
        <link refid="split__vector__calculator_8h_source"/>
      </node>
      <node id="11">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/image_to_tensor_converter_gl_buffer.h</label>
        <link refid="image__to__tensor__converter__gl__buffer_8h_source"/>
      </node>
      <node id="12">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/image_to_tensor_converter_gl_texture.h</label>
        <link refid="image__to__tensor__converter__gl__texture_8h_source"/>
      </node>
      <node id="13">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/image_to_tensor_converter_opencv.h</label>
        <link refid="image__to__tensor__converter__opencv_8h_source"/>
      </node>
      <node id="14">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator.h</label>
        <link refid="inference__calculator_8h_source"/>
      </node>
      <node id="15">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/association_calculator.h</label>
        <link refid="association__calculator_8h_source"/>
      </node>
      <node id="16">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/collection_has_min_size_calculator.h</label>
        <link refid="collection__has__min__size__calculator_8h_source"/>
      </node>
      <node id="17">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/detections_to_rects_calculator.h</label>
        <link refid="detections__to__rects__calculator_8h_source"/>
      </node>
      <node id="18">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/filter_collection_calculator.h</label>
        <link refid="filter__collection__calculator_8h_source"/>
      </node>
      <node id="19">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/landmarks_to_render_data_calculator.h</label>
        <link refid="landmarks__to__render__data__calculator_8h_source"/>
      </node>
      <node id="6">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_framework.h</label>
        <link refid="calculator__framework_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_graph.h</label>
        <link refid="calculator__graph_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_node.h</label>
        <link refid="calculator__node_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/graph_output_stream.h</label>
        <link refid="graph__output__stream_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/input_stream_handler.h</label>
        <link refid="input__stream__handler_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/input_stream_manager.h</label>
        <link refid="input__stream__manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/output_stream_poller.h</label>
        <link refid="output__stream__poller_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/scheduler.h</label>
        <link refid="scheduler_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/stream_handler/default_input_stream_handler.h</label>
        <link refid="default__input__stream__handler_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/stream_handler/fixed_size_input_stream_handler.h</label>
        <link refid="fixed__size__input__stream__handler_8h_source"/>
      </node>
      <node id="21">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/stream_handler/immediate_input_stream_handler.h</label>
        <link refid="immediate__input__stream__handler_8h_source"/>
      </node>
      <node id="22">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/container_util.h</label>
        <link refid="container__util_8h_source"/>
      </node>
      <node id="28">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_service.h</label>
        <link refid="gpu__service_8h_source"/>
      </node>
      <node id="27">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h</label>
        <link refid="gpu__shared__data__internal_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/plugin.hpp</label>
        <link refid="plugin_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmediapipe_1_1InputStreamManager" prot="public">mediapipe::InputStreamManager</innerclass>
    <innernamespace refid="namespacemediapipe">mediapipe</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>The<sp/>MediaPipe<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEDIAPIPE_FRAMEWORK_INPUT_STREAM_MANAGER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEDIAPIPE_FRAMEWORK_INPUT_STREAM_MANAGER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;absl/base/thread_annotations.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;absl/synchronization/mutex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/packet.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/packet_type.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/port/status.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/timestamp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mediapipe<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>OutputStreamManager<sp/>will<sp/>add<sp/>packets<sp/>to<sp/>InputStreamManager<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>InputStreamHandler<sp/>as<sp/>they<sp/>are<sp/>output.<sp/><sp/>A<sp/>CalculatorNode<sp/>prepares<sp/>the<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>packets<sp/>for<sp/>a<sp/>particular<sp/>invocation<sp/>by<sp/>calling<sp/>InputStreamManager&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PopPacketAtTimestamp()<sp/>or<sp/>PopQueueHead()<sp/>function<sp/>through<sp/>InputStreamHandler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>InputStreamManager<sp/>may<sp/>be<sp/>closed<sp/>by<sp/>the<sp/>consumer.<sp/>When<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>InputStreamManager<sp/>is<sp/>closed,<sp/>any<sp/>further<sp/>modifications<sp/>to<sp/>it<sp/>by<sp/>the<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>silently<sp/>ignored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>input<sp/>stream<sp/>is<sp/>written<sp/>to<sp/>by<sp/>exactly<sp/>one<sp/>output<sp/>stream<sp/>and<sp/>is<sp/>read<sp/>by<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>single<sp/>node.<sp/>None<sp/>of<sp/>its<sp/>methods<sp/>should<sp/>hold<sp/>a<sp/>lock<sp/>when<sp/>they<sp/>invoke<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>callback<sp/>in<sp/>the<sp/>scheduler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">InputStreamManager<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>type<sp/>for<sp/>becomes_full_callback<sp/>and<sp/>becomes_not_full_callback.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>arguments<sp/>are<sp/>the<sp/>input<sp/>stream<sp/>manager<sp/>and<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>last_reported_stream_full_.<sp/><sp/>The<sp/>value<sp/>of<sp/>last_reported_stream_full_<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>maintained<sp/>by<sp/>the<sp/>callback.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::function&lt;void(InputStreamManager*,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*)&gt;<sp/>QueueSizeCallback;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>InputStreamManager(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputStreamManager&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>InputStreamManager&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputStreamManager&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>InputStreamManager()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initializes<sp/>the<sp/>InputStreamManager.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>absl::Status<sp/>Initialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PacketType*<sp/>packet_type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>back_edge);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>stream<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>Name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>input<sp/>stream<sp/>is<sp/>a<sp/>back<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>BackEdge()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>back_edge_;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>header<sp/>Packet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>absl::Status<sp/>SetHeader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Packet&amp;<sp/>header);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Packet&amp;<sp/>Header()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header_;<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>input<sp/>stream<sp/>for<sp/>another<sp/>run<sp/>of<sp/>the<sp/>graph<sp/>(i.e.<sp/>another</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>image/video/audio).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrepareForRun()<sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>list<sp/>of<sp/>timestamped<sp/>packets.<sp/>Sets<sp/>&quot;notify&quot;<sp/>to<sp/>true<sp/>if<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>becomes<sp/>non-empty.<sp/>Does<sp/>nothing<sp/>if<sp/>the<sp/>input<sp/>stream<sp/>is<sp/>closed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>timestamp<sp/>of<sp/>each<sp/>packet<sp/>must<sp/>satisfy<sp/>Timestamp::IsAllowedInStream().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unless<sp/>DisableTimestamps()<sp/>is<sp/>called,<sp/>packet<sp/>timestamps<sp/>must<sp/>meet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>additional<sp/>requirements:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>The<sp/>timestamp<sp/>of<sp/>each<sp/>packet<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>those<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>previously<sp/>added<sp/>Packets,<sp/>and<sp/>not<sp/>less<sp/>than<sp/>the<sp/>next<sp/>timestamp<sp/>bound.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>If<sp/>a<sp/>packet<sp/>has<sp/>the<sp/>timestamp<sp/>Timestamp::PreStream()<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Timestamp::PostStream(),<sp/>the<sp/>packet<sp/>must<sp/>be<sp/>the<sp/>only<sp/>packet<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Violation<sp/>of<sp/>any<sp/>of<sp/>these<sp/>conditions<sp/>causes<sp/>an<sp/>error<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>absl::Status<sp/>AddPackets(const<sp/><ref refid="namespacestd" kindref="compound">std</ref>::list&lt;Packet&gt;&amp;<sp/>container,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>notify)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>a<sp/>list<sp/>of<sp/>timestamped<sp/>packets.<sp/>Sets<sp/>&quot;notify&quot;<sp/>to<sp/>true<sp/>if<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>becomes<sp/>non-empty.<sp/>Does<sp/>nothing<sp/>if<sp/>the<sp/>input<sp/>stream<sp/>is<sp/>closed.<sp/>After<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>move,<sp/>all<sp/>packets<sp/>in<sp/>the<sp/>container<sp/>must<sp/>be<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>absl::Status<sp/>MovePackets(<ref refid="namespacestd" kindref="compound">std</ref>::list&lt;Packet&gt;*<sp/>container,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>notify)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Closes<sp/>the<sp/>input<sp/>stream.<sp/><sp/>This<sp/>function<sp/>can<sp/>be<sp/>called<sp/>multiple<sp/>times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Close()<sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>bound<sp/>on<sp/>the<sp/>next<sp/>timestamp<sp/>to<sp/>be<sp/>added<sp/>to<sp/>the<sp/>input<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>&quot;notify&quot;<sp/>to<sp/>true<sp/>if<sp/>the<sp/>bound<sp/>is<sp/>advanced<sp/>while<sp/>the<sp/>packet<sp/>queue<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>empty.<sp/>Returns<sp/>an<sp/>error<sp/>status<sp/>if<sp/>this<sp/>decreases<sp/>the<sp/>bound,<sp/>unless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DisableTimestamps()<sp/>is<sp/>called.<sp/>Does<sp/>nothing<sp/>if<sp/>the<sp/>input<sp/>stream<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>closed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>absl::Status<sp/>SetNextTimestampBound(Timestamp<sp/>bound,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>notify)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>smallest<sp/>timestamp<sp/>at<sp/>which<sp/>we<sp/>might<sp/>see<sp/>an<sp/>input<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>input<sp/>stream.<sp/>This<sp/>is<sp/>the<sp/>timestamp<sp/>of<sp/>the<sp/>first<sp/>item<sp/>in<sp/>the<sp/>queue<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>queue<sp/>is<sp/>non-empty,<sp/>or<sp/>the<sp/>next<sp/>timestamp<sp/>bound<sp/>if<sp/>it<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>is_empty<sp/>to<sp/>queue_.empty()<sp/>if<sp/>it<sp/>is<sp/>not<sp/>nullptr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>Timestamp<sp/>MinTimestampOrBound(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>is_empty)<sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Turns<sp/>off<sp/>the<sp/>use<sp/>of<sp/>packet<sp/>timestamps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DisableTimestamps();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>the<sp/>queue<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsEmpty()<sp/>const<sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>queue<sp/>is<sp/>not<sp/>empty,<sp/>returns<sp/>the<sp/>packet<sp/>at<sp/>the<sp/>front<sp/>of<sp/>the<sp/>queue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>returns<sp/>an<sp/>empty<sp/>packet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>Packet<sp/>QueueHead()<sp/>const<sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advances<sp/>time<sp/>to<sp/>timestamp.<sp/><sp/>Pops<sp/>and<sp/>returns<sp/>the<sp/>packet<sp/>in<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>matching<sp/>timestamp,<sp/>if<sp/>it<sp/>exists.<sp/><sp/>Time<sp/>can<sp/>be<sp/>advanced<sp/>to<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>timestamp,<sp/>however,<sp/>packets<sp/>will<sp/>be<sp/>lost<sp/>if<sp/>they<sp/>are<sp/>skipped<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>MinTimestampOrBound()<sp/>to<sp/>determine<sp/>what<sp/>the<sp/>next<sp/>timestamp<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>processed<sp/>at<sp/>should<sp/>be.<sp/><sp/>Each<sp/>call<sp/>to<sp/>PopPacketAtTimestamp()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>have<sp/>a<sp/>timestamp<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>the<sp/>last.<sp/><sp/>Sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;num_packets_dropped&quot;<sp/>to<sp/>the<sp/>total<sp/>number<sp/>of<sp/>packets<sp/>that<sp/>were<sp/>dropped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(skipped<sp/>over).<sp/>Sets<sp/>&quot;stream_is_done&quot;<sp/>if<sp/><sp/>the<sp/>next<sp/>timestamp<sp/>bound<sp/>reaches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Timestamp::Done()<sp/>after<sp/>the<sp/>pop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>Packet<sp/>PopPacketAtTimestamp(Timestamp<sp/>timestamp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>num_packets_dropped,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>stream_is_done)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pops<sp/>and<sp/>returns<sp/>the<sp/>packet<sp/>at<sp/>the<sp/>head<sp/>of<sp/>the<sp/>queue<sp/>if<sp/>the<sp/>queue<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-empty.<sp/>Sets<sp/>&quot;stream_is_done&quot;<sp/>if<sp/><sp/>the<sp/>next<sp/>timestamp<sp/>bound<sp/>reaches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Timestamp::Done()<sp/>after<sp/>the<sp/>pop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>Packet<sp/>PopQueueHead(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>stream_is_done)<sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>packets<sp/>in<sp/>the<sp/>queue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumPacketsAdded()<sp/>const<sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>packets<sp/>in<sp/>the<sp/>queue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QueueSize()<sp/>const<sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>the<sp/>queue<sp/>is<sp/>full.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsFull()<sp/>const<sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>max<sp/>queue<sp/>size.<sp/>-1<sp/>indicates<sp/>that<sp/>there<sp/>is<sp/>no<sp/>maximum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxQueueSize()<sp/>const<sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>maximum<sp/>queue<sp/>size<sp/>for<sp/>the<sp/>stream.<sp/>Used<sp/>to<sp/>determine<sp/>when<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>callbacks<sp/>for<sp/>becomes_full<sp/>and<sp/>becomes_not_full<sp/>should<sp/>be<sp/>invoked.<sp/>A<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>-1<sp/>means<sp/>that<sp/>there<sp/>is<sp/>no<sp/>maximum<sp/>queue<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMaxQueueSize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_queue_size)<sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>equal<sp/>to<sp/>or<sp/>more<sp/>than<sp/>n<sp/>packets<sp/>in<sp/>the<sp/>queue,<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>min<sp/>timestamp<sp/>of<sp/>among<sp/>the<sp/>latest<sp/>n<sp/>packets<sp/>of<sp/>the<sp/>queue.<sp/><sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>are<sp/>fewer<sp/>than<sp/>n<sp/>packets<sp/>in<sp/>the<sp/>queue,<sp/>this<sp/>function<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Timestamp::Unset().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>This<sp/>is<sp/>a<sp/>public<sp/>API<sp/>intended<sp/>for<sp/>FixedSizeInputStreamHandler<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>Timestamp<sp/>GetMinTimestampAmongNLatest(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>const</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pop_front()s<sp/>packets<sp/>that<sp/>are<sp/>earlier<sp/>than<sp/>the<sp/>given<sp/>timestamp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>This<sp/>is<sp/>a<sp/>public<sp/>API<sp/>intended<sp/>for<sp/>FixedSizeInputStreamHandler<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ErasePacketsEarlierThan(Timestamp<sp/>timestamp)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>maximum<sp/>queue<sp/>size<sp/>is<sp/>specified<sp/>(!=<sp/>-1),<sp/>these<sp/>callbacks<sp/>that<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>invoked<sp/>when<sp/>the<sp/>input<sp/>queue<sp/>becomes<sp/>full<sp/>(&gt;=<sp/>max_queue_size_)<sp/>or<sp/>when<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>becomes<sp/>non-full<sp/>(&lt;<sp/>max_queue_size_).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetQueueSizeCallbacks(QueueSizeCallback<sp/>becomes_full_callback,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QueueSizeCallback<sp/>becomes_not_full_callback);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/>private:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>or<sp/>moves<sp/>a<sp/>list<sp/>of<sp/>timestamped<sp/>packets.<sp/>Sets<sp/>&quot;notify&quot;<sp/>to<sp/>true<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>queue<sp/>becomes<sp/>non-empty.<sp/>Returns<sp/>an<sp/>error<sp/>if<sp/>the<sp/>packets<sp/>have<sp/>errors.<sp/>Does</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>if<sp/>the<sp/>input<sp/>stream<sp/>is<sp/>closed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>caller<sp/>is<sp/>AddPackets(),<sp/>Container<sp/>must<sp/>be<sp/>const<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>the<sp/>caller<sp/>must<sp/>be<sp/>MovePackets()<sp/>and<sp/>Container<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-const<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>Container&gt;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>absl::Status<sp/>AddOrMovePacketsInternal(Container<sp/>container,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>notify)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ABSL_LOCKS_EXCLUDED(stream_mutex_);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>next<sp/>timestamp<sp/>bound<sp/>reaches<sp/>Timestamp::Done().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsDone()<sp/>const<sp/>ABSL_EXCLUSIVE_LOCKS_REQUIRED(stream_mutex_);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>smallest<sp/>timestamp<sp/>at<sp/>which<sp/>this<sp/>stream<sp/>might<sp/>see<sp/>an<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>Timestamp<sp/>MinTimestampOrBoundHelper()<sp/>const;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>mutable<sp/>absl::Mutex<sp/>stream_mutex_;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::deque&lt;Packet&gt;<sp/>queue_<sp/>ABSL_GUARDED_BY(stream_mutex_);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>packets<sp/>added<sp/>to<sp/>queue_.<sp/><sp/>Used<sp/>to<sp/>verify<sp/>a<sp/>packet<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Timestamp::PostStream()<sp/>is<sp/>the<sp/>only<sp/>Packet<sp/>in<sp/>the<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>int64_t<sp/>num_packets_added_<sp/>ABSL_GUARDED_BY(stream_mutex_);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>Timestamp<sp/>next_timestamp_bound_<sp/>ABSL_GUARDED_BY(stream_mutex_);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>|timestamp|<sp/>argument<sp/>passed<sp/>to<sp/>the<sp/>last<sp/>SelectAtTimestamp()<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignored<sp/>if<sp/>enable_timestamps_<sp/>is<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>Timestamp<sp/>last_select_timestamp_<sp/>ABSL_GUARDED_BY(stream_mutex_);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed_<sp/>ABSL_GUARDED_BY(stream_mutex_);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>True<sp/>if<sp/>packet<sp/>timestamps<sp/>are<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_timestamps_<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name_;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>const<sp/>PacketType*<sp/>packet_type_;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>back_edge_;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>header<sp/>packet<sp/>of<sp/>the<sp/>input<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>Packet<sp/>header_;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>queue<sp/>size<sp/>for<sp/>this<sp/>stream<sp/>if<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_queue_size_<sp/>ABSL_GUARDED_BY(stream_mutex_)<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Callback<sp/>to<sp/>notify<sp/>the<sp/>framework<sp/>that<sp/>we<sp/>have<sp/>hit<sp/>the<sp/>maximum<sp/>queue<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>QueueSizeCallback<sp/>becomes_full_callback_;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Callback<sp/>to<sp/>notify<sp/>the<sp/>framework<sp/>that<sp/>the<sp/>queue<sp/>size<sp/>has<sp/>becomes<sp/>less<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>maximum<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>QueueSizeCallback<sp/>becomes_not_full_callback_;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>variable<sp/>is<sp/>used<sp/>by<sp/>the<sp/>QueueSizeCallback<sp/>to<sp/>record<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fullness<sp/>reported<sp/>in<sp/>the<sp/>last<sp/>completed<sp/>QueueSizeCallback.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>variable<sp/>is<sp/>only<sp/>accessed<sp/>during<sp/>the<sp/>QueueSizeCallback.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>last_reported_stream_full_<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mediapipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>MEDIAPIPE_FRAMEWORK_INPUT_STREAM_MANAGER_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/input_stream_manager.h"/>
  </compounddef>
</doxygen>
