<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmediapipe_1_1GpuBuffer_1_1StorageHolder" kind="class" language="C++" prot="private">
    <compoundname>mediapipe::GpuBuffer::StorageHolder</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a9ac9cc4deb19bc41fc4941d55d02b5f9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mediapipe::GpuBuffer::StorageHolder::width_</definition>
        <argsstring></argsstring>
        <name>width_</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::width_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="185" column="9" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a4258d3c6091c6841322ccbcab08dfe5d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mediapipe::GpuBuffer::StorageHolder::height_</definition>
        <argsstring></argsstring>
        <name>height_</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::height_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="186" column="9" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1aad09006194bf54c6e11768cf9d14fc72" prot="private" static="no" mutable="no">
        <type>GpuBufferFormat</type>
        <definition>GpuBufferFormat mediapipe::GpuBuffer::StorageHolder::format_</definition>
        <argsstring></argsstring>
        <name>format_</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::format_</qualifiedname>
        <initializer>= GpuBufferFormat::kUnknown</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="187" column="21" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a4998a4e7b5b6c4e947b0ddc2c997fcab" prot="private" static="no" mutable="yes">
        <type>absl::Mutex</type>
        <definition>absl::Mutex mediapipe::GpuBuffer::StorageHolder::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::mutex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="190" column="25" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" bodystart="190" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1aebe55d294a5a32c2855a421c100ee187" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::GpuBuffer::StorageHolder::StorageHolder</definition>
        <argsstring>(std::shared_ptr&lt; internal::GpuBufferStorage &gt; storage)</argsstring>
        <name>StorageHolder</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::StorageHolder</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; internal::GpuBufferStorage &gt;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="159" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" bodystart="159" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a1ec4b0355bb60e0dae286150b31291a8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::GpuBuffer::StorageHolder::StorageHolder</definition>
        <argsstring>(int width, int height, Format format)</argsstring>
        <name>StorageHolder</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::StorageHolder</qualifiedname>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>Format</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="164" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" bodystart="164" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a800a5be03139d9b61eae67c59421e7d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mediapipe::GpuBuffer::StorageHolder::width</definition>
        <argsstring>() const</argsstring>
        <name>width</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::width</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="167" column="9" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a7c1a0790bc6f1810fb1ae095b19ca5cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mediapipe::GpuBuffer::StorageHolder::height</definition>
        <argsstring>() const</argsstring>
        <name>height</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::height</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="168" column="9" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a33717cbf849f5816e65493e467b83f18" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GpuBufferFormat</type>
        <definition>GpuBufferFormat mediapipe::GpuBuffer::StorageHolder::format</definition>
        <argsstring>() const</argsstring>
        <name>format</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="169" column="21" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1aa594308bf29feb7bece0cbbc460eccd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>internal::GpuBufferStorage *</type>
        <definition>internal::GpuBufferStorage * mediapipe::GpuBuffer::StorageHolder::GetStorageForView</definition>
        <argsstring>(TypeId view_provider_type, bool for_writing) const</argsstring>
        <name>GetStorageForView</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::GetStorageForView</qualifiedname>
        <param>
          <type>TypeId</type>
          <declname>view_provider_type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>for_writing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="171" column="32" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.cc" bodystart="40" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1ad6c799d3615a961b75faa5aad4c6bbb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; T &gt;</type>
        <definition>std::shared_ptr&lt; T &gt; mediapipe::GpuBuffer::StorageHolder::internal_storage</definition>
        <argsstring>() const</argsstring>
        <name>internal_storage</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::internal_storage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="175" column="21" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" bodystart="175" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a2f5d9692140cc3a06980900d1045fb24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mediapipe::GpuBuffer::StorageHolder::DebugString</definition>
        <argsstring>() const</argsstring>
        <name>DebugString</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::DebugString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="182" column="17" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.cc" bodystart="35" bodyend="38"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a1e7f56e3b60d4cafd7a87a615416e6a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; internal::GpuBufferStorage &gt; &gt; storages_</type>
        <definition>std::vector&lt; std::shared_ptr&lt; internal::GpuBufferStorage &gt; &gt; storages_ mediapipe::GpuBuffer::StorageHolder::ABSL_GUARDED_BY</definition>
        <argsstring>(mutex_)</argsstring>
        <name>ABSL_GUARDED_BY</name>
        <qualifiedname>mediapipe::GpuBuffer::StorageHolder::ABSL_GUARDED_BY</qualifiedname>
        <param>
          <type>mutex_</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="192" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" line="157" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer.h" bodystart="157" bodyend="193"/>
    <listofallmembers>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a1e7f56e3b60d4cafd7a87a615416e6a4" prot="private" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>ABSL_GUARDED_BY</name></member>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a2f5d9692140cc3a06980900d1045fb24" prot="public" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>DebugString</name></member>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a33717cbf849f5816e65493e467b83f18" prot="public" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>format</name></member>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1aad09006194bf54c6e11768cf9d14fc72" prot="private" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>format_</name></member>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1aa594308bf29feb7bece0cbbc460eccd6" prot="public" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>GetStorageForView</name></member>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a7c1a0790bc6f1810fb1ae095b19ca5cf" prot="public" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>height</name></member>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a4258d3c6091c6841322ccbcab08dfe5d" prot="private" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>height_</name></member>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1ad6c799d3615a961b75faa5aad4c6bbb1" prot="public" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>internal_storage</name></member>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a4998a4e7b5b6c4e947b0ddc2c997fcab" prot="private" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>mutex_</name></member>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1aebe55d294a5a32c2855a421c100ee187" prot="public" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>StorageHolder</name></member>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a1ec4b0355bb60e0dae286150b31291a8" prot="public" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>StorageHolder</name></member>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a800a5be03139d9b61eae67c59421e7d6" prot="public" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>width</name></member>
      <member refid="classmediapipe_1_1GpuBuffer_1_1StorageHolder_1a9ac9cc4deb19bc41fc4941d55d02b5f9" prot="private" virt="non-virtual"><scope>mediapipe::GpuBuffer::StorageHolder</scope><name>width_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
