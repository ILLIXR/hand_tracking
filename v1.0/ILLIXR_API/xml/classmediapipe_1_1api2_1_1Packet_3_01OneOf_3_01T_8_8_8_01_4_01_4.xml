<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4" kind="class" language="C++" prot="public">
    <compoundname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">mediapipe::api2::PacketBase</basecompoundref>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a63e9842725a8b84efd96fa6addcaaadf" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt;(std::is_same_v&lt; U, T &gt;||...)&gt;</type>
        <definition>using mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::AllowedType =  std::enable_if_t&lt;(std::is_same_v&lt;U, T&gt; || ...)&gt;</definition>
        <argsstring></argsstring>
        <name>AllowedType</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::AllowedType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="307" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="307" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a2780a9e8f0900153648f0d480c991341" prot="protected" static="no" mutable="no">
        <type>friend</type>
        <definition>friend mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::PacketBase</definition>
        <argsstring></argsstring>
        <name>PacketBase</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::PacketBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="387" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="387" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a62fcf561fd391d3c2a30508fcd06e59e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Packet</definition>
        <argsstring>()=default</argsstring>
        <name>Packet</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Packet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="304" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a1876f4508b05bdf068e0cf65a0609ce3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class</type>
            <defval>AllowedType&lt;U&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Packet</definition>
        <argsstring>(const Packet&lt; U &gt; &amp;p)</argsstring>
        <name>Packet</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Packet</qualifiedname>
        <param>
          <type>const Packet&lt; U &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="310" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="310" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1adff475a1f7b74f57cb0061197dcad424" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class</type>
            <defval>AllowedType&lt;U&gt;</defval>
          </param>
        </templateparamlist>
        <type>Packet&lt; OneOf&lt; T... &gt; &gt; &amp;</type>
        <definition>Packet&lt; OneOf&lt; T... &gt; &gt; &amp; mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::operator=</definition>
        <argsstring>(const Packet&lt; U &gt; &amp;p)</argsstring>
        <name>operator=</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::operator=</qualifiedname>
        <param>
          <type>const Packet&lt; U &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="312" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="312" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a57ca2996497da36c24f55b7e551ecca4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class</type>
            <defval>AllowedType&lt;U&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Packet</definition>
        <argsstring>(Packet&lt; U &gt; &amp;&amp;p)</argsstring>
        <name>Packet</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Packet</qualifiedname>
        <param>
          <type>Packet&lt; U &gt; &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="318" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="318" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a8b8a0db61743c290e02e662e1603d26a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class</type>
            <defval>AllowedType&lt;U&gt;</defval>
          </param>
        </templateparamlist>
        <type>Packet&lt; OneOf&lt; T... &gt; &gt; &amp;</type>
        <definition>Packet&lt; OneOf&lt; T... &gt; &gt; &amp; mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::operator=</definition>
        <argsstring>(Packet&lt; U &gt; &amp;&amp;p)</argsstring>
        <name>operator=</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::operator=</qualifiedname>
        <param>
          <type>Packet&lt; U &gt; &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="320" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a3373aa4b71951ca8039e6989a820ac9e" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>Packet&lt; OneOf&lt; T... &gt; &gt;</type>
        <definition>Packet&lt; OneOf&lt; T... &gt; &gt; mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::At</definition>
        <argsstring>(Timestamp timestamp) const &amp;</argsstring>
        <name>At</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::At</qualifiedname>
        <param>
          <type>Timestamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="325" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="325" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a75aa496b080d65c744ddd767438e2775" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>Packet&lt; OneOf&lt; T... &gt; &gt;</type>
        <definition>Packet&lt; OneOf&lt; T... &gt; &gt; mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::At</definition>
        <argsstring>(Timestamp timestamp) &amp;&amp;</argsstring>
        <name>At</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::At</qualifiedname>
        <param>
          <type>Timestamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="328" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1ab23fd5f48a23dba5ff9a2b1866aa2781" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class</type>
            <defval>AllowedType&lt;U&gt;</defval>
          </param>
        </templateparamlist>
        <type>const U &amp;</type>
        <definition>const U &amp; mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="334" column="11" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="334" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a16fe73bd3a6430cd63010451de597bbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class</type>
            <defval>AllowedType&lt;U&gt;</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Has</definition>
        <argsstring>() const</argsstring>
        <name>Has</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Has</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="342" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="342" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1ae09e8713246d53d9f0b34f7d2ae29cc0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>F</declname>
            <defname>F</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Visit</definition>
        <argsstring>(const F &amp;... args) const</argsstring>
        <name>Visit</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Visit</qualifiedname>
        <param>
          <type>const F &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="347" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="347" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a5faeb47d7eb73e22193dd2b9ceab7bf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class</type>
            <defval>AllowedType&lt;U&gt;</defval>
          </param>
        </templateparamlist>
        <type>absl::StatusOr&lt; std::unique_ptr&lt; U &gt; &gt;</type>
        <definition>absl::StatusOr&lt; std::unique_ptr&lt; U &gt; &gt; mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Consume</definition>
        <argsstring>()</argsstring>
        <name>Consume</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Consume</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="363" column="18" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="363" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1ae8f8afb3c491191e1d2eac752e5049ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>F</declname>
            <defname>F</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::ConsumeAndVisit</definition>
        <argsstring>(const F &amp;... args)</argsstring>
        <name>ConsumeAndVisit</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::ConsumeAndVisit</qualifiedname>
        <param>
          <type>const F &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="368" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="368" bodyend="381"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a887ec38f9446959e4c4d747ec1e40f1a" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Packet</definition>
        <argsstring>(std::shared_ptr&lt; HolderBase &gt; payload)</argsstring>
        <name>Packet</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Packet</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; HolderBase &gt;</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="384" column="12" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="384" bodyend="385"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a394471c49f9f8138741caaea970f7e3e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Invoke</definition>
        <argsstring>(const F &amp;f) const</argsstring>
        <name>Invoke</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Invoke</qualifiedname>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="391" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="391" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a38ebf0cad83fe6bdf8bf472f9c642aa7" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class...</type>
            <declname>W</declname>
            <defname>W</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Invoke</definition>
        <argsstring>(const F &amp;f) const</argsstring>
        <name>Invoke</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::Invoke</qualifiedname>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="396" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="396" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a4b5c3b7b2b672e7d5060c7f14cf193a2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class R</type>
          </param>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::InvokeConsuming</definition>
        <argsstring>(const F &amp;f) -&gt; R</argsstring>
        <name>InvokeConsuming</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::InvokeConsuming</qualifiedname>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="401" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="401" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1ae5964742de2cfbfe4cfbda9b4b882590" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class R</type>
          </param>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class...</type>
            <declname>W</declname>
            <defname>W</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::InvokeConsuming</definition>
        <argsstring>(const F &amp;f) -&gt; R</argsstring>
        <name>InvokeConsuming</name>
        <qualifiedname>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;::InvokeConsuming</qualifiedname>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="410" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="410" bodyend="413"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" line="302" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/packet.h" bodystart="302" bodyend="414"/>
    <listofallmembers>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a63e9842725a8b84efd96fa6addcaaadf" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>AllowedType</name></member>
      <member refid="classmediapipe_1_1api2_1_1PacketBase_1a5604b3b270e9af053e247d673d92cdc2" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>As</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a3373aa4b71951ca8039e6989a820ac9e" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>At</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a75aa496b080d65c744ddd767438e2775" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>At</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a5faeb47d7eb73e22193dd2b9ceab7bf2" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>Consume</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1ae8f8afb3c491191e1d2eac752e5049ef" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>ConsumeAndVisit</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1ab23fd5f48a23dba5ff9a2b1866aa2781" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>Get</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a16fe73bd3a6430cd63010451de597bbd" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>Has</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a394471c49f9f8138741caaea970f7e3e" prot="private" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>Invoke</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a38ebf0cad83fe6bdf8bf472f9c642aa7" prot="private" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>Invoke</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a4b5c3b7b2b672e7d5060c7f14cf193a2" prot="private" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>InvokeConsuming</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1ae5964742de2cfbfe4cfbda9b4b882590" prot="private" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>InvokeConsuming</name></member>
      <member refid="classmediapipe_1_1api2_1_1PacketBase_1a17954032ad9dd7506522114feb570843" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>IsEmpty</name></member>
      <member refid="classmediapipe_1_1api2_1_1PacketBase_1a670d185c5a67321aaab5ba7c8470b913" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>operator mediapipe::Packet</name></member>
      <member refid="classmediapipe_1_1api2_1_1PacketBase_1acd0c36eadff026cb1c32ea864af2898c" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>operator mediapipe::Packet</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1adff475a1f7b74f57cb0061197dcad424" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a8b8a0db61743c290e02e662e1603d26a" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1api2_1_1PacketBase_1a41a1b8975ac3b9f3cb04afffac0f4a0c" prot="public" virt="non-virtual" ambiguityscope="mediapipe::api2::PacketBase::"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1api2_1_1PacketBase_1afa8886c4a2a984e0c594d8046064d8e7" prot="public" virt="non-virtual" ambiguityscope="mediapipe::api2::PacketBase::"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a62fcf561fd391d3c2a30508fcd06e59e" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a1876f4508b05bdf068e0cf65a0609ce3" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a57ca2996497da36c24f55b7e551ecca4" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a887ec38f9446959e4c4d747ec1e40f1a" prot="protected" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1a2780a9e8f0900153648f0d480c991341" prot="protected" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>PacketBase</name></member>
      <member refid="classmediapipe_1_1api2_1_1PacketBase_1af127f9fc3ee1c962f1c562e265da3367" prot="public" virt="non-virtual" ambiguityscope="mediapipe::api2::PacketBase::"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>PacketBase</name></member>
      <member refid="classmediapipe_1_1api2_1_1PacketBase_1ab9d38790b3bc279c32b11b8e61a11332" prot="public" virt="non-virtual" ambiguityscope="mediapipe::api2::PacketBase::"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>PacketBase</name></member>
      <member refid="classmediapipe_1_1api2_1_1PacketBase_1a06198208eaca54f1b408c16e9eb2b015" prot="protected" virt="non-virtual" ambiguityscope="mediapipe::api2::PacketBase::"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>PacketBase</name></member>
      <member refid="classmediapipe_1_1api2_1_1PacketBase_1a339835e38cc123ea1b937d0c68f0220b" prot="protected" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>payload_</name></member>
      <member refid="classmediapipe_1_1api2_1_1PacketBase_1a09737889834e97f7bb3b839edf862a09" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>timestamp</name></member>
      <member refid="classmediapipe_1_1api2_1_1PacketBase_1a8096c8c1efdb099ccb0893b75b3ee307" prot="protected" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>timestamp_</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_3_01OneOf_3_01T_8_8_8_01_4_01_4_1ae09e8713246d53d9f0b34f7d2ae29cc0" prot="public" virt="non-virtual"><scope>mediapipe::api2::Packet&lt; OneOf&lt; T... &gt; &gt;</scope><name>Visit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
