<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmediapipe_1_1DescriptorReader" kind="class" language="C++" prot="public">
    <compoundname>mediapipe::DescriptorReader</compoundname>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmediapipe_1_1DescriptorReader_1a108d2c94f546976bdcddd5f69ce24686" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FileDescriptorProto</type>
        <definition>static FileDescriptorProto mediapipe::DescriptorReader::FindTopFile</definition>
        <argsstring>(const FileDescriptorSet &amp;files)</argsstring>
        <name>FindTopFile</name>
        <qualifiedname>mediapipe::DescriptorReader::FindTopFile</qualifiedname>
        <param>
          <type>const FileDescriptorSet &amp;</type>
          <declname>files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" line="38" column="30" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" bodystart="38" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1DescriptorReader_1a39b9a6f0029729e8d8af680fec582207" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string mediapipe::DescriptorReader::CleanTypeName</definition>
        <argsstring>(const std::string &amp;type_name)</argsstring>
        <name>CleanTypeName</name>
        <qualifiedname>mediapipe::DescriptorReader::CleanTypeName</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>type_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" line="56" column="22" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1DescriptorReader_1ac5c6aeadebce7435ed36512a00b6945c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string mediapipe::DescriptorReader::CleanTypeName</definition>
        <argsstring>(const std::string &amp;package, const std::string &amp;name)</argsstring>
        <name>CleanTypeName</name>
        <qualifiedname>mediapipe::DescriptorReader::CleanTypeName</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>package</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" line="60" column="22" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1DescriptorReader_1aa366792f863249aa4f1b34a7cf1a0aa2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int mediapipe::DescriptorReader::MatchingPrefixLength</definition>
        <argsstring>(const std::string &amp;s, const std::string &amp;t)</argsstring>
        <name>MatchingPrefixLength</name>
        <qualifiedname>mediapipe::DescriptorReader::MatchingPrefixLength</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" line="66" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1DescriptorReader_1a5273e9c7cafc42f9edaba23981a99047" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string mediapipe::DescriptorReader::BestTypeName</definition>
        <argsstring>(const std::set&lt; std::string &gt; &amp;type_names, const FileDescriptorProto &amp;file)</argsstring>
        <name>BestTypeName</name>
        <qualifiedname>mediapipe::DescriptorReader::BestTypeName</qualifiedname>
        <param>
          <type>const std::set&lt; std::string &gt; &amp;</type>
          <declname>type_names</declname>
        </param>
        <param>
          <type>const FileDescriptorProto &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" line="75" column="22" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" bodystart="75" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1DescriptorReader_1ae5ac02c32b435bbb847410408f1e7842" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DescriptorProto</type>
        <definition>static DescriptorProto mediapipe::DescriptorReader::FindTopDescriptor</definition>
        <argsstring>(const FileDescriptorProto &amp;file)</argsstring>
        <name>FindTopDescriptor</name>
        <qualifiedname>mediapipe::DescriptorReader::FindTopDescriptor</qualifiedname>
        <param>
          <type>const FileDescriptorProto &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" line="100" column="26" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" bodystart="100" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1DescriptorReader_1a69810994309ae400936aab9b1431f346" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string mediapipe::DescriptorReader::FindTopTypeName</definition>
        <argsstring>(const FileDescriptorSet &amp;files)</argsstring>
        <name>FindTopTypeName</name>
        <qualifiedname>mediapipe::DescriptorReader::FindTopTypeName</qualifiedname>
        <param>
          <type>const FileDescriptorSet &amp;</type>
          <declname>files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" line="115" column="22" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1DescriptorReader_1a7ecc947cd17732a842d577720096551b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FileDescriptorSet</type>
        <definition>static FileDescriptorSet mediapipe::DescriptorReader::ReadFileDescriptorSet</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>ReadFileDescriptorSet</name>
        <qualifiedname>mediapipe::DescriptorReader::ReadFileDescriptorSet</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" line="121" column="28" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" bodystart="121" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1DescriptorReader_1aaaaf959824bff74a64a256e682a1d431" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mediapipe::DescriptorReader::WriteFile</definition>
        <argsstring>(const std::string &amp;path, const std::string &amp;contents)</argsstring>
        <name>WriteFile</name>
        <qualifiedname>mediapipe::DescriptorReader::WriteFile</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" line="129" column="15" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1DescriptorReader_1a5aab55745828516290ced12ad8cda581" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mediapipe::DescriptorReader::WriteMessageTypeName</definition>
        <argsstring>(const std::string &amp;path, const FileDescriptorSet &amp;files)</argsstring>
        <name>WriteMessageTypeName</name>
        <qualifiedname>mediapipe::DescriptorReader::WriteMessageTypeName</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const FileDescriptorSet &amp;</type>
          <declname>files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" line="133" column="15" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" bodystart="133" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1DescriptorReader_1a3a9abf9ed6007899a81bcfab7a8b08f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mediapipe::DescriptorReader::WriteMessageTypeMacro</definition>
        <argsstring>(const std::string &amp;path, const FileDescriptorSet &amp;files)</argsstring>
        <name>WriteMessageTypeMacro</name>
        <qualifiedname>mediapipe::DescriptorReader::WriteMessageTypeMacro</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const FileDescriptorSet &amp;</type>
          <declname>files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" line="143" column="15" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" bodystart="143" bodyend="154"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" line="34" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/message_type_util.cc" bodystart="34" bodyend="155"/>
    <listofallmembers>
      <member refid="classmediapipe_1_1DescriptorReader_1a5273e9c7cafc42f9edaba23981a99047" prot="public" virt="non-virtual"><scope>mediapipe::DescriptorReader</scope><name>BestTypeName</name></member>
      <member refid="classmediapipe_1_1DescriptorReader_1a39b9a6f0029729e8d8af680fec582207" prot="public" virt="non-virtual"><scope>mediapipe::DescriptorReader</scope><name>CleanTypeName</name></member>
      <member refid="classmediapipe_1_1DescriptorReader_1ac5c6aeadebce7435ed36512a00b6945c" prot="public" virt="non-virtual"><scope>mediapipe::DescriptorReader</scope><name>CleanTypeName</name></member>
      <member refid="classmediapipe_1_1DescriptorReader_1ae5ac02c32b435bbb847410408f1e7842" prot="public" virt="non-virtual"><scope>mediapipe::DescriptorReader</scope><name>FindTopDescriptor</name></member>
      <member refid="classmediapipe_1_1DescriptorReader_1a108d2c94f546976bdcddd5f69ce24686" prot="public" virt="non-virtual"><scope>mediapipe::DescriptorReader</scope><name>FindTopFile</name></member>
      <member refid="classmediapipe_1_1DescriptorReader_1a69810994309ae400936aab9b1431f346" prot="public" virt="non-virtual"><scope>mediapipe::DescriptorReader</scope><name>FindTopTypeName</name></member>
      <member refid="classmediapipe_1_1DescriptorReader_1aa366792f863249aa4f1b34a7cf1a0aa2" prot="public" virt="non-virtual"><scope>mediapipe::DescriptorReader</scope><name>MatchingPrefixLength</name></member>
      <member refid="classmediapipe_1_1DescriptorReader_1a7ecc947cd17732a842d577720096551b" prot="public" virt="non-virtual"><scope>mediapipe::DescriptorReader</scope><name>ReadFileDescriptorSet</name></member>
      <member refid="classmediapipe_1_1DescriptorReader_1aaaaf959824bff74a64a256e682a1d431" prot="public" virt="non-virtual"><scope>mediapipe::DescriptorReader</scope><name>WriteFile</name></member>
      <member refid="classmediapipe_1_1DescriptorReader_1a3a9abf9ed6007899a81bcfab7a8b08f6" prot="public" virt="non-virtual"><scope>mediapipe::DescriptorReader</scope><name>WriteMessageTypeMacro</name></member>
      <member refid="classmediapipe_1_1DescriptorReader_1a5aab55745828516290ced12ad8cda581" prot="public" virt="non-virtual"><scope>mediapipe::DescriptorReader</scope><name>WriteMessageTypeName</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
