<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmediapipe_1_1api2_1_1InputShardAccess" kind="class" language="C++" prot="public">
    <compoundname>mediapipe::api2::InputShardAccess</compoundname>
    <basecompoundref prot="public" virt="non-virtual">mediapipe::api2::Packet&lt; T &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmediapipe_1_1api2_1_1InputShardAccess_1a17cdc97960f87ec7587a4e9d2f4090b5" prot="private" static="no" mutable="no">
        <type>InputStreamShard *</type>
        <definition>InputStreamShard* mediapipe::api2::InputShardAccess&lt; T &gt;::stream_</definition>
        <argsstring></argsstring>
        <name>stream_</name>
        <qualifiedname>mediapipe::api2::InputShardAccess::stream_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="658" column="20" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="658" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardAccess_1a3a72e54005e500103336f00d9686bd44" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>const PacketBase &amp;</type>
        <definition>const PacketBase &amp; mediapipe::api2::InputShardAccess&lt; T &gt;::packet</definition>
        <argsstring>() const &amp;</argsstring>
        <name>packet</name>
        <qualifiedname>mediapipe::api2::InputShardAccess::packet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="604" column="20" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="604" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardAccess_1a43ab9dec7e51bd970f7c8de3cfba6853" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>PacketBase</type>
        <definition>PacketBase mediapipe::api2::InputShardAccess&lt; T &gt;::packet</definition>
        <argsstring>() const &amp;&amp;</argsstring>
        <name>packet</name>
        <qualifiedname>mediapipe::api2::InputShardAccess::packet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="607" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="607" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardAccess_1acb52a4d8e72857d39dbd33ec7d641bc2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::api2::InputShardAccess&lt; T &gt;::IsDone</definition>
        <argsstring>() const</argsstring>
        <name>IsDone</name>
        <qualifiedname>mediapipe::api2::InputShardAccess::IsDone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="609" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="609" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardAccess_1a1e5fe2b18cef855c132ba2c231b6eee0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::api2::InputShardAccess&lt; T &gt;::IsConnected</definition>
        <argsstring>() const</argsstring>
        <name>IsConnected</name>
        <qualifiedname>mediapipe::api2::InputShardAccess::IsConnected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="610" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="610" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardAccess_1aef0ee13a5525006820cc3792fed12c0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PacketBase</type>
        <definition>PacketBase mediapipe::api2::InputShardAccess&lt; T &gt;::Header</definition>
        <argsstring>() const</argsstring>
        <name>Header</name>
        <qualifiedname>mediapipe::api2::InputShardAccess::Header</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="612" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="612" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardAccess_1a1092dda7d0cae5b18c26b193a337f578" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;std::is_same&lt;U, T&gt;{},                                     decltype(&amp;Packet&lt;U&gt;::Consume)&gt;</defval>
          </param>
        </templateparamlist>
        <type>absl::StatusOr&lt; std::unique_ptr&lt; U &gt; &gt;</type>
        <definition>absl::StatusOr&lt; std::unique_ptr&lt; U &gt; &gt; mediapipe::api2::InputShardAccess&lt; T &gt;::Consume</definition>
        <argsstring>()</argsstring>
        <name>Consume</name>
        <qualifiedname>mediapipe::api2::InputShardAccess::Consume</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="626" column="18" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="626" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardAccess_1a49f0efe34c9f9cd83851f1c2aca7182a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; internal::IsCompatibleType&lt; V, U &gt;{}, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>absl::StatusOr&lt; std::unique_ptr&lt; V &gt; &gt;</type>
        <definition>absl::StatusOr&lt; std::unique_ptr&lt; V &gt; &gt; mediapipe::api2::InputShardAccess&lt; T &gt;::Consume</definition>
        <argsstring>()</argsstring>
        <name>Consume</name>
        <qualifiedname>mediapipe::api2::InputShardAccess::Consume</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="632" column="18" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="632" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardAccess_1a16fea650d67c7186ca653cd184d4e367" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>F</declname>
            <defname>F</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto mediapipe::api2::InputShardAccess&lt; T &gt;::ConsumeAndVisit</definition>
        <argsstring>(F &amp;&amp;... args)</argsstring>
        <name>ConsumeAndVisit</name>
        <qualifiedname>mediapipe::api2::InputShardAccess::ConsumeAndVisit</qualifiedname>
        <param>
          <type>F &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="637" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="637" bodyend="640"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardAccess_1a94f18142c2d7ce0b38217a9fa7c35f74" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::api2::InputShardAccess&lt; T &gt;::InputShardAccess</definition>
        <argsstring>(const CalculatorContext &amp;, InputStreamShard *stream)</argsstring>
        <name>InputShardAccess</name>
        <qualifiedname>mediapipe::api2::InputShardAccess::InputShardAccess</qualifiedname>
        <param>
          <type>const CalculatorContext &amp;</type>
        </param>
        <param>
          <type>InputStreamShard *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="643" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="643" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardAccess_1aeb332d2b2ad5384b31992807c302f627" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class...</type>
            <declname>A</declname>
            <defname>A</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto mediapipe::api2::InputShardAccess&lt; T &gt;::WrapConsumeCall</definition>
        <argsstring>(F f, A &amp;&amp;... args)</argsstring>
        <name>WrapConsumeCall</name>
        <qualifiedname>mediapipe::api2::InputShardAccess::WrapConsumeCall</qualifiedname>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <param>
          <type>A &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="649" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="649" bodyend="656"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classmediapipe_1_1api2_1_1InputShardAccess_1a6966791a98d0c4f7ceef28ba9dd38cee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>InputShardAccess&lt; T &gt;</type>
        <definition>InputShardAccess&lt; T &gt; internal::SinglePortAccess</definition>
        <argsstring>(mediapipe::CalculatorContext *, InputStreamShard *)</argsstring>
        <name>internal::SinglePortAccess</name>
        <qualifiedname>mediapipe::api2::InputShardAccess::SinglePortAccess</qualifiedname>
        <param>
          <type>mediapipe::CalculatorContext *</type>
        </param>
        <param>
          <type>InputStreamShard *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="660" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="602" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="602" bodyend="662"/>
    <listofallmembers>
      <member refid="classmediapipe_1_1api2_1_1Packet_1af2eb93c651e4277522c5fbf1d6e4c24f" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>At</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1aea3a0717b75567709dd16bde76484e83" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>At</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardAccess_1a1092dda7d0cae5b18c26b193a337f578" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>Consume</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardAccess_1a49f0efe34c9f9cd83851f1c2aca7182a" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>Consume</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardAccess_1a16fea650d67c7186ca653cd184d4e367" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>ConsumeAndVisit</name></member>
      <member refid="classmediapipe_1_1Packet_1ab35adcfdae3312b0b6a5955c589ac55a" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>ConsumeOrCopy</name></member>
      <member refid="classmediapipe_1_1Packet_1a561614e3288d5d53f9acc0a7164b6dd1" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>ConsumeOrCopy</name></member>
      <member refid="classmediapipe_1_1Packet_1aeb56ee77a22e887c3763208b0065a2ed" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>ConsumeOrCopy</name></member>
      <member refid="classmediapipe_1_1Packet_1a0627f0fbd9e124a8d201b33d5856c63f" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>DebugString</name></member>
      <member refid="classmediapipe_1_1Packet_1aaa404549082464a31fab7c9775d85019" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>DebugTypeName</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1a442beb81374e239eb7f4fe817c6b87e2" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>Get</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1a729553fa1e3fa16a9a185521017a6678" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>GetOr</name></member>
      <member refid="classmediapipe_1_1Packet_1ad22b4546494896be7ea07f40845bd425" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>GetProtoMessageLite</name></member>
      <member refid="classmediapipe_1_1Packet_1a318eef50fb446646f9b8650c73521d60" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>GetTypeId</name></member>
      <member refid="classmediapipe_1_1Packet_1a03945a9fdd61d3e84a9bf24cd688d386" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>GetVectorOfProtoMessageLitePtrs</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardAccess_1aef0ee13a5525006820cc3792fed12c0c" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>Header</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardAccess_1a94f18142c2d7ce0b38217a9fa7c35f74" prot="private" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>InputShardAccess</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardAccess_1a6966791a98d0c4f7ceef28ba9dd38cee" prot="private" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>internal::SinglePortAccess</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardAccess_1a1e5fe2b18cef855c132ba2c231b6eee0" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>IsConnected</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardAccess_1acb52a4d8e72857d39dbd33ec7d641bc2" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>IsDone</name></member>
      <member refid="classmediapipe_1_1Packet_1ae90e065151b6c857aa9bb3c9db951ca2" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>IsEmpty</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1a956d62eb47752cce2ee3883b734491db" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>operator*</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1a7bc7b7442bcb35d2cae8ac4c42977206" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>operator-&gt;</name></member>
      <member refid="classmediapipe_1_1Packet_1aa02795edd37c8d8712545b7ba33d7ded" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1Packet_1a1de447a6116a0e1bd0c02c77e73d89fd" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1ab51d868101a00de691e65e7d20384e40" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1Packet_1ae4c2120527d85809cb8e094cc5f5e82b" prot="public" virt="non-virtual" ambiguityscope="mediapipe::Packet::"><scope>mediapipe::api2::InputShardAccess</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1Packet_1aaa5a7957cb3a943e6b6caea780ea7e6f" prot="public" virt="non-virtual" ambiguityscope="mediapipe::Packet::"><scope>mediapipe::api2::InputShardAccess</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardAccess_1a3a72e54005e500103336f00d9686bd44" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>packet</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardAccess_1a43ab9dec7e51bd970f7c8de3cfba6853" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>packet</name></member>
      <member refid="classmediapipe_1_1Packet_1a95df7b7a403bf0a5da3920fb8922080a" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>RegisteredTypeName</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardAccess_1a17cdc97960f87ec7587a4e9d2f4090b5" prot="private" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>stream_</name></member>
      <member refid="classmediapipe_1_1Packet_1a84895fb61cd280d59b8df4cab9afe3ba" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>Timestamp</name></member>
      <member refid="classmediapipe_1_1Packet_1ade7cd267df98a8f0297d9a7d9f93d28a" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>ValidateAsProtoMessageLite</name></member>
      <member refid="classmediapipe_1_1Packet_1ae2fec6fa30c3c61e18bd89a1c55b33fb" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>ValidateAsType</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardAccess_1aeb332d2b2ad5384b31992807c302f627" prot="private" virt="non-virtual"><scope>mediapipe::api2::InputShardAccess</scope><name>WrapConsumeCall</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
