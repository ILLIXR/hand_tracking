<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacemediapipe_1_1anonymous__namespace_02inference__calculator__utils_8cc_03" kind="namespace" language="C++">
    <compoundname>mediapipe::anonymous_namespace{inference_calculator_utils.cc}</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02inference__calculator__utils_8cc_03_1aae3c312f1094aa072f6bfa91c11f8342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mediapipe::anonymous_namespace{inference_calculator_utils.cc}::GetXnnpackDefaultNumThreads</definition>
        <argsstring>()</argsstring>
        <name>GetXnnpackDefaultNumThreads</name>
        <qualifiedname>mediapipe::anonymous_namespace{inference_calculator_utils.cc}::GetXnnpackDefaultNumThreads</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" line="47" column="5" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" bodystart="47" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02inference__calculator__utils_8cc_03_1a3e3e8163d8445b471f29ca01251fc77d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::anonymous_namespace{inference_calculator_utils.cc}::operator==</definition>
        <argsstring>(Tensor::ElementType tensor_type, TfLiteType tflite_type)</argsstring>
        <name>operator==</name>
        <qualifiedname>mediapipe::anonymous_namespace{inference_calculator_utils.cc}::operator==</qualifiedname>
        <param>
          <type>Tensor::ElementType</type>
          <declname>tensor_type</declname>
        </param>
        <param>
          <type>TfLiteType</type>
          <declname>tflite_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" line="60" column="6" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" bodystart="60" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02inference__calculator__utils_8cc_03_1a00a2bb6fe24e9152f32dc317b5bf5627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::anonymous_namespace{inference_calculator_utils.cc}::CopyTensorToTfLiteTensor</definition>
        <argsstring>(const Tensor &amp;input_tensor, TfLiteTensor &amp;tflite_tensor)</argsstring>
        <name>CopyTensorToTfLiteTensor</name>
        <qualifiedname>mediapipe::anonymous_namespace{inference_calculator_utils.cc}::CopyTensorToTfLiteTensor</qualifiedname>
        <param>
          <type>const Tensor &amp;</type>
          <declname>input_tensor</declname>
        </param>
        <param>
          <type>TfLiteTensor &amp;</type>
          <declname>tflite_tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" line="87" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" bodystart="87" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02inference__calculator__utils_8cc_03_1a4d60bb461ff72b01841b4542b55ac72b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::anonymous_namespace{inference_calculator_utils.cc}::CopyTensorToTfLiteTensor&lt; char &gt;</definition>
        <argsstring>(const Tensor &amp;input_tensor, TfLiteTensor &amp;tflite_tensor)</argsstring>
        <name>CopyTensorToTfLiteTensor&lt; char &gt;</name>
        <qualifiedname>mediapipe::anonymous_namespace{inference_calculator_utils.cc}::CopyTensorToTfLiteTensor&lt; char &gt;</qualifiedname>
        <param>
          <type>const Tensor &amp;</type>
          <declname>input_tensor</declname>
        </param>
        <param>
          <type>TfLiteTensor &amp;</type>
          <declname>tflite_tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" line="105" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" bodystart="105" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02inference__calculator__utils_8cc_03_1afcec93a83e57f79295f12b4f45b0c751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::anonymous_namespace{inference_calculator_utils.cc}::operator==</definition>
        <argsstring>(const TfLiteIntArray &amp;lhs, const std::vector&lt; int &gt; &amp;rhs)</argsstring>
        <name>operator==</name>
        <qualifiedname>mediapipe::anonymous_namespace{inference_calculator_utils.cc}::operator==</qualifiedname>
        <param>
          <type>const TfLiteIntArray &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" line="120" column="6" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02inference__calculator__utils_8cc_03_1adc791defb07b591f6ec655cbfab5cad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; mediapipe::anonymous_namespace{inference_calculator_utils.cc}::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const TfLiteIntArray &amp;array)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>mediapipe::anonymous_namespace{inference_calculator_utils.cc}::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const TfLiteIntArray &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" line="128" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02inference__calculator__utils_8cc_03_1a97bf2f2fe1dad0516094c954b69f1984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::anonymous_namespace{inference_calculator_utils.cc}::CopyTfLiteTensorToTensor</definition>
        <argsstring>(const TfLiteTensor &amp;tflite_tensor, Tensor &amp;output_tensor)</argsstring>
        <name>CopyTfLiteTensorToTensor</name>
        <qualifiedname>mediapipe::anonymous_namespace{inference_calculator_utils.cc}::CopyTfLiteTensorToTensor</qualifiedname>
        <param>
          <type>const TfLiteTensor &amp;</type>
          <declname>tflite_tensor</declname>
        </param>
        <param>
          <type>Tensor &amp;</type>
          <declname>output_tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" line="134" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" bodystart="134" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02inference__calculator__utils_8cc_03_1a007b258aa9d79419282f8f097d25779a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::anonymous_namespace{inference_calculator_utils.cc}::CopyTfLiteTensorToTensor&lt; char &gt;</definition>
        <argsstring>(const TfLiteTensor &amp;tflite_tensor, Tensor &amp;output_tensor)</argsstring>
        <name>CopyTfLiteTensorToTensor&lt; char &gt;</name>
        <qualifiedname>mediapipe::anonymous_namespace{inference_calculator_utils.cc}::CopyTfLiteTensorToTensor&lt; char &gt;</qualifiedname>
        <param>
          <type>const TfLiteTensor &amp;</type>
          <declname>tflite_tensor</declname>
        </param>
        <param>
          <type>Tensor &amp;</type>
          <declname>output_tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" line="159" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" bodystart="159" bodyend="183"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_calculator_utils.cc" line="45" column="1"/>
  </compounddef>
</doxygen>
