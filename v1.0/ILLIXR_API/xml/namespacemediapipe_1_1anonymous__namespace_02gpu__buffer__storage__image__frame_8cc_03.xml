<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacemediapipe_1_1anonymous__namespace_02gpu__buffer__storage__image__frame_8cc_03" kind="namespace" language="C++">
    <compoundname>mediapipe::anonymous_namespace{gpu_buffer_storage_image_frame.cc}</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02gpu__buffer__storage__image__frame_8cc_03_1a7323f347ee6dfb3e529f50e408e0c7c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FrameBuffer::Format</type>
        <definition>FrameBuffer::Format mediapipe::anonymous_namespace{gpu_buffer_storage_image_frame.cc}::FrameBufferFormatForImageFrameFormat</definition>
        <argsstring>(ImageFormat::Format format)</argsstring>
        <name>FrameBufferFormatForImageFrameFormat</name>
        <qualifiedname>mediapipe::anonymous_namespace{gpu_buffer_storage_image_frame.cc}::FrameBufferFormatForImageFrameFormat</qualifiedname>
        <param>
          <type>ImageFormat::Format</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.cc" line="29" column="21" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.cc" bodystart="29" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02gpu__buffer__storage__image__frame_8cc_03_1aaf382523180eb38baf867bc3b1c7390f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; FrameBuffer &gt;</type>
        <definition>std::shared_ptr&lt; FrameBuffer &gt; mediapipe::anonymous_namespace{gpu_buffer_storage_image_frame.cc}::ImageFrameToFrameBuffer</definition>
        <argsstring>(std::shared_ptr&lt; ImageFrame &gt; image_frame)</argsstring>
        <name>ImageFrameToFrameBuffer</name>
        <qualifiedname>mediapipe::anonymous_namespace{gpu_buffer_storage_image_frame.cc}::ImageFrameToFrameBuffer</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; ImageFrame &gt;</type>
          <declname>image_frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.cc" line="43" column="17" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.cc" bodystart="43" bodyend="58"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.cc" line="27" column="1"/>
  </compounddef>
</doxygen>
