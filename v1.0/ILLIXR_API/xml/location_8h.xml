<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="location_8h" kind="file" language="C++">
    <compoundname>location.h</compoundname>
    <includes local="no">memory</includes>
    <includes refid="location__data_8pb_8h" local="yes">mediapipe/framework/formats/location_data.pb.h</includes>
    <includes refid="port_8h" local="yes">mediapipe/framework/port.h</includes>
    <includes refid="port_2point2_8h" local="yes">mediapipe/framework/port/point2.h</includes>
    <includes refid="port_2rectangle_8h" local="yes">mediapipe/framework/port/rectangle.h</includes>
    <includedby refid="tensors__to__detections__calculator_8cc" local="yes">/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/tensors_to_detections_calculator.cc</includedby>
    <includedby refid="detection__letterbox__removal__calculator_8cc" local="yes">/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/detection_letterbox_removal_calculator.cc</includedby>
    <includedby refid="non__max__suppression__calculator_8cc" local="yes">/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/util/non_max_suppression_calculator.cc</includedby>
    <includedby refid="location_8cc" local="yes">/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/location.cc</includedby>
    <incdepgraph>
      <node id="20">
        <label>mediapipe/framework/formats/annotation/rasterization.pb.h</label>
        <link refid="rasterization_8pb_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>mediapipe/framework/formats/location_data.pb.h</label>
        <link refid="location__data_8pb_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>mediapipe/framework/deps/mathutil.h</label>
        <link refid="mathutil_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>mediapipe/framework/deps/point2.h</label>
        <link refid="deps_2point2_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>mediapipe/framework/deps/rectangle.h</label>
        <link refid="deps_2rectangle_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>mediapipe/framework/deps/vector.h</label>
        <link refid="deps_2vector_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/location.h</label>
        <link refid="location_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>mediapipe/framework/port.h</label>
        <link refid="port_8h_source"/>
      </node>
      <node id="35">
        <label>mediapipe/framework/port/logging.h</label>
        <link refid="logging_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>mediapipe/framework/port/point2.h</label>
        <link refid="port_2point2_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>mediapipe/framework/port/rectangle.h</label>
        <link refid="port_2rectangle_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>mediapipe/util/unused.hpp</label>
        <link refid="unused_8hpp_source"/>
      </node>
      <node id="30">
        <label>absl/log/absl_check.h</label>
      </node>
      <node id="40">
        <label>absl/strings/has_ostream_operator.h</label>
      </node>
      <node id="36">
        <label>absl/time/time.h</label>
      </node>
      <node id="34">
        <label>absl/utility/utility.h</label>
      </node>
      <node id="32">
        <label>algorithm</label>
      </node>
      <node id="24">
        <label>cmath</label>
      </node>
      <node id="37">
        <label>cstddef</label>
      </node>
      <node id="25">
        <label>cstdint</label>
      </node>
      <node id="26">
        <label>cstdlib</label>
      </node>
      <node id="41">
        <label>glog/logging.h</label>
      </node>
      <node id="9">
        <label>google/protobuf/arena.h</label>
      </node>
      <node id="10">
        <label>google/protobuf/arenastring.h</label>
      </node>
      <node id="17">
        <label>google/protobuf/extension_set.h</label>
      </node>
      <node id="18">
        <label>google/protobuf/generated_enum_reflection.h</label>
      </node>
      <node id="14">
        <label>google/protobuf/generated_message_reflection.h</label>
      </node>
      <node id="11">
        <label>google/protobuf/generated_message_table_driven.h</label>
      </node>
      <node id="12">
        <label>google/protobuf/generated_message_util.h</label>
      </node>
      <node id="8">
        <label>google/protobuf/io/coded_stream.h</label>
      </node>
      <node id="15">
        <label>google/protobuf/message.h</label>
      </node>
      <node id="13">
        <label>google/protobuf/metadata_lite.h</label>
      </node>
      <node id="6">
        <label>google/protobuf/port_def.inc</label>
      </node>
      <node id="7">
        <label>google/protobuf/port_undef.inc</label>
      </node>
      <node id="16">
        <label>google/protobuf/repeated_field.h</label>
      </node>
      <node id="19">
        <label>google/protobuf/unknown_field_set.h</label>
      </node>
      <node id="27">
        <label>iosfwd</label>
      </node>
      <node id="33">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>limits</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="38">
        <label>ostream</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="29">
        <label>type_traits</label>
      </node>
      <node id="39">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmediapipe_1_1Location" prot="public">mediapipe::Location</innerclass>
    <innernamespace refid="namespacemediapipe">mediapipe</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>The<sp/>MediaPipe<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>container<sp/>for<sp/>location<sp/>data,<sp/>representing<sp/>location<sp/>information<sp/>in<sp/>an<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>wrapper<sp/>provides<sp/>two<sp/>functionalities:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>1.<sp/>Factory<sp/>methods<sp/>for<sp/>creation<sp/>of<sp/>Location<sp/>objects<sp/>and<sp/>thus<sp/>LocationData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>protocol<sp/>buffers.<sp/>These<sp/>methods<sp/>guarantee<sp/>a<sp/>valid<sp/>location<sp/>data<sp/>and<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>the<sp/>prefer<sp/>way<sp/>of<sp/>creating<sp/>such.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2.<sp/>Accessors<sp/>which<sp/>allow<sp/>for<sp/>extracting<sp/>location<sp/>information<sp/>in<sp/>various</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>formats.<sp/>If<sp/>necessary,<sp/>the<sp/>location<sp/>information<sp/>is<sp/>converted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEDIAPIPE_FRAMEWORK_FORMATS_LOCATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEDIAPIPE_FRAMEWORK_FORMATS_LOCATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/formats/location_data.pb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/port/point2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/port/rectangle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mediapipe<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BoundingBox;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mediapipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mediapipe<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Location<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CREATION<sp/>METHODS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>Location();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructs<sp/>a<sp/>location<sp/>wrapping<sp/>the<sp/>specified<sp/>location<sp/>data.<sp/>Checks<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>validity<sp/>of<sp/>the<sp/>input<sp/>and<sp/>crashes<sp/>upon<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>Location(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LocationData&amp;<sp/>location_data);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>location<sp/>of<sp/>type<sp/>GLOBAL,<sp/>i.e.<sp/>a<sp/>location<sp/>representing<sp/>the<sp/>full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Location<sp/>CreateGlobalLocation();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>location<sp/>of<sp/>type<sp/>BOUNDING_BOX,<sp/>i.e.<sp/>it<sp/>is<sp/>based<sp/>on<sp/>a<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>defined<sp/>by<sp/>its<sp/>upper<sp/>left<sp/>corner<sp/>(xmin,<sp/>ymin)<sp/>and<sp/>its<sp/>width<sp/>and<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Location<sp/>CreateBBoxLocation(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xmin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ymin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>location<sp/>of<sp/>type<sp/>BOUNDING_BOX<sp/>from<sp/>bounding<sp/>boxes<sp/>in<sp/>various</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>formats.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Location<sp/>CreateBBoxLocation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rectangle_i&amp;<sp/>rect);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Location<sp/>CreateBBoxLocation(const<sp/>::mediapipe::BoundingBox&amp;<sp/>bbox);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>location<sp/>of<sp/>type<sp/>RELATIVE_BOUNDING_BOX,<sp/>i.e.<sp/>it<sp/>is<sp/>based<sp/>on<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bounding<sp/>box<sp/>defined<sp/>by<sp/>its<sp/>upper<sp/>left<sp/>corner<sp/>(xmin,<sp/>ymin)<sp/>and<sp/>its<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>height,<sp/>all<sp/>relative<sp/>to<sp/>the<sp/>image<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Location<sp/>CreateRelativeBBoxLocation(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>relative_xmin,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>relative_ymin,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>relative_width,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>relative_height);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>location<sp/>of<sp/>type<sp/>RELATIVE_BOUNDING_BOX<sp/>from<sp/>bounding<sp/>boxes<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>various<sp/>formats.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Location<sp/>CreateRelativeBBoxLocation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rectangle_f&amp;<sp/>relative_rect);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>location<sp/>type<sp/>describing<sp/>the<sp/>type<sp/>of<sp/>data<sp/>it<sp/>contains.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>is<sp/>set<sp/>at<sp/>creation<sp/>time<sp/>based<sp/>on<sp/>the<sp/>one<sp/>of<sp/>the<sp/>above<sp/>factory<sp/>methods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>LocationData::Format<sp/>GetFormat()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>the<sp/>validity<sp/>of<sp/>the<sp/>specified<sp/>location_data,<sp/>i.e.<sp/>whether<sp/>all<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>necessary<sp/>fields<sp/>for<sp/>the<sp/>location<sp/>data<sp/>type<sp/>are<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsValidLocationData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LocationData&amp;<sp/>location_data);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MODIFIERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scales<sp/>the<sp/>current<sp/>bounding<sp/>box<sp/>(x,y,width,height)<sp/>by<sp/>the<sp/>&quot;scale&quot;<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(1.0f<sp/>means<sp/>no<sp/>scale,<sp/>&lt;1.0f<sp/>means<sp/>scale<sp/>down,<sp/>and<sp/>&gt;1.0f<sp/>means<sp/>scale<sp/>up).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>*this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>it<sp/>does<sp/>not<sp/>handle<sp/>masks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>Location&amp;<sp/>Scale(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Resizes<sp/>the<sp/>location<sp/>such<sp/>that<sp/>it<sp/>is<sp/>the<sp/>tighest<sp/>square<sp/>location<sp/>containing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>centered<sp/>the<sp/>original<sp/>location.<sp/>It<sp/>supports<sp/>locations<sp/>of<sp/>type<sp/>GLOBAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>BOUNDING_BOX<sp/>and<sp/>RELATIVE_BOUNDING_BOX,<sp/>otherwise<sp/>it<sp/>CHECK-fails.<sp/>The<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>specify<sp/>the<sp/>image<sp/>dimensions.<sp/>Returns<sp/>*this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>Location&amp;<sp/>Square(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_height);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>location<sp/>is<sp/>larger<sp/>than<sp/>the<sp/>image,<sp/>then<sp/>in<sp/>some<sp/>cases<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>beneficial<sp/>to<sp/>translate<sp/>the<sp/>location<sp/>such<sp/>that<sp/>the<sp/>image<sp/>is<sp/>centered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>within<sp/>the<sp/>location.<sp/>The<sp/>following<sp/>method<sp/>achieves<sp/>this<sp/>translation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>*this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>Location&amp;<sp/>ShiftToFitBestIntoImage(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_height);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Replaces<sp/>the<sp/>location<sp/>with<sp/>the<sp/>intersection<sp/>of<sp/>the<sp/>current<sp/>location<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specified<sp/>crop<sp/>rectangle.<sp/>Locations<sp/>of<sp/>type<sp/>GLOBAL<sp/>remain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unmodified.<sp/>The<sp/>image<sp/>size<sp/>is<sp/>used<sp/>for<sp/>locations<sp/>of<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>BOUNDARY_BOX<sp/>and<sp/>MASK.<sp/>Using<sp/>this<sp/>override<sp/>for<sp/>locations<sp/>of<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>RELATIVE_BOUNDING_BOX<sp/>is<sp/>an<sp/>error.<sp/>Use<sp/>the<sp/>Rectangle_f<sp/>override<sp/>of<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>operation<sp/>is<sp/>useful<sp/>when<sp/>one<sp/>needs<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>location<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fully<sp/>contained<sp/>within<sp/>the<sp/>specified<sp/>image.<sp/>Returns<sp/>*this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>Location&amp;<sp/>Crop(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rectangle_i&amp;<sp/>crop_rectangle);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Replaces<sp/>the<sp/>location<sp/>with<sp/>the<sp/>intersection<sp/>of<sp/>the<sp/>current<sp/>location<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specified<sp/>crop<sp/>rectangle.<sp/>Locations<sp/>of<sp/>type<sp/>GLOBAL<sp/>remain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unmodified.<sp/>This<sp/>override<sp/>is<sp/>only<sp/>for<sp/>locations<sp/>of<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>RELATIVE_BOUNDING_BOX.<sp/>Use<sp/>the<sp/>Rectangle_i<sp/>override<sp/>of<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>for<sp/>other<sp/>types<sp/>of<sp/>locations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>operation<sp/>is<sp/>useful<sp/>when<sp/>one<sp/>needs<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>location<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fully<sp/>contained<sp/>within<sp/>the<sp/>specified<sp/>image.<sp/>Returns<sp/>*this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>Location&amp;<sp/>Crop(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rectangle_f&amp;<sp/>crop_rectangle);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ACCESSORS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-type<sp/>converting<sp/>accessor:<sp/>returns<sp/>the<sp/>requested<sp/>data<sp/>only<sp/>if<sp/>the<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>is<sp/>consistent<sp/>with<sp/>the<sp/>location<sp/>data<sp/>type.<sp/>E.g.<sp/>if<sp/>one<sp/>requests<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rectangle,<sp/>then<sp/>the<sp/>wrapped<sp/>location<sp/>data<sp/>should<sp/>be<sp/>of<sp/>type<sp/>BOUNDING_BOX.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accessor<sp/>for<sp/>location<sp/>data<sp/>type<sp/>BOUNDING_BOX<sp/>with<sp/>two<sp/>possible<sp/>return<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rectangle_i<sp/>and<sp/>mediapipe.::mediapipe::BoundingBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>T<sp/>GetBBox()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accessor<sp/>for<sp/>location<sp/>data<sp/>type<sp/>RELATIVE_BOUNDING_BOX.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>Rectangle_f<sp/>GetRelativeBBox()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accessor<sp/>for<sp/>relative_keypoints<sp/>in<sp/>location<sp/>data.<sp/>Relative<sp/>keypoints<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specified<sp/>with<sp/>x<sp/>and<sp/>y<sp/>coordinates,<sp/>where<sp/>both<sp/>x<sp/>and<sp/>y<sp/>are<sp/>relative<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>image<sp/>width<sp/>and<sp/>height,<sp/>respectively,<sp/>and<sp/>are<sp/>in<sp/>the<sp/>range<sp/>[0,<sp/>1].<sp/>Fails<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>location<sp/>data<sp/>is<sp/>not<sp/>of<sp/>type<sp/>RELATIVE_BOUNDING_BOX.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>std::vector&lt;Point2_f&gt;<sp/>GetRelativeKeypoints()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Type<sp/>converting<sp/>accessor:<sp/>returns<sp/>the<sp/>requested<sp/>data<sp/>in<sp/>the<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>type.<sp/>If<sp/>the<sp/>location<sp/>data<sp/>is<sp/>in<sp/>a<sp/>format<sp/>not<sp/>directly<sp/>convertible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>specified<sp/>return<sp/>type<sp/>the<sp/>following<sp/>conversion<sp/>principles<sp/>are<sp/>used:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>Rectangle<sp/>-&gt;<sp/>Mask:<sp/>the<sp/>rectangle<sp/>is<sp/>converted<sp/>to<sp/>a<sp/>mask<sp/>with<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>pixels<sp/>inside<sp/>the<sp/>rectangle<sp/>being<sp/>foreground<sp/>pixels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>Mask<sp/>-&gt;<sp/>Rectangle:<sp/>the<sp/>tightest<sp/>enclosing<sp/>rectangle<sp/>to<sp/>the<sp/>mask<sp/>is<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>rectangle<sp/>representation<sp/>of<sp/>a<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>Global<sp/>-&gt;<sp/>Rectangle,<sp/>Mask:<sp/>all<sp/>the<sp/>pixels<sp/>in<sp/>the<sp/>image<sp/>are<sp/>considered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>foreground.<sp/>Thus,<sp/>the<sp/>equivalent<sp/>rectangle<sp/>and<sp/>mask<sp/>are<sp/>a<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>covering<sp/>the<sp/>full<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>supported<sp/>output<sp/>types<sp/>are<sp/>the<sp/>same<sp/>as<sp/>for<sp/>GetBBox()<sp/>above:<sp/>Rectangle_i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>mediapipe.::mediapipe::BoundingBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>T<sp/>ConvertToBBox(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_height)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>Rectangle_f<sp/>ConvertToRelativeBBox(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_height)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>keypoints<sp/>in<sp/>absolute<sp/>pixel<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>std::vector&lt;Point2_i&gt;<sp/>ConvertToKeypoints(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_width,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_height)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>keypoints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRelativeKeypoints(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Point2_f&gt;&amp;<sp/>keypoints);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serializes<sp/>and<sp/>deserializes<sp/>the<sp/>location<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConvertToProto(LocationData*<sp/>proto)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>LocationData<sp/>ConvertToProto()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetFromProto(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LocationData&amp;<sp/>proto);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(MEDIAPIPE_MOBILE)<sp/>&amp;&amp;<sp/>!defined(MEDIAPIPE_LITE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>equality<sp/>comparison.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Location&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Location&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>!defined(MEDIAPIPE_MOBILE)<sp/>&amp;&amp;<sp/>!defined(MEDIAPIPE_LITE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>wrapped<sp/>location<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>LocationData<sp/>location_data_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">};</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mediapipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>MEDIAPIPE_FRAMEWORK_FORMATS_LOCATION_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/location.h"/>
  </compounddef>
</doxygen>
