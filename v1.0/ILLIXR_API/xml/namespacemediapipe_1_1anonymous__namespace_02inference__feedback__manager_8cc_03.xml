<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacemediapipe_1_1anonymous__namespace_02inference__feedback__manager_8cc_03" kind="namespace" language="C++">
    <compoundname>mediapipe::anonymous_namespace{inference_feedback_manager.cc}</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02inference__feedback__manager_8cc_03_1a759d1da2d2021b6dadb82e95e05dde9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::anonymous_namespace{inference_feedback_manager.cc}::TfLiteTensorSpecEqual</definition>
        <argsstring>(const TfLiteTensor &amp;a, const TfLiteTensor &amp;b)</argsstring>
        <name>TfLiteTensorSpecEqual</name>
        <qualifiedname>mediapipe::anonymous_namespace{inference_feedback_manager.cc}::TfLiteTensorSpecEqual</qualifiedname>
        <param>
          <type>const TfLiteTensor &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const TfLiteTensor &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_feedback_manager.cc" line="28" column="6" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_feedback_manager.cc" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02inference__feedback__manager_8cc_03_1affff6a246f3f1fd1e5f1548dbaf09b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::flat_hash_map&lt; std::string, int &gt;</type>
        <definition>absl::flat_hash_map&lt; std::string, int &gt; mediapipe::anonymous_namespace{inference_feedback_manager.cc}::CreateNameToIndexMap</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;names)</argsstring>
        <name>CreateNameToIndexMap</name>
        <qualifiedname>mediapipe::anonymous_namespace{inference_feedback_manager.cc}::CreateNameToIndexMap</qualifiedname>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_feedback_manager.cc" line="35" column="21" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_feedback_manager.cc" bodystart="35" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/inference_feedback_manager.cc" line="26" column="1"/>
  </compounddef>
</doxygen>
