<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmediapipe_1_1GpuResources" kind="class" language="C++" prot="public">
    <compoundname>mediapipe::GpuResources</compoundname>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmediapipe_1_1GpuResources_1a271ec196e6407d4a35fa94b5e863cf79" prot="public" static="no">
        <type>absl::StatusOr&lt; std::shared_ptr&lt; GpuResources &gt; &gt;</type>
        <definition>using mediapipe::GpuResources::StatusOrGpuResources =  absl::StatusOr&lt;std::shared_ptr&lt;GpuResources&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>StatusOrGpuResources</name>
        <qualifiedname>mediapipe::GpuResources::StatusOrGpuResources</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="47" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmediapipe_1_1GpuResources_1ac42f0be376778b47614beb7c62a17631" prot="private" static="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; GlContext &gt; &gt;</type>
        <definition>using mediapipe::GpuResources::GlContextMapType =  std::map&lt;std::string, std::shared_ptr&lt;GlContext&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>GlContextMapType</name>
        <qualifiedname>mediapipe::GpuResources::GlContextMapType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="88" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" bodystart="88" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmediapipe_1_1GpuResources_1ad4413ad92f3463e49e7e27319d8163ac" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; mediapipe::GpuResources::node_key_</definition>
        <argsstring></argsstring>
        <name>node_key_</name>
        <qualifiedname>mediapipe::GpuResources::node_key_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="86" column="12" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmediapipe_1_1GpuResources_1ad367d1e1a9df1f5fd165a3712d9a4f0d" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; GlContextMapType, void(*)(GlContextMapType *)&gt;</type>
        <definition>std::unique_ptr&lt;GlContextMapType, void (*)(GlContextMapType*)&gt; mediapipe::GpuResources::gl_key_context_</definition>
        <argsstring></argsstring>
        <name>gl_key_context_</name>
        <qualifiedname>mediapipe::GpuResources::gl_key_context_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="90" column="7" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmediapipe_1_1GpuResources_1a33bc747d1c6fa08ff9632237cc5d8ba3" prot="private" static="no" mutable="no">
        <type>GpuBufferMultiPool</type>
        <definition>GpuBufferMultiPool mediapipe::GpuResources::gpu_buffer_pool_</definition>
        <argsstring></argsstring>
        <name>gpu_buffer_pool_</name>
        <qualifiedname>mediapipe::GpuResources::gpu_buffer_pool_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="98" column="22" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmediapipe_1_1GpuResources_1a2eadca285d590a815d7defba8f7806c2" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; Executor &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::shared_ptr&lt;Executor&gt; &gt; mediapipe::GpuResources::named_executors_</definition>
        <argsstring></argsstring>
        <name>named_executors_</name>
        <qualifiedname>mediapipe::GpuResources::named_executors_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="104" column="12" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" bodystart="104" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1aaa418209953205365f918cbd04ecdb2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusOrGpuResources</type>
        <definition>GpuResources::StatusOrGpuResources mediapipe::GpuResources::Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <qualifiedname>mediapipe::GpuResources::Create</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="49" column="31" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.cc" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1a7cecb158c78fe9cf6af0b0e487ff3879" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusOrGpuResources</type>
        <definition>GpuResources::StatusOrGpuResources mediapipe::GpuResources::Create</definition>
        <argsstring>(PlatformGlContext external_context)</argsstring>
        <name>Create</name>
        <qualifiedname>mediapipe::GpuResources::Create</qualifiedname>
        <param>
          <type>PlatformGlContext</type>
          <declname>external_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="50" column="31" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.cc" bodystart="80" bodyend="88"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1ad5b4d11d1043c1c20a8ad0d1e392afab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mediapipe::GpuResources::~GpuResources</definition>
        <argsstring>()</argsstring>
        <name>~GpuResources</name>
        <qualifiedname>mediapipe::GpuResources::~GpuResources</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="54" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.cc" bodystart="128" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1ae5fdcea1d8f742598c5b607adb4a3353" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>mediapipe::GpuResources::GpuResources</definition>
        <argsstring>(PlatformGlContext external_context)</argsstring>
        <name>GpuResources</name>
        <qualifiedname>mediapipe::GpuResources::GpuResources</qualifiedname>
        <param>
          <type>PlatformGlContext</type>
          <declname>external_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="56" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1a9e5dc3fdc9e6248fa9a1081be669edde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::shared_ptr&lt; GlContext &gt; &amp;</type>
        <definition>const std::shared_ptr&lt; GlContext &gt; &amp; mediapipe::GpuResources::gl_context</definition>
        <argsstring>()</argsstring>
        <name>gl_context</name>
        <qualifiedname>mediapipe::GpuResources::gl_context</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="60" column="25" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1aeec009a625ff3cb95cb44b2aceeaa20e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::shared_ptr&lt; GlContext &gt; &amp;</type>
        <definition>const std::shared_ptr&lt; GlContext &gt; &amp; mediapipe::GpuResources::gl_context</definition>
        <argsstring>(CalculatorContext *cc)</argsstring>
        <name>gl_context</name>
        <qualifiedname>mediapipe::GpuResources::gl_context</qualifiedname>
        <param>
          <type>CalculatorContext *</type>
          <declname>cc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="62" column="25" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.cc" bodystart="204" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1a8fc183e77d54ffcf9860510f63889d0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GpuBufferMultiPool &amp;</type>
        <definition>GpuBufferMultiPool &amp; mediapipe::GpuResources::gpu_buffer_pool</definition>
        <argsstring>()</argsstring>
        <name>gpu_buffer_pool</name>
        <qualifiedname>mediapipe::GpuResources::gpu_buffer_pool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="65" column="22" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1a50a09f409a0208738ab578c633e66513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::GpuResources::PrepareGpuNode</definition>
        <argsstring>(CalculatorNode *node)</argsstring>
        <name>PrepareGpuNode</name>
        <qualifiedname>mediapipe::GpuResources::PrepareGpuNode</qualifiedname>
        <param>
          <type>CalculatorNode *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="71" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.cc" bodystart="154" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1a7fe27b66d043de282dfa5d349388814d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::map&lt; std::string, std::shared_ptr&lt; Executor &gt; &gt; &amp;</type>
        <definition>const std::map&lt; std::string, std::shared_ptr&lt; Executor &gt; &gt; &amp; mediapipe::GpuResources::GetGpuExecutors</definition>
        <argsstring>()</argsstring>
        <name>GetGpuExecutors</name>
        <qualifiedname>mediapipe::GpuResources::GetGpuExecutors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="75" column="18" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" bodystart="75" bodyend="77"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1af93c0ef144c5483dad07470bce734de2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mediapipe::GpuResources::GpuResources</definition>
        <argsstring>()=delete</argsstring>
        <name>GpuResources</name>
        <qualifiedname>mediapipe::GpuResources::GpuResources</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="80" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1a469b2229aa27932afdb02278f435e1cc" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>mediapipe::GpuResources::GpuResources</definition>
        <argsstring>(std::shared_ptr&lt; GlContext &gt; gl_context)</argsstring>
        <name>GpuResources</name>
        <qualifiedname>mediapipe::GpuResources::GpuResources</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; GlContext &gt;</type>
          <declname>gl_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="81" column="12" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.cc" bodystart="90" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1a32bfedde00de92a4990d43c1b09fc359" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GlContext::StatusOrGlContext</type>
        <definition>GlContext::StatusOrGlContext mediapipe::GpuResources::GetOrCreateGlContext</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>GetOrCreateGlContext</name>
        <qualifiedname>mediapipe::GpuResources::GetOrCreateGlContext</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="83" column="32" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.cc" bodystart="216" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuResources_1ac5ba4fee9cfe1b6fb71744b23f330b36" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; mediapipe::GpuResources::ContextKey</definition>
        <argsstring>(const std::string &amp;canonical_node_name)</argsstring>
        <name>ContextKey</name>
        <qualifiedname>mediapipe::GpuResources::ContextKey</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>canonical_node_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="84" column="21"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" line="45" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_shared_data_internal.h" bodystart="45" bodyend="105"/>
    <listofallmembers>
      <member refid="classmediapipe_1_1GpuResources_1ac5ba4fee9cfe1b6fb71744b23f330b36" prot="private" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>ContextKey</name></member>
      <member refid="classmediapipe_1_1GpuResources_1aaa418209953205365f918cbd04ecdb2b" prot="public" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>Create</name></member>
      <member refid="classmediapipe_1_1GpuResources_1a7cecb158c78fe9cf6af0b0e487ff3879" prot="public" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>Create</name></member>
      <member refid="classmediapipe_1_1GpuResources_1a7fe27b66d043de282dfa5d349388814d" prot="public" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>GetGpuExecutors</name></member>
      <member refid="classmediapipe_1_1GpuResources_1a32bfedde00de92a4990d43c1b09fc359" prot="private" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>GetOrCreateGlContext</name></member>
      <member refid="classmediapipe_1_1GpuResources_1a9e5dc3fdc9e6248fa9a1081be669edde" prot="public" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>gl_context</name></member>
      <member refid="classmediapipe_1_1GpuResources_1aeec009a625ff3cb95cb44b2aceeaa20e" prot="public" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>gl_context</name></member>
      <member refid="classmediapipe_1_1GpuResources_1ad367d1e1a9df1f5fd165a3712d9a4f0d" prot="private" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>gl_key_context_</name></member>
      <member refid="classmediapipe_1_1GpuResources_1ac42f0be376778b47614beb7c62a17631" prot="private" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>GlContextMapType</name></member>
      <member refid="classmediapipe_1_1GpuResources_1a8fc183e77d54ffcf9860510f63889d0d" prot="public" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>gpu_buffer_pool</name></member>
      <member refid="classmediapipe_1_1GpuResources_1a33bc747d1c6fa08ff9632237cc5d8ba3" prot="private" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>gpu_buffer_pool_</name></member>
      <member refid="classmediapipe_1_1GpuResources_1ae5fdcea1d8f742598c5b607adb4a3353" prot="public" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>GpuResources</name></member>
      <member refid="classmediapipe_1_1GpuResources_1af93c0ef144c5483dad07470bce734de2" prot="private" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>GpuResources</name></member>
      <member refid="classmediapipe_1_1GpuResources_1a469b2229aa27932afdb02278f435e1cc" prot="private" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>GpuResources</name></member>
      <member refid="classmediapipe_1_1GpuResources_1a2eadca285d590a815d7defba8f7806c2" prot="private" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>named_executors_</name></member>
      <member refid="classmediapipe_1_1GpuResources_1ad4413ad92f3463e49e7e27319d8163ac" prot="private" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>node_key_</name></member>
      <member refid="classmediapipe_1_1GpuResources_1a50a09f409a0208738ab578c633e66513" prot="public" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>PrepareGpuNode</name></member>
      <member refid="classmediapipe_1_1GpuResources_1a271ec196e6407d4a35fa94b5e863cf79" prot="public" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>StatusOrGpuResources</name></member>
      <member refid="classmediapipe_1_1GpuResources_1ad5b4d11d1043c1c20a8ad0d1e392afab" prot="public" virt="non-virtual"><scope>mediapipe::GpuResources</scope><name>~GpuResources</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
