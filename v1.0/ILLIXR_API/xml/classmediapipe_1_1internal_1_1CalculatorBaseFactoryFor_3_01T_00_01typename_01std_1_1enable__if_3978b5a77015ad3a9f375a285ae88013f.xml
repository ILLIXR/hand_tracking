<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmediapipe_1_1internal_1_1CalculatorBaseFactoryFor_3_01T_00_01typename_01std_1_1enable__if_3978b5a77015ad3a9f375a285ae88013f" kind="class" language="C++" prot="public">
    <compoundname>mediapipe::internal::CalculatorBaseFactoryFor&lt; T, typename std::enable_if&lt; std::is_base_of&lt; mediapipe::CalculatorBase, T &gt;{} &amp;&amp;!std::is_base_of&lt; mediapipe::api2::Node, T &gt;{}&gt;::type &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">mediapipe::internal::CalculatorBaseFactory</basecompoundref>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmediapipe_1_1internal_1_1CalculatorBaseFactoryFor_3_01T_00_01typename_01std_1_1enable__if_3978b5a77015ad3a9f375a285ae88013f_1acc3db1b69b9d89ae90e1aa2c2a5c95a8" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::internal::CalculatorBaseFactoryFor&lt; T, typename std::enable_if&lt; std::is_base_of&lt; mediapipe::CalculatorBase, T &gt;{} &amp;&amp;!std::is_base_of&lt; mediapipe::api2::Node, T &gt;{}&gt;::type &gt;::GetContract</definition>
        <argsstring>(CalculatorContract *cc) final</argsstring>
        <name>GetContract</name>
        <qualifiedname>mediapipe::internal::CalculatorBaseFactoryFor&lt; T, typename std::enable_if&lt; std::is_base_of&lt; mediapipe::CalculatorBase, T &gt;{} &amp;&amp;!std::is_base_of&lt; mediapipe::api2::Node, T &gt;{}&gt;::type &gt;::GetContract</qualifiedname>
        <param>
          <type>CalculatorContract *</type>
          <declname>cc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_base.h" line="222" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_base.h" bodystart="222" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1internal_1_1CalculatorBaseFactoryFor_3_01T_00_01typename_01std_1_1enable__if_3978b5a77015ad3a9f375a285ae88013f_1a78bd61c64ee3131de06657de9eab1090" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; CalculatorBase &gt;</type>
        <definition>std::unique_ptr&lt; CalculatorBase &gt; mediapipe::internal::CalculatorBaseFactoryFor&lt; T, typename std::enable_if&lt; std::is_base_of&lt; mediapipe::CalculatorBase, T &gt;{} &amp;&amp;!std::is_base_of&lt; mediapipe::api2::Node, T &gt;{}&gt;::type &gt;::CreateCalculator</definition>
        <argsstring>(CalculatorContext *calculator_context) final</argsstring>
        <name>CreateCalculator</name>
        <qualifiedname>mediapipe::internal::CalculatorBaseFactoryFor&lt; T, typename std::enable_if&lt; std::is_base_of&lt; mediapipe::CalculatorBase, T &gt;{} &amp;&amp;!std::is_base_of&lt; mediapipe::api2::Node, T &gt;{}&gt;::type &gt;::CreateCalculator</qualifiedname>
        <param>
          <type>CalculatorContext *</type>
          <declname>calculator_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_base.h" line="228" column="19" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_base.h" bodystart="228" bodyend="232"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_base.h" line="210" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_base.h" bodystart="214" bodyend="233"/>
    <listofallmembers>
      <member refid="classmediapipe_1_1internal_1_1CalculatorBaseFactory_1a844197138f075285241fb4e9939e6dae" prot="public" virt="virtual"><scope>mediapipe::internal::CalculatorBaseFactoryFor&lt; T, typename std::enable_if&lt; std::is_base_of&lt; mediapipe::CalculatorBase, T &gt;{} &amp;&amp;!std::is_base_of&lt; mediapipe::api2::Node, T &gt;{}&gt;::type &gt;</scope><name>ContractMethodName</name></member>
      <member refid="classmediapipe_1_1internal_1_1CalculatorBaseFactoryFor_3_01T_00_01typename_01std_1_1enable__if_3978b5a77015ad3a9f375a285ae88013f_1a78bd61c64ee3131de06657de9eab1090" prot="public" virt="non-virtual"><scope>mediapipe::internal::CalculatorBaseFactoryFor&lt; T, typename std::enable_if&lt; std::is_base_of&lt; mediapipe::CalculatorBase, T &gt;{} &amp;&amp;!std::is_base_of&lt; mediapipe::api2::Node, T &gt;{}&gt;::type &gt;</scope><name>CreateCalculator</name></member>
      <member refid="classmediapipe_1_1internal_1_1CalculatorBaseFactoryFor_3_01T_00_01typename_01std_1_1enable__if_3978b5a77015ad3a9f375a285ae88013f_1acc3db1b69b9d89ae90e1aa2c2a5c95a8" prot="public" virt="non-virtual"><scope>mediapipe::internal::CalculatorBaseFactoryFor&lt; T, typename std::enable_if&lt; std::is_base_of&lt; mediapipe::CalculatorBase, T &gt;{} &amp;&amp;!std::is_base_of&lt; mediapipe::api2::Node, T &gt;{}&gt;::type &gt;</scope><name>GetContract</name></member>
      <member refid="classmediapipe_1_1internal_1_1CalculatorBaseFactory_1ae4fac883aa7244042aec911199c407f9" prot="public" virt="virtual"><scope>mediapipe::internal::CalculatorBaseFactoryFor&lt; T, typename std::enable_if&lt; std::is_base_of&lt; mediapipe::CalculatorBase, T &gt;{} &amp;&amp;!std::is_base_of&lt; mediapipe::api2::Node, T &gt;{}&gt;::type &gt;</scope><name>~CalculatorBaseFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
