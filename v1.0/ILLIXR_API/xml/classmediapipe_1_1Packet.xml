<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmediapipe_1_1Packet" kind="class" language="C++" prot="public">
    <compoundname>mediapipe::Packet</compoundname>
    <derivedcompoundref refid="classmediapipe_1_1api2_1_1Packet" prot="public" virt="non-virtual">mediapipe::api2::Packet&lt; TfLiteModelPtr &gt;</derivedcompoundref>
    <derivedcompoundref refid="classmediapipe_1_1api2_1_1Packet" prot="public" virt="non-virtual">mediapipe::api2::Packet&lt; T &gt;</derivedcompoundref>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classmediapipe_1_1Packet_1aae550c8fa3e4f88eb69327ad3780d171" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class PacketType</definition>
        <argsstring></argsstring>
        <name>PacketType</name>
        <qualifiedname>mediapipe::Packet::PacketType</qualifiedname>
        <param>
          <type>PacketType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="248" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmediapipe_1_1Packet_1ac5807a837055804dccd60580a00415d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const Packet &amp;p)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>mediapipe::Packet::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const Packet &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="223" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="friend" id="classmediapipe_1_1Packet_1a80058404437b04d8b85bb4c6177a38eb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Packet</type>
        <definition>Packet packet_internal::Create</definition>
        <argsstring>(packet_internal::HolderBase *holder)</argsstring>
        <name>packet_internal::Create</name>
        <qualifiedname>mediapipe::Packet::Create</qualifiedname>
        <param>
          <type>packet_internal::HolderBase *</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="235" column="17"/>
      </memberdef>
      <memberdef kind="friend" id="classmediapipe_1_1Packet_1af82c68fd5d798ea616d7257a2b82a4c0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Packet</type>
        <definition>Packet packet_internal::Create</definition>
        <argsstring>(packet_internal::HolderBase *holder, class Timestamp timestamp)</argsstring>
        <name>packet_internal::Create</name>
        <qualifiedname>mediapipe::Packet::Create</qualifiedname>
        <param>
          <type>packet_internal::HolderBase *</type>
          <declname>holder</declname>
        </param>
        <param>
          <type>class Timestamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="236" column="17"/>
      </memberdef>
      <memberdef kind="friend" id="classmediapipe_1_1Packet_1ad520580eccfd2031131aa567535e2a68" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Packet</type>
        <definition>Packet packet_internal::Create</definition>
        <argsstring>(std::shared_ptr&lt; packet_internal::HolderBase &gt; holder, class Timestamp timestamp)</argsstring>
        <name>packet_internal::Create</name>
        <qualifiedname>mediapipe::Packet::Create</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; packet_internal::HolderBase &gt;</type>
          <declname>holder</declname>
        </param>
        <param>
          <type>class Timestamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="238" column="17"/>
      </memberdef>
      <memberdef kind="friend" id="classmediapipe_1_1Packet_1a2ebb50da3eec0ff655677a22aeac1cf2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const packet_internal::HolderBase *</type>
        <definition>const packet_internal::HolderBase * packet_internal::GetHolder</definition>
        <argsstring>(const Packet &amp;packet)</argsstring>
        <name>packet_internal::GetHolder</name>
        <qualifiedname>mediapipe::Packet::GetHolder</qualifiedname>
        <param>
          <type>const Packet &amp;</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="241" column="44"/>
      </memberdef>
      <memberdef kind="friend" id="classmediapipe_1_1Packet_1aa7054c7b832a194a207233dfbc3833ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::shared_ptr&lt; packet_internal::HolderBase &gt; &amp;</type>
        <definition>const std::shared_ptr&lt; packet_internal::HolderBase &gt; &amp; packet_internal::GetHolderShared</definition>
        <argsstring>(const Packet &amp;packet)</argsstring>
        <name>packet_internal::GetHolderShared</name>
        <qualifiedname>mediapipe::Packet::GetHolderShared</qualifiedname>
        <param>
          <type>const Packet &amp;</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="244" column="3"/>
      </memberdef>
      <memberdef kind="friend" id="classmediapipe_1_1Packet_1a44780d33159a732dd778c2467311a9a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; packet_internal::HolderBase &gt;</type>
        <definition>std::shared_ptr&lt; packet_internal::HolderBase &gt; packet_internal::GetHolderShared</definition>
        <argsstring>(Packet &amp;&amp;packet)</argsstring>
        <name>packet_internal::GetHolderShared</name>
        <qualifiedname>mediapipe::Packet::GetHolderShared</qualifiedname>
        <param>
          <type>Packet &amp;&amp;</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="246" column="3"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmediapipe_1_1Packet_1ab8195f4780a0529b05933bb86270bbd1" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; packet_internal::HolderBase &gt;</type>
        <definition>std::shared_ptr&lt;packet_internal::HolderBase&gt; mediapipe::Packet::holder_</definition>
        <argsstring></argsstring>
        <name>holder_</name>
        <qualifiedname>mediapipe::Packet::holder_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="251" column="19" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmediapipe_1_1Packet_1aafaa106b827d274207ad4e9bbd56ce38" prot="private" static="no" mutable="no">
        <type>class Timestamp</type>
        <definition>class Timestamp mediapipe::Packet::timestamp_</definition>
        <argsstring></argsstring>
        <name>timestamp_</name>
        <qualifiedname>mediapipe::Packet::timestamp_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="252" column="18" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="252" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmediapipe_1_1Packet_1a4514fd6983c453047c0ec903aed21408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mediapipe::Packet::Packet</definition>
        <argsstring>()=default</argsstring>
        <name>Packet</name>
        <qualifiedname>mediapipe::Packet::Packet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="85" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1ae4c2120527d85809cb8e094cc5f5e82b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::Packet::Packet</definition>
        <argsstring>(const Packet &amp;)</argsstring>
        <name>Packet</name>
        <qualifiedname>mediapipe::Packet::Packet</qualifiedname>
        <param>
          <type>const Packet &amp;</type>
          <defname>packet</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="88" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="625" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1aa02795edd37c8d8712545b7ba33d7ded" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Packet &amp;</type>
        <definition>Packet &amp; mediapipe::Packet::operator=</definition>
        <argsstring>(const Packet &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>mediapipe::Packet::operator=</qualifiedname>
        <param>
          <type>const Packet &amp;</type>
          <defname>packet</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="89" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="630" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1aaa5a7957cb3a943e6b6caea780ea7e6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::Packet::Packet</definition>
        <argsstring>(Packet &amp;&amp;)</argsstring>
        <name>Packet</name>
        <qualifiedname>mediapipe::Packet::Packet</qualifiedname>
        <param>
          <type>Packet &amp;&amp;</type>
          <defname>packet</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="93" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="735" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1a1de447a6116a0e1bd0c02c77e73d89fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Packet &amp;</type>
        <definition>Packet &amp; mediapipe::Packet::operator=</definition>
        <argsstring>(Packet &amp;&amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>mediapipe::Packet::operator=</qualifiedname>
        <param>
          <type>Packet &amp;&amp;</type>
          <defname>packet</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="94" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="742" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1a6feb73491115aee2f455c9e52d60fbfb" prot="public" static="no" const="yes" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type>Packet</type>
        <definition>Packet mediapipe::Packet::At</definition>
        <argsstring>(class Timestamp timestamp) const &amp;</argsstring>
        <name>At</name>
        <qualifiedname>mediapipe::Packet::At</qualifiedname>
        <param>
          <type>class Timestamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="98" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.cc" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1a64721eaf48624dc77612424ab3cf0163" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type>Packet</type>
        <definition>Packet mediapipe::Packet::At</definition>
        <argsstring>(class Timestamp timestamp) &amp;&amp;</argsstring>
        <name>At</name>
        <qualifiedname>mediapipe::Packet::At</qualifiedname>
        <param>
          <type>class Timestamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="103" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.cc" bodystart="75" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1ae90e065151b6c857aa9bb3c9db951ca2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::Packet::IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <qualifiedname>mediapipe::Packet::IsEmpty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="107" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="752" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1af0c3465b9552495a9f5580b5f8d0357a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T &amp; mediapipe::Packet::Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <qualifiedname>mediapipe::Packet::Get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="113" column="11" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="760" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1aec9015e8ddf50176d24fc0ad4b014445" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>absl::StatusOr&lt; std::unique_ptr&lt; T &gt; &gt;</type>
        <definition>absl::StatusOr&lt; std::unique_ptr&lt; T &gt; &gt; mediapipe::Packet::Consume</definition>
        <argsstring>()</argsstring>
        <name>Consume</name>
        <qualifiedname>mediapipe::Packet::Consume</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="131" column="18" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="640" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1ab35adcfdae3312b0b6a5955c589ac55a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>absl::StatusOr&lt; std::unique_ptr&lt; T &gt; &gt;</type>
        <definition>absl::StatusOr&lt; std::unique_ptr&lt; T &gt; &gt; mediapipe::Packet::ConsumeOrCopy</definition>
        <argsstring>(bool *was_copied=nullptr, typename std::enable_if&lt;!std::is_array&lt; T &gt;::value &gt;::type *=nullptr)</argsstring>
        <name>ConsumeOrCopy</name>
        <qualifiedname>mediapipe::Packet::ConsumeOrCopy</qualifiedname>
        <param>
          <type>bool *</type>
          <declname>was_copied</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>typename std::enable_if&lt;!std::is_array&lt; T &gt;::value &gt;::type *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="174" column="18" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="662" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1a561614e3288d5d53f9acc0a7164b6dd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>absl::StatusOr&lt; std::unique_ptr&lt; T &gt; &gt;</type>
        <definition>absl::StatusOr&lt; std::unique_ptr&lt; T &gt; &gt; mediapipe::Packet::ConsumeOrCopy</definition>
        <argsstring>(bool *was_copied=nullptr, typename std::enable_if&lt; std::is_array&lt; T &gt;::value &amp;&amp;std::extent&lt; T &gt;::value !=0 &gt;::type *=nullptr)</argsstring>
        <name>ConsumeOrCopy</name>
        <qualifiedname>mediapipe::Packet::ConsumeOrCopy</qualifiedname>
        <param>
          <type>bool *</type>
          <declname>was_copied</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>typename std::enable_if&lt; std::is_array&lt; T &gt;::value &amp;&amp;std::extent&lt; T &gt;::value !=0 &gt;::type *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="180" column="18" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="691" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1aeb56ee77a22e887c3763208b0065a2ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>absl::StatusOr&lt; std::unique_ptr&lt; T &gt; &gt;</type>
        <definition>absl::StatusOr&lt; std::unique_ptr&lt; T &gt; &gt; mediapipe::Packet::ConsumeOrCopy</definition>
        <argsstring>(bool *was_copied=nullptr, typename std::enable_if&lt; std::is_array&lt; T &gt;::value &amp;&amp;std::extent&lt; T &gt;::value==0 &gt;::type *=nullptr)</argsstring>
        <name>ConsumeOrCopy</name>
        <qualifiedname>mediapipe::Packet::ConsumeOrCopy</qualifiedname>
        <param>
          <type>bool *</type>
          <declname>was_copied</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>typename std::enable_if&lt; std::is_array&lt; T &gt;::value &amp;&amp;std::extent&lt; T &gt;::value==0 &gt;::type *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="189" column="18" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="727" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1ad22b4546494896be7ea07f40845bd425" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const proto_ns::MessageLite &amp;</type>
        <definition>const proto_ns::MessageLite &amp; mediapipe::Packet::GetProtoMessageLite</definition>
        <argsstring>() const</argsstring>
        <name>GetProtoMessageLite</name>
        <qualifiedname>mediapipe::Packet::GetProtoMessageLite</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="196" column="31" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.cc" bodystart="137" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1a03945a9fdd61d3e84a9bf24cd688d386" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>StatusOr&lt; std::vector&lt; const proto_ns::MessageLite * &gt; &gt;</type>
        <definition>StatusOr&lt; std::vector&lt; const proto_ns::MessageLite * &gt; &gt; mediapipe::Packet::GetVectorOfProtoMessageLitePtrs</definition>
        <argsstring>() const</argsstring>
        <name>GetVectorOfProtoMessageLitePtrs</name>
        <qualifiedname>mediapipe::Packet::GetVectorOfProtoMessageLitePtrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="203" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.cc" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1ae2fec6fa30c3c61e18bd89a1c55b33fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::Packet::ValidateAsType</definition>
        <argsstring>() const</argsstring>
        <name>ValidateAsType</name>
        <qualifiedname>mediapipe::Packet::ValidateAsType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="207" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1ade7cd267df98a8f0297d9a7d9f93d28a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::Packet::ValidateAsProtoMessageLite</definition>
        <argsstring>() const</argsstring>
        <name>ValidateAsProtoMessageLite</name>
        <qualifiedname>mediapipe::Packet::ValidateAsProtoMessageLite</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="213" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.cc" bodystart="124" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1a318eef50fb446646f9b8650c73521d60" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>TypeId</type>
        <definition>TypeId mediapipe::Packet::GetTypeId</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeId</name>
        <qualifiedname>mediapipe::Packet::GetTypeId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="217" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="754" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1a84895fb61cd280d59b8df4cab9afe3ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>class Timestamp</type>
        <definition>Timestamp mediapipe::Packet::Timestamp</definition>
        <argsstring>() const</argsstring>
        <name>Timestamp</name>
        <qualifiedname>mediapipe::Packet::Timestamp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="220" column="18" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="770" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1a0627f0fbd9e124a8d201b33d5856c63f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mediapipe::Packet::DebugString</definition>
        <argsstring>() const</argsstring>
        <name>DebugString</name>
        <qualifiedname>mediapipe::Packet::DebugString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="222" column="15" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.cc" bodystart="98" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1a95df7b7a403bf0a5da3920fb8922080a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mediapipe::Packet::RegisteredTypeName</definition>
        <argsstring>() const</argsstring>
        <name>RegisteredTypeName</name>
        <qualifiedname>mediapipe::Packet::RegisteredTypeName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="230" column="15" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.cc" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Packet_1aaa404549082464a31fab7c9775d85019" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mediapipe::Packet::DebugTypeName</definition>
        <argsstring>() const</argsstring>
        <name>DebugTypeName</name>
        <qualifiedname>mediapipe::Packet::DebugTypeName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="232" column="15" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.cc" bodystart="91" bodyend="96"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classmediapipe_1_1Packet_1a09eac9d4a1064beb5e33fbfc3aea47b8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::Packet::ValidateAsType</definition>
        <argsstring>(TypeId type_id) const</argsstring>
        <name>ValidateAsType</name>
        <qualifiedname>mediapipe::Packet::ValidateAsType</qualifiedname>
        <param>
          <type>TypeId</type>
          <declname>type_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="249" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.cc" bodystart="109" bodyend="122"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" line="80" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet.h" bodystart="80" bodyend="253"/>
    <listofallmembers>
      <member refid="classmediapipe_1_1Packet_1a6feb73491115aee2f455c9e52d60fbfb" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>At</name></member>
      <member refid="classmediapipe_1_1Packet_1a64721eaf48624dc77612424ab3cf0163" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>At</name></member>
      <member refid="classmediapipe_1_1Packet_1aec9015e8ddf50176d24fc0ad4b014445" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>Consume</name></member>
      <member refid="classmediapipe_1_1Packet_1ab35adcfdae3312b0b6a5955c589ac55a" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>ConsumeOrCopy</name></member>
      <member refid="classmediapipe_1_1Packet_1a561614e3288d5d53f9acc0a7164b6dd1" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>ConsumeOrCopy</name></member>
      <member refid="classmediapipe_1_1Packet_1aeb56ee77a22e887c3763208b0065a2ed" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>ConsumeOrCopy</name></member>
      <member refid="classmediapipe_1_1Packet_1a0627f0fbd9e124a8d201b33d5856c63f" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>DebugString</name></member>
      <member refid="classmediapipe_1_1Packet_1aaa404549082464a31fab7c9775d85019" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>DebugTypeName</name></member>
      <member refid="classmediapipe_1_1Packet_1af0c3465b9552495a9f5580b5f8d0357a" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>Get</name></member>
      <member refid="classmediapipe_1_1Packet_1ad22b4546494896be7ea07f40845bd425" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>GetProtoMessageLite</name></member>
      <member refid="classmediapipe_1_1Packet_1a318eef50fb446646f9b8650c73521d60" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>GetTypeId</name></member>
      <member refid="classmediapipe_1_1Packet_1a03945a9fdd61d3e84a9bf24cd688d386" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>GetVectorOfProtoMessageLitePtrs</name></member>
      <member refid="classmediapipe_1_1Packet_1ab8195f4780a0529b05933bb86270bbd1" prot="private" virt="non-virtual"><scope>mediapipe::Packet</scope><name>holder_</name></member>
      <member refid="classmediapipe_1_1Packet_1ae90e065151b6c857aa9bb3c9db951ca2" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>IsEmpty</name></member>
      <member refid="classmediapipe_1_1Packet_1ac5807a837055804dccd60580a00415d6" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmediapipe_1_1Packet_1aa02795edd37c8d8712545b7ba33d7ded" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1Packet_1a1de447a6116a0e1bd0c02c77e73d89fd" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1Packet_1a4514fd6983c453047c0ec903aed21408" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1Packet_1ae4c2120527d85809cb8e094cc5f5e82b" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1Packet_1aaa5a7957cb3a943e6b6caea780ea7e6f" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1Packet_1a80058404437b04d8b85bb4c6177a38eb" prot="private" virt="non-virtual"><scope>mediapipe::Packet</scope><name>packet_internal::Create</name></member>
      <member refid="classmediapipe_1_1Packet_1af82c68fd5d798ea616d7257a2b82a4c0" prot="private" virt="non-virtual"><scope>mediapipe::Packet</scope><name>packet_internal::Create</name></member>
      <member refid="classmediapipe_1_1Packet_1ad520580eccfd2031131aa567535e2a68" prot="private" virt="non-virtual"><scope>mediapipe::Packet</scope><name>packet_internal::Create</name></member>
      <member refid="classmediapipe_1_1Packet_1a2ebb50da3eec0ff655677a22aeac1cf2" prot="private" virt="non-virtual"><scope>mediapipe::Packet</scope><name>packet_internal::GetHolder</name></member>
      <member refid="classmediapipe_1_1Packet_1aa7054c7b832a194a207233dfbc3833ec" prot="private" virt="non-virtual"><scope>mediapipe::Packet</scope><name>packet_internal::GetHolderShared</name></member>
      <member refid="classmediapipe_1_1Packet_1a44780d33159a732dd778c2467311a9a3" prot="private" virt="non-virtual"><scope>mediapipe::Packet</scope><name>packet_internal::GetHolderShared</name></member>
      <member refid="classmediapipe_1_1Packet_1aae550c8fa3e4f88eb69327ad3780d171" prot="private" virt="non-virtual"><scope>mediapipe::Packet</scope><name>PacketType</name></member>
      <member refid="classmediapipe_1_1Packet_1a95df7b7a403bf0a5da3920fb8922080a" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>RegisteredTypeName</name></member>
      <member refid="classmediapipe_1_1Packet_1a84895fb61cd280d59b8df4cab9afe3ba" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>Timestamp</name></member>
      <member refid="classmediapipe_1_1Packet_1aafaa106b827d274207ad4e9bbd56ce38" prot="private" virt="non-virtual"><scope>mediapipe::Packet</scope><name>timestamp_</name></member>
      <member refid="classmediapipe_1_1Packet_1ade7cd267df98a8f0297d9a7d9f93d28a" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>ValidateAsProtoMessageLite</name></member>
      <member refid="classmediapipe_1_1Packet_1ae2fec6fa30c3c61e18bd89a1c55b33fb" prot="public" virt="non-virtual"><scope>mediapipe::Packet</scope><name>ValidateAsType</name></member>
      <member refid="classmediapipe_1_1Packet_1a09eac9d4a1064beb5e33fbfc3aea47b8" prot="private" virt="non-virtual"><scope>mediapipe::Packet</scope><name>ValidateAsType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
