<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmediapipe_1_1Image" kind="class" language="C++" prot="public">
    <compoundname>mediapipe::Image</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmediapipe_1_1Image_1a235ff3af56b0ca02835d91fa2accd0e5" prot="private" static="no" mutable="yes">
        <type>mediapipe::GpuBuffer</type>
        <definition>mediapipe::GpuBuffer mediapipe::Image::gpu_buffer_</definition>
        <argsstring></argsstring>
        <name>gpu_buffer_</name>
        <qualifiedname>mediapipe::Image::gpu_buffer_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="159" column="32" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmediapipe_1_1Image_1abb4d7258cc82582ea4accdd46d0b4e14" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool mediapipe::Image::use_gpu_</definition>
        <argsstring></argsstring>
        <name>use_gpu_</name>
        <qualifiedname>mediapipe::Image::use_gpu_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="160" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="160" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmediapipe_1_1Image_1a6a8e4fa6f2cb02f5daa47b1c3ce16570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mediapipe::Image::Image</definition>
        <argsstring>()=default</argsstring>
        <name>Image</name>
        <qualifiedname>mediapipe::Image::Image</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="64" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a433d8077851e32847fb22a91fdfd738d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mediapipe::Image::Image</definition>
        <argsstring>(const Image &amp;other)=default</argsstring>
        <name>Image</name>
        <qualifiedname>mediapipe::Image::Image</qualifiedname>
        <param>
          <type>const Image &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="67" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a9e502bcfb38229997856b539186fd81b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mediapipe::Image::Image</definition>
        <argsstring>(Image &amp;&amp;other)=default</argsstring>
        <name>Image</name>
        <qualifiedname>mediapipe::Image::Image</qualifiedname>
        <param>
          <type>Image &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="68" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a19506ce3ff2539065f3c9c5068ea0a56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Image &amp;</type>
        <definition>Image &amp; mediapipe::Image::operator=</definition>
        <argsstring>(const Image &amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>mediapipe::Image::operator=</qualifiedname>
        <param>
          <type>const Image &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="69" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a3462535ddeaec6e4a4044462752218ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Image &amp;</type>
        <definition>Image &amp; mediapipe::Image::operator=</definition>
        <argsstring>(Image &amp;&amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>mediapipe::Image::operator=</qualifiedname>
        <param>
          <type>Image &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="70" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a15257a31637d87e84c3660aeae4a2db0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::Image::Image</definition>
        <argsstring>(ImageFrameSharedPtr image_frame)</argsstring>
        <name>Image</name>
        <qualifiedname>mediapipe::Image::Image</qualifiedname>
        <param>
          <type>ImageFrameSharedPtr</type>
          <declname>image_frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="74" column="12" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a31a3eb7cf7258a74324b4f94cb53c4e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ImageFrameSharedPtr</type>
        <definition>ImageFrameSharedPtr mediapipe::Image::GetImageFrameSharedPtr</definition>
        <argsstring>() const</argsstring>
        <name>GetImageFrameSharedPtr</name>
        <qualifiedname>mediapipe::Image::GetImageFrameSharedPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="81" column="23" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a20e56352b652b8127aa2a30a7e9e6dc1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::Image::Image</definition>
        <argsstring>(mediapipe::GlTextureBufferSharedPtr texture_buffer)</argsstring>
        <name>Image</name>
        <qualifiedname>mediapipe::Image::Image</qualifiedname>
        <param>
          <type>mediapipe::GlTextureBufferSharedPtr</type>
          <declname>texture_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="95" column="12" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="95" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a277781bf95d8e417c9f8029566d0e4d3" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::Image::Image</definition>
        <argsstring>(mediapipe::GpuBuffer gpu_buffer)</argsstring>
        <name>Image</name>
        <qualifiedname>mediapipe::Image::Image</qualifiedname>
        <param>
          <type>mediapipe::GpuBuffer</type>
          <declname>gpu_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="98" column="12" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a2f2dc1aee35b6b463ca0fc0616f46ec7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>mediapipe::GlTextureBufferSharedPtr</type>
        <definition>mediapipe::GlTextureBufferSharedPtr mediapipe::Image::GetGlTextureBufferSharedPtr</definition>
        <argsstring>() const</argsstring>
        <name>GetGlTextureBufferSharedPtr</name>
        <qualifiedname>mediapipe::Image::GetGlTextureBufferSharedPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="110" column="39" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1ab495d1d9fd2a6370f6fe849e82fc9b81" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const mediapipe::GpuBuffer</type>
        <definition>const mediapipe::GpuBuffer mediapipe::Image::GetGpuBuffer</definition>
        <argsstring>(bool upload_to_gpu=true) const</argsstring>
        <name>GetGpuBuffer</name>
        <qualifiedname>mediapipe::Image::GetGpuBuffer</qualifiedname>
        <param>
          <type>bool</type>
          <declname>upload_to_gpu</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="120" column="30" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a1634efc1b38935fcff4ab9c1b5ea4cae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mediapipe::Image::width</definition>
        <argsstring>() const</argsstring>
        <name>width</name>
        <qualifiedname>mediapipe::Image::width</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="126" column="7" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a685d5eef05922fbab38a980b73f83d2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mediapipe::Image::height</definition>
        <argsstring>() const</argsstring>
        <name>height</name>
        <qualifiedname>mediapipe::Image::height</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="127" column="7" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a211b579f2d838004848fd7dcb7d7615a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mediapipe::Image::channels</definition>
        <argsstring>() const</argsstring>
        <name>channels</name>
        <qualifiedname>mediapipe::Image::channels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="128" column="7" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1af8e97b6ea3c69e1b4bf90584af122ad4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mediapipe::Image::step</definition>
        <argsstring>() const</argsstring>
        <name>step</name>
        <qualifiedname>mediapipe::Image::step</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="129" column="7" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a647a67291c3d0a20ef237e603ca44227" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::Image::UsesGpu</definition>
        <argsstring>() const</argsstring>
        <name>UsesGpu</name>
        <qualifiedname>mediapipe::Image::UsesGpu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="130" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a0489f7d646b437c684577c4f65913a54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ImageFormat::Format</type>
        <definition>ImageFormat::Format mediapipe::Image::image_format</definition>
        <argsstring>() const</argsstring>
        <name>image_format</name>
        <qualifiedname>mediapipe::Image::image_format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="131" column="23" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1aeb525145dd6d437141b63b0a33c4f53b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>mediapipe::GpuBufferFormat</type>
        <definition>mediapipe::GpuBufferFormat mediapipe::Image::format</definition>
        <argsstring>() const</argsstring>
        <name>format</name>
        <qualifiedname>mediapipe::Image::format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="132" column="30" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1ae3ee50a9f38108b604035a174d73223b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::Image::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <qualifiedname>mediapipe::Image::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="135" column="12" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a1056285ddc8dda988697687920b54bc1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::Image::operator==</definition>
        <argsstring>(const Image &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>mediapipe::Image::operator==</qualifiedname>
        <param>
          <type>const Image &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="137" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a555c3100e1fab07541f94667c87b7748" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::Image::operator!=</definition>
        <argsstring>(const Image &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>mediapipe::Image::operator!=</qualifiedname>
        <param>
          <type>const Image &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="138" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a142cc0f43d96552b559eb211a04bf1ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::Image::operator==</definition>
        <argsstring>(std::nullptr_t other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>mediapipe::Image::operator==</qualifiedname>
        <param>
          <type>std::nullptr_t</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="141" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1ad9423dd358b399951260fc07c0336d16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::Image::operator!=</definition>
        <argsstring>(std::nullptr_t other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>mediapipe::Image::operator!=</qualifiedname>
        <param>
          <type>std::nullptr_t</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="142" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1ab71bce9ee53381a257673899f8308c5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Image &amp;</type>
        <definition>Image &amp; mediapipe::Image::operator=</definition>
        <argsstring>(std::nullptr_t other)</argsstring>
        <name>operator=</name>
        <qualifiedname>mediapipe::Image::operator=</qualifiedname>
        <param>
          <type>std::nullptr_t</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="145" column="9" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a6b1a62a56ef9e986586870bb4e973db6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mediapipe::Image::LockPixels</definition>
        <argsstring>() const ABSL_EXCLUSIVE_LOCK_FUNCTION()</argsstring>
        <name>LockPixels</name>
        <qualifiedname>mediapipe::Image::LockPixels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="149" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a3f81af3f2f4f5bb4adee3f61ef3836ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mediapipe::Image::UnlockPixels</definition>
        <argsstring>() const ABSL_UNLOCK_FUNCTION()</argsstring>
        <name>UnlockPixels</name>
        <qualifiedname>mediapipe::Image::UnlockPixels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="150" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a1cd4d61e469dc468a8cf668a063d1356" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::Image::ConvertToCpu</definition>
        <argsstring>() const</argsstring>
        <name>ConvertToCpu</name>
        <qualifiedname>mediapipe::Image::ConvertToCpu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="153" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.cc" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1Image_1a0ea09ac37d04ef1a72831cf5a23d5b5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::Image::ConvertToGpu</definition>
        <argsstring>() const</argsstring>
        <name>ConvertToGpu</name>
        <qualifiedname>mediapipe::Image::ConvertToGpu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="156" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.cc" bodystart="34" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" line="61" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/image.h" bodystart="61" bodyend="161"/>
    <listofallmembers>
      <member refid="classmediapipe_1_1Image_1a211b579f2d838004848fd7dcb7d7615a" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>channels</name></member>
      <member refid="classmediapipe_1_1Image_1a1cd4d61e469dc468a8cf668a063d1356" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>ConvertToCpu</name></member>
      <member refid="classmediapipe_1_1Image_1a0ea09ac37d04ef1a72831cf5a23d5b5d" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>ConvertToGpu</name></member>
      <member refid="classmediapipe_1_1Image_1aeb525145dd6d437141b63b0a33c4f53b" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>format</name></member>
      <member refid="classmediapipe_1_1Image_1a2f2dc1aee35b6b463ca0fc0616f46ec7" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>GetGlTextureBufferSharedPtr</name></member>
      <member refid="classmediapipe_1_1Image_1ab495d1d9fd2a6370f6fe849e82fc9b81" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>GetGpuBuffer</name></member>
      <member refid="classmediapipe_1_1Image_1a31a3eb7cf7258a74324b4f94cb53c4e4" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>GetImageFrameSharedPtr</name></member>
      <member refid="classmediapipe_1_1Image_1a235ff3af56b0ca02835d91fa2accd0e5" prot="private" virt="non-virtual"><scope>mediapipe::Image</scope><name>gpu_buffer_</name></member>
      <member refid="classmediapipe_1_1Image_1a685d5eef05922fbab38a980b73f83d2a" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>height</name></member>
      <member refid="classmediapipe_1_1Image_1a6a8e4fa6f2cb02f5daa47b1c3ce16570" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>Image</name></member>
      <member refid="classmediapipe_1_1Image_1a433d8077851e32847fb22a91fdfd738d" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>Image</name></member>
      <member refid="classmediapipe_1_1Image_1a9e502bcfb38229997856b539186fd81b" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>Image</name></member>
      <member refid="classmediapipe_1_1Image_1a15257a31637d87e84c3660aeae4a2db0" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>Image</name></member>
      <member refid="classmediapipe_1_1Image_1a20e56352b652b8127aa2a30a7e9e6dc1" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>Image</name></member>
      <member refid="classmediapipe_1_1Image_1a277781bf95d8e417c9f8029566d0e4d3" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>Image</name></member>
      <member refid="classmediapipe_1_1Image_1a0489f7d646b437c684577c4f65913a54" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>image_format</name></member>
      <member refid="classmediapipe_1_1Image_1a6b1a62a56ef9e986586870bb4e973db6" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>LockPixels</name></member>
      <member refid="classmediapipe_1_1Image_1ae3ee50a9f38108b604035a174d73223b" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>operator bool</name></member>
      <member refid="classmediapipe_1_1Image_1a555c3100e1fab07541f94667c87b7748" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>operator!=</name></member>
      <member refid="classmediapipe_1_1Image_1ad9423dd358b399951260fc07c0336d16" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>operator!=</name></member>
      <member refid="classmediapipe_1_1Image_1a19506ce3ff2539065f3c9c5068ea0a56" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1Image_1a3462535ddeaec6e4a4044462752218ad" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1Image_1ab71bce9ee53381a257673899f8308c5b" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1Image_1a1056285ddc8dda988697687920b54bc1" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>operator==</name></member>
      <member refid="classmediapipe_1_1Image_1a142cc0f43d96552b559eb211a04bf1ed" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>operator==</name></member>
      <member refid="classmediapipe_1_1Image_1af8e97b6ea3c69e1b4bf90584af122ad4" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>step</name></member>
      <member refid="classmediapipe_1_1Image_1a3f81af3f2f4f5bb4adee3f61ef3836ad" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>UnlockPixels</name></member>
      <member refid="classmediapipe_1_1Image_1abb4d7258cc82582ea4accdd46d0b4e14" prot="private" virt="non-virtual"><scope>mediapipe::Image</scope><name>use_gpu_</name></member>
      <member refid="classmediapipe_1_1Image_1a647a67291c3d0a20ef237e603ca44227" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>UsesGpu</name></member>
      <member refid="classmediapipe_1_1Image_1a1634efc1b38935fcff4ab9c1b5ea4cae" prot="public" virt="non-virtual"><scope>mediapipe::Image</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
