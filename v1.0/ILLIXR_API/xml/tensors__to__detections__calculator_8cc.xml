<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="tensors__to__detections__calculator_8cc" kind="file" language="C++">
    <compoundname>tensors_to_detections_calculator.cc</compoundname>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <includes local="yes">absl/strings/str_format.h</includes>
    <includes local="yes">absl/types/span.h</includes>
    <includes refid="tensors__to__detections__calculator_8pb_8h" local="yes">mediapipe/calculators/tensor/tensors_to_detections_calculator.pb.h</includes>
    <includes local="yes">mediapipe/framework/api2/node.h</includes>
    <includes refid="calculator__framework_8h" local="yes">mediapipe/framework/calculator_framework.h</includes>
    <includes refid="file__path_8h" local="yes">mediapipe/framework/deps/file_path.h</includes>
    <includes refid="detection_8pb_8h" local="yes">mediapipe/framework/formats/detection.pb.h</includes>
    <includes refid="location_8h" local="yes">mediapipe/framework/formats/location.h</includes>
    <includes refid="anchor_8pb_8h" local="yes">mediapipe/framework/formats/object_detection/anchor.pb.h</includes>
    <includes refid="tensor_8h" local="yes">mediapipe/framework/formats/tensor.h</includes>
    <includes refid="port_8h" local="yes">mediapipe/framework/port.h</includes>
    <includes refid="port_2ret__check_8h" local="yes">mediapipe/framework/port/ret_check.h</includes>
    <includes refid="unused_8hpp" local="yes">mediapipe/util/unused.hpp</includes>
    <includes refid="gl__calculator__helper_8h" local="yes">mediapipe/gpu/gl_calculator_helper.h</includes>
    <incdepgraph>
      <node id="6">
        <label>mediapipe/calculators/tensor/tensors_to_detections_calculator.pb.h</label>
        <link refid="tensors__to__detections__calculator_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>mediapipe/framework/calculator.pb.h</label>
        <link refid="calculator_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>mediapipe/framework/calculator_options.pb.h</label>
        <link refid="calculator__options_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>mediapipe/framework/deps/proto_descriptor.pb.h</label>
        <link refid="proto__descriptor_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>mediapipe/framework/formats/annotation/rasterization.pb.h</label>
        <link refid="rasterization_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="176">
        <label>mediapipe/framework/formats/detection.pb.h</label>
        <link refid="detection_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>mediapipe/framework/formats/image_format.pb.h</label>
        <link refid="image__format_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="177">
        <label>mediapipe/framework/formats/location_data.pb.h</label>
        <link refid="location__data_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>mediapipe/framework/formats/object_detection/anchor.pb.h</label>
        <link refid="anchor_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>mediapipe/framework/mediapipe_options.pb.h</label>
        <link refid="mediapipe__options_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>mediapipe/framework/packet_factory.pb.h</label>
        <link refid="packet__factory_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>mediapipe/framework/packet_generator.pb.h</label>
        <link refid="packet__generator_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>mediapipe/framework/status_handler.pb.h</label>
        <link refid="status__handler_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>mediapipe/framework/stream_handler.pb.h</label>
        <link refid="stream__handler_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>mediapipe/framework/thread_pool_executor.pb.h</label>
        <link refid="thread__pool__executor_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>mediapipe/framework/tool/calculator_graph_template.pb.h</label>
        <link refid="calculator__graph__template_8pb_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/tensors_to_detections_calculator.cc</label>
        <link refid="tensors__to__detections__calculator_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>mediapipe/framework/calculator_base.h</label>
        <link refid="calculator__base_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>mediapipe/framework/calculator_context.h</label>
        <link refid="calculator__context_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>mediapipe/framework/calculator_context_manager.h</label>
        <link refid="calculator__context__manager_8h_source"/>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>mediapipe/framework/calculator_contract.h</label>
        <link refid="calculator__contract_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>mediapipe/framework/calculator_framework.h</label>
        <link refid="calculator__framework_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>mediapipe/framework/calculator_graph.h</label>
        <link refid="calculator__graph_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>mediapipe/framework/calculator_node.h</label>
        <link refid="calculator__node_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>mediapipe/framework/calculator_registry.h</label>
        <link refid="calculator__registry_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>mediapipe/framework/calculator_state.h</label>
        <link refid="calculator__state_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>mediapipe/framework/collection.h</label>
        <link refid="collection_8h_source"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>mediapipe/framework/collection_item_id.h</label>
        <link refid="collection__item__id_8h_source"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>mediapipe/framework/counter.h</label>
        <link refid="counter_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>mediapipe/framework/counter_factory.h</label>
        <link refid="counter__factory_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>mediapipe/framework/demangle.h</label>
        <link refid="demangle_8h_source"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>mediapipe/framework/deps/canonical_errors.h</label>
        <link refid="deps_2canonical__errors_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>mediapipe/framework/deps/clock.h</label>
        <link refid="clock_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>mediapipe/framework/deps/file_path.h</label>
        <link refid="file__path_8h_source"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>mediapipe/framework/deps/map_util.h</label>
        <link refid="deps_2map__util_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>mediapipe/framework/deps/mathutil.h</label>
        <link refid="mathutil_8h_source"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>mediapipe/framework/deps/monotonic_clock.h</label>
        <link refid="monotonic__clock_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>mediapipe/framework/deps/no_destructor.h</label>
        <link refid="no__destructor_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>mediapipe/framework/deps/point2.h</label>
        <link refid="deps_2point2_8h_source"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="187">
        <label>mediapipe/framework/deps/rectangle.h</label>
        <link refid="deps_2rectangle_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>mediapipe/framework/deps/registration.h</label>
        <link refid="registration_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>mediapipe/framework/deps/registration_token.h</label>
        <link refid="registration__token_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>mediapipe/framework/deps/ret_check.h</label>
        <link refid="deps_2ret__check_8h_source"/>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>mediapipe/framework/deps/safe_int.h</label>
        <link refid="safe__int_8h_source"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>mediapipe/framework/deps/source_location.h</label>
        <link refid="deps_2source__location_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>mediapipe/framework/deps/status.h</label>
        <link refid="deps_2status_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>mediapipe/framework/deps/status_builder.h</label>
        <link refid="deps_2status__builder_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>mediapipe/framework/deps/status_macros.h</label>
        <link refid="deps_2status__macros_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>mediapipe/framework/deps/strong_int.h</label>
        <link refid="strong__int_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="203">
        <label>mediapipe/framework/deps/thread_options.h</label>
        <link refid="thread__options_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="202">
        <label>mediapipe/framework/deps/threadpool.h</label>
        <link refid="deps_2threadpool_8h_source"/>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>mediapipe/framework/deps/vector.h</label>
        <link refid="deps_2vector_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>mediapipe/framework/executor.h</label>
        <link refid="executor_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="216">
        <label>mediapipe/framework/formats/frame_buffer.h</label>
        <link refid="frame__buffer_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>mediapipe/framework/formats/image.h</label>
        <link refid="image_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
      </node>
      <node id="209">
        <label>mediapipe/framework/formats/image_frame.h</label>
        <link refid="image__frame_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="179">
        <label>mediapipe/framework/formats/location.h</label>
        <link refid="location_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>mediapipe/framework/formats/tensor.h</label>
        <link refid="tensor_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>mediapipe/framework/formats/tensor/internal.h</label>
        <link refid="internal_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>mediapipe/framework/graph_output_stream.h</label>
        <link refid="graph__output__stream_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>mediapipe/framework/graph_service.h</label>
        <link refid="graph__service_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>mediapipe/framework/graph_service_manager.h</label>
        <link refid="graph__service__manager_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>mediapipe/framework/input_side_packet_handler.h</label>
        <link refid="input__side__packet__handler_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>mediapipe/framework/input_stream.h</label>
        <link refid="input__stream_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>mediapipe/framework/input_stream_handler.h</label>
        <link refid="input__stream__handler_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>mediapipe/framework/input_stream_manager.h</label>
        <link refid="input__stream__manager_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>mediapipe/framework/input_stream_shard.h</label>
        <link refid="input__stream__shard_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>mediapipe/framework/legacy_calculator_support.h</label>
        <link refid="legacy__calculator__support_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>mediapipe/framework/mediapipe_profiling.h</label>
        <link refid="mediapipe__profiling_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>mediapipe/framework/memory_manager.h</label>
        <link refid="memory__manager_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>mediapipe/framework/output_side_packet.h</label>
        <link refid="output__side__packet_8h_source"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>mediapipe/framework/output_side_packet_impl.h</label>
        <link refid="output__side__packet__impl_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>mediapipe/framework/output_stream.h</label>
        <link refid="output__stream_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>mediapipe/framework/output_stream_handler.h</label>
        <link refid="output__stream__handler_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>mediapipe/framework/output_stream_manager.h</label>
        <link refid="output__stream__manager_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>mediapipe/framework/output_stream_poller.h</label>
        <link refid="output__stream__poller_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>mediapipe/framework/output_stream_shard.h</label>
        <link refid="output__stream__shard_8h_source"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>mediapipe/framework/packet.h</label>
        <link refid="packet_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>mediapipe/framework/packet_generator.h</label>
        <link refid="packet__generator_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>mediapipe/framework/packet_generator_graph.h</label>
        <link refid="packet__generator__graph_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>mediapipe/framework/packet_set.h</label>
        <link refid="packet__set_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>mediapipe/framework/packet_type.h</label>
        <link refid="packet__type_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>mediapipe/framework/platform_specific_profiling.h</label>
        <link refid="platform__specific__profiling_8h_source"/>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>mediapipe/framework/port.h</label>
        <link refid="port_8h_source"/>
      </node>
      <node id="121">
        <label>mediapipe/framework/port/any_proto.h</label>
        <link refid="any__proto_8h_source"/>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>mediapipe/framework/port/canonical_errors.h</label>
        <link refid="port_2canonical__errors_8h_source"/>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>mediapipe/framework/port/core_proto_inc.h</label>
        <link refid="core__proto__inc_8h_source"/>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>mediapipe/framework/port/logging.h</label>
        <link refid="logging_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>mediapipe/framework/port/map_util.h</label>
        <link refid="port_2map__util_8h_source"/>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>mediapipe/framework/port/point2.h</label>
        <link refid="port_2point2_8h_source"/>
        <childnode refid="181" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>mediapipe/framework/port/port.h</label>
        <link refid="port_2port_8h_source"/>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>mediapipe/framework/port/proto_ns.h</label>
        <link refid="proto__ns_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>mediapipe/framework/port/rectangle.h</label>
        <link refid="port_2rectangle_8h_source"/>
        <childnode refid="187" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>mediapipe/framework/port/ret_check.h</label>
        <link refid="port_2ret__check_8h_source"/>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>mediapipe/framework/port/status.h</label>
        <link refid="port_2status_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>mediapipe/framework/port/status_builder.h</label>
        <link refid="port_2status__builder_8h_source"/>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>mediapipe/framework/port/status_macros.h</label>
        <link refid="port_2status__macros_8h_source"/>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>mediapipe/framework/port/statusor.h</label>
        <link refid="statusor_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="201">
        <label>mediapipe/framework/port/threadpool.h</label>
        <link refid="port_2threadpool_8h_source"/>
        <childnode refid="202" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>mediapipe/framework/profiler/graph_profiler_stub.h</label>
        <link refid="graph__profiler__stub_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>mediapipe/framework/scheduler.h</label>
        <link refid="scheduler_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
      </node>
      <node id="164">
        <label>mediapipe/framework/scheduler_queue.h</label>
        <link refid="scheduler__queue_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
      </node>
      <node id="165">
        <label>mediapipe/framework/scheduler_shared.h</label>
        <link refid="scheduler__shared_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>mediapipe/framework/status_handler.h</label>
        <link refid="status__handler_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>mediapipe/framework/subgraph.h</label>
        <link refid="subgraph_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>mediapipe/framework/timestamp.h</label>
        <link refid="timestamp_8h_source"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>mediapipe/framework/tool/options_map.h</label>
        <link refid="options__map_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>mediapipe/framework/tool/options_util.h</label>
        <link refid="options__util_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>mediapipe/framework/tool/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>mediapipe/framework/tool/status_util.h</label>
        <link refid="status__util_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>mediapipe/framework/tool/tag_map.h</label>
        <link refid="tag__map_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>mediapipe/framework/tool/tag_map_helper.h</label>
        <link refid="tag__map__helper_8h_source"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>mediapipe/framework/tool/type_util.h</label>
        <link refid="type__util_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>mediapipe/framework/tool/validate.h</label>
        <link refid="validate_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>mediapipe/framework/tool/validate_name.h</label>
        <link refid="validate__name_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>mediapipe/framework/type_map.h</label>
        <link refid="type__map_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>mediapipe/framework/validated_graph_config.h</label>
        <link refid="validated__graph__config_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>mediapipe/gpu/attachments.h</label>
        <link refid="attachments_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="217">
        <label>mediapipe/gpu/frame_buffer_view.h</label>
        <link refid="frame__buffer__view_8h_source"/>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>mediapipe/gpu/gl_base.h</label>
        <link refid="gl__base_8h_source"/>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>mediapipe/gpu/gl_calculator_helper.h</label>
        <link refid="gl__calculator__helper_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
      </node>
      <node id="199">
        <label>mediapipe/gpu/gl_context.h</label>
        <link refid="gl__context_8h_source"/>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
      </node>
      <node id="214">
        <label>mediapipe/gpu/gl_texture_buffer.h</label>
        <link refid="gl__texture__buffer_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="213">
        <label>mediapipe/gpu/gl_texture_view.h</label>
        <link refid="gl__texture__view_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>mediapipe/gpu/gpu_buffer.h</label>
        <link refid="gpu__buffer_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>mediapipe/gpu/gpu_buffer_format.h</label>
        <link refid="gpu__buffer__format_8h_source"/>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
      <node id="212">
        <label>mediapipe/gpu/gpu_buffer_storage.h</label>
        <link refid="gpu__buffer__storage_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>mediapipe/gpu/gpu_buffer_storage_image_frame.h</label>
        <link refid="gpu__buffer__storage__image__frame_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
      </node>
      <node id="219">
        <label>mediapipe/gpu/graph_support.h</label>
        <link refid="graph__support_8h_source"/>
      </node>
      <node id="218">
        <label>mediapipe/gpu/image_frame_view.h</label>
        <link refid="image__frame__view_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>mediapipe/util/unused.hpp</label>
        <link refid="unused_8hpp_source"/>
      </node>
      <node id="195">
        <label>EGL/egl.h</label>
      </node>
      <node id="196">
        <label>GLES2/gl2.h</label>
      </node>
      <node id="197">
        <label>GLES2/gl2ext.h</label>
      </node>
      <node id="198">
        <label>GLES3/gl32.h</label>
      </node>
      <node id="84">
        <label>absl/base/attributes.h</label>
      </node>
      <node id="44">
        <label>absl/base/macros.h</label>
      </node>
      <node id="157">
        <label>absl/base/optimization.h</label>
      </node>
      <node id="101">
        <label>absl/base/port.h</label>
      </node>
      <node id="49">
        <label>absl/base/thread_annotations.h</label>
      </node>
      <node id="115">
        <label>absl/container/btree_map.h</label>
      </node>
      <node id="73">
        <label>absl/container/flat_hash_map.h</label>
      </node>
      <node id="74">
        <label>absl/container/flat_hash_set.h</label>
      </node>
      <node id="191">
        <label>absl/functional/any_invocable.h</label>
      </node>
      <node id="41">
        <label>absl/log/absl_check.h</label>
      </node>
      <node id="66">
        <label>absl/log/absl_log.h</label>
      </node>
      <node id="36">
        <label>absl/memory/memory.h</label>
      </node>
      <node id="75">
        <label>absl/meta/type_traits.h</label>
      </node>
      <node id="37">
        <label>absl/status/status.h</label>
      </node>
      <node id="67">
        <label>absl/status/statusor.h</label>
      </node>
      <node id="60">
        <label>absl/strings/has_ostream_operator.h</label>
      </node>
      <node id="64">
        <label>absl/strings/str_cat.h</label>
      </node>
      <node id="4">
        <label>absl/strings/str_format.h</label>
      </node>
      <node id="76">
        <label>absl/strings/str_join.h</label>
      </node>
      <node id="77">
        <label>absl/strings/str_split.h</label>
      </node>
      <node id="78">
        <label>absl/strings/string_view.h</label>
      </node>
      <node id="154">
        <label>absl/strings/substitute.h</label>
      </node>
      <node id="50">
        <label>absl/synchronization/mutex.h</label>
      </node>
      <node id="51">
        <label>absl/time/time.h</label>
      </node>
      <node id="147">
        <label>absl/types/optional.h</label>
      </node>
      <node id="5">
        <label>absl/types/span.h</label>
      </node>
      <node id="185">
        <label>absl/utility/utility.h</label>
      </node>
      <node id="48">
        <label>algorithm</label>
      </node>
      <node id="132">
        <label>atomic</label>
      </node>
      <node id="96">
        <label>cmath</label>
      </node>
      <node id="58">
        <label>cstddef</label>
      </node>
      <node id="46">
        <label>cstdint</label>
      </node>
      <node id="111">
        <label>cstdlib</label>
      </node>
      <node id="135">
        <label>deque</label>
      </node>
      <node id="70">
        <label>functional</label>
      </node>
      <node id="61">
        <label>glog/logging.h</label>
      </node>
      <node id="25">
        <label>google/protobuf/any.pb.h</label>
      </node>
      <node id="12">
        <label>google/protobuf/arena.h</label>
      </node>
      <node id="13">
        <label>google/protobuf/arenastring.h</label>
      </node>
      <node id="20">
        <label>google/protobuf/extension_set.h</label>
      </node>
      <node id="21">
        <label>google/protobuf/generated_enum_reflection.h</label>
      </node>
      <node id="150">
        <label>google/protobuf/generated_message_bases.h</label>
      </node>
      <node id="17">
        <label>google/protobuf/generated_message_reflection.h</label>
      </node>
      <node id="14">
        <label>google/protobuf/generated_message_table_driven.h</label>
      </node>
      <node id="15">
        <label>google/protobuf/generated_message_util.h</label>
      </node>
      <node id="11">
        <label>google/protobuf/io/coded_stream.h</label>
      </node>
      <node id="117">
        <label>google/protobuf/io/tokenizer.h</label>
      </node>
      <node id="18">
        <label>google/protobuf/message.h</label>
      </node>
      <node id="87">
        <label>google/protobuf/message_lite.h</label>
      </node>
      <node id="16">
        <label>google/protobuf/metadata_lite.h</label>
      </node>
      <node id="9">
        <label>google/protobuf/port_def.inc</label>
      </node>
      <node id="10">
        <label>google/protobuf/port_undef.inc</label>
      </node>
      <node id="19">
        <label>google/protobuf/repeated_field.h</label>
      </node>
      <node id="145">
        <label>google/protobuf/repeated_ptr_field.h</label>
      </node>
      <node id="118">
        <label>google/protobuf/text_format.h</label>
      </node>
      <node id="22">
        <label>google/protobuf/unknown_field_set.h</label>
      </node>
      <node id="210">
        <label>illixr/data_format/opencv_data_types.hpp</label>
      </node>
      <node id="175">
        <label>initializer_list</label>
      </node>
      <node id="83">
        <label>iosfwd</label>
      </node>
      <node id="184">
        <label>iostream</label>
      </node>
      <node id="56">
        <label>iterator</label>
      </node>
      <node id="7">
        <label>limits</label>
      </node>
      <node id="98">
        <label>limits.h</label>
      </node>
      <node id="126">
        <label>list</label>
      </node>
      <node id="43">
        <label>map</label>
      </node>
      <node id="31">
        <label>mediapipe/framework/api2/node.h</label>
      </node>
      <node id="34">
        <label>memory</label>
      </node>
      <node id="190">
        <label>numeric</label>
      </node>
      <node id="59">
        <label>ostream</label>
      </node>
      <node id="200">
        <label>pthread.h</label>
      </node>
      <node id="39">
        <label>queue</label>
      </node>
      <node id="112">
        <label>set</label>
      </node>
      <node id="91">
        <label>sstream</label>
      </node>
      <node id="55">
        <label>stddef.h</label>
      </node>
      <node id="105">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="71">
        <label>tuple</label>
      </node>
      <node id="35">
        <label>type_traits</label>
      </node>
      <node id="130">
        <label>typeindex</label>
      </node>
      <node id="103">
        <label>typeinfo</label>
      </node>
      <node id="2">
        <label>unordered_map</label>
      </node>
      <node id="72">
        <label>unordered_set</label>
      </node>
      <node id="40">
        <label>utility</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmediapipe_1_1api2_1_1TensorsToDetectionsCalculator" prot="public">mediapipe::api2::TensorsToDetectionsCalculator</innerclass>
    <innerclass refid="structmediapipe_1_1api2_1_1TensorsToDetectionsCalculator_1_1ClassIndexSet" prot="private">mediapipe::api2::TensorsToDetectionsCalculator::ClassIndexSet</innerclass>
    <innernamespace refid="namespaceanonymous__namespace_02tensors__to__detections__calculator_8cc_03">anonymous_namespace{tensors_to_detections_calculator.cc}</innernamespace>
    <innernamespace refid="namespacemediapipe">mediapipe</innernamespace>
    <innernamespace refid="namespacemediapipe_1_1api2">mediapipe::api2</innernamespace>
    <innernamespace refid="namespacemediapipe_1_1api2_1_1anonymous__namespace_02tensors__to__detections__calculator_8cc_03">mediapipe::api2::anonymous_namespace{tensors_to_detections_calculator.cc}</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>The<sp/>MediaPipe<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;absl/strings/str_format.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;absl/types/span.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/calculators/tensor/tensors_to_detections_calculator.pb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/api2/node.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/calculator_framework.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/deps/file_path.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/formats/detection.pb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/formats/location.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/formats/object_detection/anchor.pb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/formats/tensor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/port/ret_check.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/util/unused.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>On<sp/>Apple<sp/>platforms<sp/>MEDIAPIPE_DISABLE_GL_COMPUTE<sp/>is<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defined<sp/>in<sp/>mediapipe/framework/port.h.<sp/>Therefore,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;#ifndef<sp/>MEDIAPIPE_DISABLE_GL_COMPUTE&quot;<sp/>and<sp/>&quot;#if<sp/>MEDIAPIPE_METAL_ENABLED&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>below<sp/>are<sp/>mutually<sp/>exclusive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEDIAPIPE_DISABLE_GL_COMPUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/gpu/gl_calculator_helper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>!defined(MEDIAPIPE_DISABLE_GL_COMPUTE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MEDIAPIPE_METAL_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;CoreVideo/CoreVideo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;Metal/Metal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;MetalKit/MetalKit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/formats/tensor_mtl_buffer_view.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;mediapipe/gpu/MPPMetalHelper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/gpu/MPPMetalUtil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>MEDIAPIPE_METAL_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="namespaceanonymous__namespace_02tensors__to__detections__calculator_8cc_03" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kNumInputTensorsWithAnchors<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kNumCoordsPerBox<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CanUseGpu()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(MEDIAPIPE_DISABLE_GL_COMPUTE)<sp/>||<sp/>MEDIAPIPE_METAL_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Configure<sp/>GPU<sp/>usage<sp/>policy<sp/>in<sp/>individual<sp/>calculators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>kAllowGpuProcessing<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kAllowGpuProcessing;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>!defined(MEDIAPIPE_DISABLE_GL_COMPUTE)<sp/>||<sp/>MEDIAPIPE_METAL_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mediapipe<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">api2<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">BoxFormat<sp/>=<sp/>::mediapipe::TensorsToDetectionsCalculatorOptions::BoxFormat;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="namespacemediapipe_1_1api2_1_1anonymous__namespace_02tensors__to__detections__calculator_8cc_03" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConvertRawValuesToAnchors(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>raw_anchors,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_boxes,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Anchor&gt;*<sp/>anchors)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>anchors-&gt;clear();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_boxes;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>Anchor<sp/>new_anchor;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>new_anchor.set_y_center(raw_anchors[i<sp/>*<sp/>kNumCoordsPerBox<sp/>+<sp/>0]);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>new_anchor.set_x_center(raw_anchors[i<sp/>*<sp/>kNumCoordsPerBox<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>new_anchor.set_h(raw_anchors[i<sp/>*<sp/>kNumCoordsPerBox<sp/>+<sp/>2]);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>new_anchor.set_w(raw_anchors[i<sp/>*<sp/>kNumCoordsPerBox<sp/>+<sp/>3]);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>anchors-&gt;push_back(new_anchor);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConvertAnchorsToRawValues(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Anchor&gt;&amp;<sp/>anchors,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_boxes,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>raw_anchors)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>ABSL_CHECK_EQ(anchors.size(),<sp/>num_boxes);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>anchor<sp/>:<sp/>anchors)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>raw_anchors[box<sp/>*<sp/>kNumCoordsPerBox<sp/>+<sp/>0]<sp/>=<sp/>anchor.y_center();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>raw_anchors[box<sp/>*<sp/>kNumCoordsPerBox<sp/>+<sp/>1]<sp/>=<sp/>anchor.x_center();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>raw_anchors[box<sp/>*<sp/>kNumCoordsPerBox<sp/>+<sp/>2]<sp/>=<sp/>anchor.h();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>raw_anchors[box<sp/>*<sp/>kNumCoordsPerBox<sp/>+<sp/>3]<sp/>=<sp/>anchor.w();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>++box;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">absl::Status<sp/>CheckCustomTensorMapping(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TensorsToDetectionsCalculatorOptions::TensorMapping&amp;<sp/>tensor_mapping)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>RET_CHECK(tensor_mapping.has_detections_tensor_index()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_mapping.has_scores_tensor_index());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitmap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>bitmap<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>tensor_mapping.detections_tensor_index();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>bitmap<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>tensor_mapping.scores_tensor_index();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tensor_mapping.has_num_detections_tensor_index()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!tensor_mapping.has_classes_tensor_index()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!tensor_mapping.has_anchors_tensor_index())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>allows<sp/>the<sp/>output<sp/>tensor<sp/>index<sp/>0<sp/>and<sp/>1<sp/>to<sp/>be<sp/>occupied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(3,<sp/>bitmap)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>custom<sp/>output<sp/>tensor<sp/>indices<sp/>should<sp/>only<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cover<sp/>index<sp/>0<sp/>and<sp/>1.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tensor_mapping.has_anchors_tensor_index())<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(!tensor_mapping.has_classes_tensor_index()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!tensor_mapping.has_num_detections_tensor_index());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>tensor_mapping.anchors_tensor_index();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the&quot;anchors&quot;<sp/>tensor<sp/>will<sp/>be<sp/>available,<sp/>only<sp/>allows<sp/>the<sp/>output<sp/>tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>0,<sp/>1,<sp/>2<sp/>to<sp/>be<sp/>occupied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(7,<sp/>bitmap)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>custom<sp/>output<sp/>tensor<sp/>indices<sp/>should<sp/>only<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cover<sp/>index<sp/>0,<sp/>1<sp/>and<sp/>2.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(tensor_mapping.has_classes_tensor_index()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_mapping.has_num_detections_tensor_index());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>&quot;classes&quot;<sp/>and<sp/>the<sp/>&quot;number<sp/>of<sp/>detections&quot;<sp/>tensors<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>available,<sp/>only<sp/>allows<sp/>the<sp/>output<sp/>tensor<sp/>index<sp/>0,<sp/>1,<sp/>2,<sp/>3<sp/>to<sp/>be<sp/>occupied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>tensor_mapping.classes_tensor_index();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>tensor_mapping.num_detections_tensor_index();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(15,<sp/>bitmap)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>custom<sp/>output<sp/>tensor<sp/>indices<sp/>should<sp/>only<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cover<sp/>index<sp/>0,<sp/>1,<sp/>2<sp/>and<sp/>3.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">BoxFormat<sp/>GetBoxFormat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TensorsToDetectionsCalculatorOptions&amp;<sp/>options)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.has_box_format())<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options.box_format();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.reverse_output_order())<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::XYWH;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::YXHW;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>result<sp/>Tensors<sp/>from<sp/>object<sp/>detection<sp/>models<sp/>into<sp/>MediaPipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Detections.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TENSORS<sp/>-<sp/>Vector<sp/>of<sp/>Tensors<sp/>of<sp/>type<sp/>kFloat32.<sp/>The<sp/>vector<sp/>of<sp/>tensors<sp/>can<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>or<sp/>3<sp/>tensors.<sp/>First<sp/>tensor<sp/>is<sp/>the<sp/>predicted<sp/>raw<sp/>boxes/keypoints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>size<sp/>of<sp/>the<sp/>values<sp/>must<sp/>be<sp/>(num_boxes<sp/>*<sp/>num_predicted_values).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Second<sp/>tensor<sp/>is<sp/>the<sp/>score<sp/>tensor.<sp/>The<sp/>size<sp/>of<sp/>the<sp/>values<sp/>must<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(num_boxes<sp/>*<sp/>num_classes).<sp/>It&apos;s<sp/>optional<sp/>to<sp/>pass<sp/>in<sp/>a<sp/>third<sp/>tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>anchors<sp/>(e.g.<sp/>for<sp/>SSD<sp/>models)<sp/>depend<sp/>on<sp/>the<sp/>outputs<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detection<sp/>model.<sp/>The<sp/>size<sp/>of<sp/>anchor<sp/>tensor<sp/>must<sp/>be<sp/>(num_boxes<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Input<sp/>side<sp/>packet:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ANCHORS<sp/>(optional)<sp/>-<sp/>The<sp/>anchors<sp/>used<sp/>for<sp/>decoding<sp/>the<sp/>bounding<sp/>boxes,<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>of<sp/>`Anchor`<sp/>protos.<sp/>Not<sp/>required<sp/>if<sp/>post-processing<sp/>is<sp/>built-in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>IGNORE_CLASSES<sp/>(optional)<sp/>-<sp/>The<sp/>list<sp/>of<sp/>class<sp/>ids<sp/>that<sp/>should<sp/>be<sp/>ignored,<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>vector<sp/>of<sp/>integers.<sp/>It<sp/>overrides<sp/>the<sp/>corresponding<sp/>field<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>calculator<sp/>options.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>DETECTIONS<sp/>-<sp/>Result<sp/>MediaPipe<sp/>detections.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Usage<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>node<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>calculator:<sp/>&quot;TensorsToDetectionsCalculator&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>input_stream:<sp/>&quot;TENSORS:tensors&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>input_side_packet:<sp/>&quot;ANCHORS:anchors&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>output_stream:<sp/>&quot;DETECTIONS:detections&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>options:<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>[mediapipe.TensorsToDetectionsCalculatorOptions.ext]<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_classes:<sp/>91</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_boxes:<sp/>1917</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_coords:<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignore_classes:<sp/>[0,<sp/>1,<sp/>2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_scale:<sp/>10.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_scale:<sp/>10.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_scale:<sp/>5.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_scale:<sp/>5.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TensorsToDetectionsCalculator<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Node<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>Input&lt;std::vector&lt;Tensor&gt;&gt;<sp/>kInTensors{</highlight><highlight class="stringliteral">&quot;TENSORS&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>SideInput&lt;std::vector&lt;Anchor&gt;&gt;::Optional<sp/>kInAnchors{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ANCHORS&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>SideInput&lt;std::vector&lt;int&gt;&gt;::Optional<sp/>kSideInIgnoreClasses{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;IGNORE_CLASSES&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>Output&lt;std::vector&lt;Detection&gt;&gt;<sp/>kOutDetections{</highlight><highlight class="stringliteral">&quot;DETECTIONS&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>MEDIAPIPE_NODE_CONTRACT(kInTensors,<sp/>kInAnchors,<sp/>kSideInIgnoreClasses,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kOutDetections);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>absl::Status<sp/>UpdateContract(CalculatorContract*<sp/>cc);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>absl::Status<sp/>Open(CalculatorContext*<sp/>cc)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>absl::Status<sp/>Process(CalculatorContext*<sp/>cc)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>absl::Status<sp/>Close(CalculatorContext*<sp/>cc)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>absl::Status<sp/>ProcessCPU(CalculatorContext*<sp/>cc,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Detection&gt;*<sp/>output_detections);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>absl::Status<sp/>ProcessGPU(CalculatorContext*<sp/>cc,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Detection&gt;*<sp/>output_detections);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>absl::Status<sp/>LoadOptions(CalculatorContext*<sp/>cc);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>absl::Status<sp/>GpuInit(CalculatorContext*<sp/>cc);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>absl::Status<sp/>DecodeBoxes(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>raw_boxes,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Anchor&gt;&amp;<sp/>anchors,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;*<sp/>boxes);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>absl::Status<sp/>ConvertToDetections(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>detection_boxes,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>detection_scores,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>detection_classes,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Detection&gt;*<sp/>output_detections);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>Detection<sp/>ConvertToDetection(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_ymin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_xmin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_ymax,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_xmax,<sp/>absl::Span&lt;const<sp/>float&gt;<sp/>scores,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>absl::Span&lt;const<sp/>int&gt;<sp/>class_ids,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flip_vertically);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsClassIndexAllowed(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_index);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_classes_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_boxes_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_coords_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_results_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>classes_per_detection_<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>BoxFormat<sp/>box_output_format_<sp/>=</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::YXHW;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>of<sp/>allowed<sp/>or<sp/>ignored<sp/>class<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ClassIndexSet<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>absl::flat_hash_set&lt;int&gt;<sp/>values;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_allowlist;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allowed<sp/>or<sp/>ignored<sp/>class<sp/>indices<sp/>based<sp/>on<sp/>provided<sp/>options<sp/>or<sp/>side<sp/>packet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>used<sp/>to<sp/>filter<sp/>out<sp/>the<sp/>output<sp/>detection<sp/>results.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>ClassIndexSet<sp/>class_index_set_;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>TensorsToDetectionsCalculatorOptions<sp/>options_;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scores_tensor_index_is_set_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>TensorsToDetectionsCalculatorOptions::TensorMapping<sp/>tensor_mapping_;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>box_indices_<sp/>=<sp/>{0,<sp/>1,<sp/>2,<sp/>3};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_custom_box_indices_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>std::vector&lt;Anchor&gt;<sp/>anchors_;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEDIAPIPE_DISABLE_GL_COMPUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>mediapipe::GlCalculatorHelper<sp/>gpu_helper_;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>GLuint<sp/>decode_program_;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>GLuint<sp/>score_program_;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>MEDIAPIPE_METAL_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>MPPMetalHelper*<sp/>gpu_helper_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>id&lt;MTLComputePipelineState&gt;<sp/>decode_program_;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>id&lt;MTLComputePipelineState&gt;<sp/>score_program_;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>!defined(MEDIAPIPE_DISABLE_GL_COMPUTE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Tensor&gt;<sp/>raw_anchors_buffer_;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Tensor&gt;<sp/>decoded_boxes_buffer_;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Tensor&gt;<sp/>scored_boxes_buffer_;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpu_inited_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpu_input_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpu_has_enough_work_groups_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>anchors_init_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">};</highlight></codeline>
<codeline lineno="265"><highlight class="normal">MEDIAPIPE_REGISTER_NODE(TensorsToDetectionsCalculator)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">absl::Status<sp/>TensorsToDetectionsCalculator::UpdateContract(</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>CalculatorContract*<sp/>cc)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>UNUSED(cc);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CanUseGpu())<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEDIAPIPE_DISABLE_GL_COMPUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>MP_RETURN_IF_ERROR(mediapipe::GlCalculatorHelper::UpdateContract(</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc,<sp/></highlight><highlight class="comment">/*request_gpu_as_optional=*/</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>MEDIAPIPE_METAL_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>MP_RETURN_IF_ERROR([MPPMetalHelper<sp/>updateContract:cc]);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>!defined(MEDIAPIPE_DISABLE_GL_COMPUTE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">absl::Status<sp/>TensorsToDetectionsCalculator::Open(CalculatorContext*<sp/>cc)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>MP_RETURN_IF_ERROR(LoadOptions(cc));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CanUseGpu())<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEDIAPIPE_DISABLE_GL_COMPUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>MEDIAPIPE_METAL_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>gpu_helper_<sp/>=<sp/>[[MPPMetalHelper<sp/>alloc]<sp/>initWithCalculatorContext:cc];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(gpu_helper_);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>!defined(MEDIAPIPE_DISABLE_GL_COMPUTE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">absl::Status<sp/>TensorsToDetectionsCalculator::Process(CalculatorContext*<sp/>cc)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output_detections<sp/>=<sp/>absl::make_unique&lt;std::vector&lt;Detection&gt;&gt;();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpu_processing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CanUseGpu()<sp/>&amp;&amp;<sp/>gpu_has_enough_work_groups_)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>GPU<sp/>processing<sp/>only<sp/>if<sp/>at<sp/>least<sp/>one<sp/>input<sp/>tensor<sp/>is<sp/>already<sp/>on<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(to<sp/>avoid<sp/>CPU-&gt;GPU<sp/>overhead).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tensor<sp/>:<sp/>*kInTensors(cc))<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tensor.ready_on_gpu())<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpu_processing<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>input_tensors<sp/>=<sp/>*kInTensors(cc);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tensor<sp/>:<sp/>input_tensors)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(tensor.element_type()<sp/>==<sp/>Tensor::ElementType::kFloat32);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_input_tensors<sp/>=<sp/>(int)input_tensors.size();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!scores_tensor_index_is_set_)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_input_tensors<sp/>==<sp/>2<sp/>||</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_input_tensors<sp/>==<sp/>kNumInputTensorsWithAnchors)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tensor_mapping_.set_scores_tensor_index(1);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tensor_mapping_.set_scores_tensor_index(2);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>scores_tensor_index_is_set_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gpu_processing<sp/>||<sp/>num_input_tensors<sp/>!=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allows<sp/>custom<sp/>bounding<sp/>box<sp/>indices<sp/>when<sp/>receiving<sp/>4<sp/>cpu<sp/>tensors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Uses<sp/>the<sp/>default<sp/>bbox<sp/>indices<sp/>in<sp/>other<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(!has_custom_box_indices_);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gpu_processing<sp/>&amp;&amp;<sp/>!gpu_inited_)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>GpuInit(cc);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.ok())<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gpu_inited_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.code()<sp/>==<sp/>absl::StatusCode::kFailedPrecondition)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>initialization<sp/>error<sp/>because<sp/>of<sp/>hardware<sp/>limitation,<sp/>fallback<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CPU<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ABSL_LOG(WARNING)<sp/>&lt;&lt;<sp/>status.message();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>other<sp/>error,<sp/>let<sp/>the<sp/>error<sp/>propagates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gpu_processing<sp/>&amp;&amp;<sp/>gpu_inited_)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>MP_RETURN_IF_ERROR(ProcessGPU(cc,<sp/>output_detections.get()));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>MP_RETURN_IF_ERROR(ProcessCPU(cc,<sp/>output_detections.get()));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>kOutDetections(cc).Send(std::move(output_detections));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal">absl::Status<sp/>TensorsToDetectionsCalculator::ProcessCPU(</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>CalculatorContext*<sp/>cc,<sp/>std::vector&lt;Detection&gt;*<sp/>output_detections)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>input_tensors<sp/>=<sp/>*kInTensors(cc);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_tensors.size()<sp/>==<sp/>2<sp/>||</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>input_tensors.size()<sp/>==<sp/>kNumInputTensorsWithAnchors)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Postprocessing<sp/>on<sp/>CPU<sp/>for<sp/>model<sp/>without<sp/>postprocessing<sp/>op.<sp/>E.g.<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>raw<sp/>score<sp/>tensor<sp/>and<sp/>box<sp/>tensor.<sp/>Anchor<sp/>decoding<sp/>will<sp/>be<sp/>handled<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Add<sp/>flexible<sp/>input<sp/>tensor<sp/>size<sp/>handling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw_box_tensor<sp/>=</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;input_tensors[tensor_mapping_.detections_tensor_index()];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_GT(num_boxes_,<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>set<sp/>num_boxes<sp/>in<sp/>calculator<sp/>options&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_box_tensor-&gt;shape().dims.size()<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>tensors<sp/>from<sp/>CPU<sp/>inference<sp/>has<sp/>dim<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_box_tensor-&gt;shape().dims[0],<sp/>1);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_box_tensor-&gt;shape().dims[1],<sp/>num_boxes_);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_box_tensor-&gt;shape().dims[2],<sp/>num_coords_);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_box_tensor-&gt;shape().dims.size()<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>tensors<sp/>from<sp/>GPU<sp/>inference<sp/>has<sp/>dim<sp/>4.<sp/>For<sp/>gpu-cpu<sp/>fallback<sp/>support,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>allow<sp/>tensors<sp/>with<sp/>4<sp/>dims.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_box_tensor-&gt;shape().dims[0],<sp/>1);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_box_tensor-&gt;shape().dims[1],<sp/>1);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_box_tensor-&gt;shape().dims[2],<sp/>num_boxes_);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_box_tensor-&gt;shape().dims[3],<sp/>num_coords_);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::InvalidArgumentError(</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>dimensions<sp/>of<sp/>box<sp/>Tensor<sp/>must<sp/>be<sp/>3<sp/>or<sp/>4.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw_score_tensor<sp/>=</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;input_tensors[tensor_mapping_.scores_tensor_index()];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_score_tensor-&gt;shape().dims.size()<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>tensors<sp/>from<sp/>CPU<sp/>inference<sp/>has<sp/>dim<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_score_tensor-&gt;shape().dims[0],<sp/>1);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_score_tensor-&gt;shape().dims[1],<sp/>num_boxes_);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_score_tensor-&gt;shape().dims[2],<sp/>num_classes_);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_score_tensor-&gt;shape().dims.size()<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>tensors<sp/>from<sp/>GPU<sp/>inference<sp/>has<sp/>dim<sp/>4.<sp/>For<sp/>gpu-cpu<sp/>fallback<sp/>support,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>allow<sp/>tensors<sp/>with<sp/>4<sp/>dims.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_score_tensor-&gt;shape().dims[0],<sp/>1);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_score_tensor-&gt;shape().dims[1],<sp/>1);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_score_tensor-&gt;shape().dims[2],<sp/>num_boxes_);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(raw_score_tensor-&gt;shape().dims[3],<sp/>num_classes_);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::InvalidArgumentError(</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>dimensions<sp/>of<sp/>score<sp/>Tensor<sp/>must<sp/>be<sp/>3<sp/>or<sp/>4.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw_box_view<sp/>=<sp/>raw_box_tensor-&gt;GetCpuReadView();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw_boxes<sp/>=<sp/>raw_box_view.buffer&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw_scores_view<sp/>=<sp/>raw_score_tensor-&gt;GetCpuReadView();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw_scores<sp/>=<sp/>raw_scores_view.buffer&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Support<sp/>other<sp/>options<sp/>to<sp/>load<sp/>anchors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!anchors_init_)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_tensors.size()<sp/>==<sp/>kNumInputTensorsWithAnchors)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>anchor_tensor<sp/>=</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;input_tensors[tensor_mapping_.anchors_tensor_index()];</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(anchor_tensor-&gt;shape().dims.size(),<sp/>2);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(anchor_tensor-&gt;shape().dims[0],<sp/>num_boxes_);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(anchor_tensor-&gt;shape().dims[1],<sp/>kNumCoordsPerBox);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>anchor_view<sp/>=<sp/>anchor_tensor-&gt;GetCpuReadView();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw_anchors<sp/>=<sp/>anchor_view.buffer&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConvertRawValuesToAnchors(raw_anchors,<sp/>num_boxes_,<sp/>&amp;anchors_);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!kInAnchors(cc).IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchors_<sp/>=<sp/>*kInAnchors(cc);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::UnavailableError(</highlight><highlight class="stringliteral">&quot;No<sp/>anchor<sp/>data<sp/>available.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>anchors_init_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>boxes(num_boxes_<sp/>*<sp/>num_coords_);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>MP_RETURN_IF_ERROR(DecodeBoxes(raw_boxes,<sp/>anchors_,<sp/>&amp;boxes));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>detection_scores(num_boxes_);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>detection_classes(num_boxes_);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filter<sp/>classes<sp/>by<sp/>scores.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_boxes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_score<sp/>=<sp/>-std::numeric_limits&lt;float&gt;::max();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>top<sp/>score<sp/>for<sp/>box<sp/>i.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score_idx<sp/>=<sp/>0;<sp/>score_idx<sp/>&lt;<sp/>num_classes_;<sp/>++score_idx)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsClassIndexAllowed(score_idx))<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>score<sp/>=<sp/>raw_scores[i<sp/>*<sp/>num_classes_<sp/>+<sp/>score_idx];</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options_.sigmoid_score())<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options_.has_score_clipping_thresh())<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>score<sp/>&lt;<sp/>-options_.score_clipping_thresh()</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>-options_.score_clipping_thresh()</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>score;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>score<sp/>&gt;<sp/>options_.score_clipping_thresh()</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>options_.score_clipping_thresh()</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>score;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>1.0f<sp/>/<sp/>(1.0f<sp/>+<sp/>std::exp(-score));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_score<sp/>&lt;<sp/>score)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_score<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_id<sp/>=<sp/>score_idx;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detection_scores[i]<sp/>=<sp/>max_score;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detection_classes[i]<sp/>=<sp/>class_id;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>MP_RETURN_IF_ERROR(</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConvertToDetections(boxes.data(),<sp/>detection_scores.data(),</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detection_classes.data(),<sp/>output_detections));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Postprocessing<sp/>on<sp/>CPU<sp/>with<sp/>postprocessing<sp/>op<sp/>(e.g.<sp/>anchor<sp/>decoding<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-maximum<sp/>suppression)<sp/>within<sp/>the<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(input_tensors.size(),<sp/>4);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>num_boxes_tensor<sp/>=</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;input_tensors[tensor_mapping_.num_detections_tensor_index()];</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(num_boxes_tensor-&gt;shape().dims.size(),<sp/>1);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(num_boxes_tensor-&gt;shape().dims[0],<sp/>1);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detection_boxes_tensor<sp/>=</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;input_tensors[tensor_mapping_.detections_tensor_index()];</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(detection_boxes_tensor-&gt;shape().dims.size(),<sp/>3);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(detection_boxes_tensor-&gt;shape().dims[0],<sp/>1);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_detections<sp/>=<sp/>detection_boxes_tensor-&gt;shape().dims[1];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(detection_boxes_tensor-&gt;shape().dims[2],<sp/>num_coords_);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detection_classes_tensor<sp/>=</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;input_tensors[tensor_mapping_.classes_tensor_index()];</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(detection_classes_tensor-&gt;shape().dims.size(),<sp/>2);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(detection_classes_tensor-&gt;shape().dims[0],<sp/>1);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(detection_classes_tensor-&gt;shape().dims[1],<sp/>max_detections);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detection_scores_tensor<sp/>=</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;input_tensors[tensor_mapping_.scores_tensor_index()];</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(detection_scores_tensor-&gt;shape().dims.size(),<sp/>2);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(detection_scores_tensor-&gt;shape().dims[0],<sp/>1);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(detection_scores_tensor-&gt;shape().dims[1],<sp/>max_detections);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>num_boxes_view<sp/>=<sp/>num_boxes_tensor-&gt;GetCpuReadView();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>num_boxes<sp/>=<sp/>num_boxes_view.buffer&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>num_boxes_<sp/>=<sp/>(int)num_boxes[0];</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>detection<sp/>model<sp/>with<sp/>Detection_PostProcess<sp/>op<sp/>may<sp/>output<sp/>duplicate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boxes<sp/>with<sp/>different<sp/>classes,<sp/>in<sp/>the<sp/>following<sp/>format:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>num_boxes_tensor<sp/>=<sp/>[num_boxes]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>detection_classes_tensor<sp/>=<sp/>[box_1_class_1,<sp/>box_1_class_2,<sp/>...]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>detection_scores_tensor<sp/>=<sp/>[box_1_score_1,<sp/>box_1_score_2,<sp/>...<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>detection_boxes_tensor<sp/>=<sp/>[box_1,<sp/>box1,<sp/>...<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>box<sp/>repeats<sp/>classes_per_detection_<sp/>times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>Detection_PostProcess<sp/>op<sp/>is<sp/>only<sp/>supported<sp/>in<sp/>CPU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>classes_per_detection_<sp/>=<sp/>options_.max_classes_per_detection();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detection_boxes_view<sp/>=<sp/>detection_boxes_tensor-&gt;GetCpuReadView();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detection_boxes<sp/>=<sp/>detection_boxes_view.buffer&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detection_scores_view<sp/>=<sp/>detection_scores_tensor-&gt;GetCpuReadView();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detection_scores<sp/>=<sp/>detection_scores_view.buffer&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detection_classes_view<sp/>=<sp/>detection_classes_tensor-&gt;GetCpuReadView();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detection_classes_ptr<sp/>=<sp/>detection_classes_view.buffer&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>detection_classes(num_boxes_<sp/>*<sp/>classes_per_detection_);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(int)detection_classes.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detection_classes[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(detection_classes_ptr[i]);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>MP_RETURN_IF_ERROR(ConvertToDetections(detection_boxes,<sp/>detection_scores,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detection_classes.data(),</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_detections));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal">absl::Status<sp/>TensorsToDetectionsCalculator::ProcessGPU(</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>CalculatorContext*<sp/>cc,<sp/>std::vector&lt;Detection&gt;*<sp/>output_detections)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>UNUSED(output_detections);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>input_tensors<sp/>=<sp/>*kInTensors(cc);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>RET_CHECK_GE(input_tensors.size(),<sp/>2);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>RET_CHECK_GT(num_boxes_,<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>set<sp/>num_boxes<sp/>in<sp/>calculator<sp/>options&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEDIAPIPE_DISABLE_GL_COMPUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>MP_RETURN_IF_ERROR(gpu_helper_.RunInGlContext([</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;input_tensors,<sp/>&amp;cc,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;output_detections]()</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>absl::Status<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!anchors_init_)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(input_tensors.size()<sp/>==<sp/>kNumInputTensorsWithAnchors)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>read_view<sp/>=<sp/>input_tensors[tensor_mapping_.anchors_tensor_index()]</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.GetOpenGlBufferReadView();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindBuffer(GL_COPY_READ_BUFFER,<sp/>read_view.name());</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>write_view<sp/>=<sp/>raw_anchors_buffer_-&gt;GetOpenGlBufferWriteView();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindBuffer(GL_COPY_WRITE_BUFFER,<sp/>write_view.name());</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glCopyBufferSubData(</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_COPY_READ_BUFFER,<sp/>GL_COPY_WRITE_BUFFER,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_tensors[tensor_mapping_.anchors_tensor_index()].bytes());</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(!kInAnchors(cc).IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto&amp;<sp/>anchors<sp/>=<sp/>*kInAnchors(cc);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>anchors_view<sp/>=<sp/>raw_anchors_buffer_-&gt;GetCpuWriteView();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>raw_anchors<sp/>=<sp/>anchors_view.buffer&lt;float&gt;();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConvertAnchorsToRawValues(anchors,<sp/>num_boxes_,<sp/>raw_anchors);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>absl::UnavailableError(</highlight><highlight class="stringliteral">&quot;No<sp/>anchor<sp/>data<sp/>available.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>anchors_init_<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>scope<sp/>to<sp/>release<sp/>the<sp/>writable<sp/>buffers&apos;<sp/>views<sp/>before<sp/>requesting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>reading<sp/>buffers&apos;<sp/>views.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decode<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>scored_boxes_view<sp/>=<sp/>scored_boxes_buffer_-&gt;GetOpenGlBufferWriteView();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>decoded_boxes_view<sp/>=</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoded_boxes_buffer_-&gt;GetOpenGlBufferWriteView();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBindBufferBase(GL_SHADER_STORAGE_BUFFER,<sp/>0,<sp/>decoded_boxes_view.name());</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>input0_view<sp/>=</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_tensors[tensor_mapping_.detections_tensor_index()]</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.GetOpenGlBufferReadView();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBindBufferBase(GL_SHADER_STORAGE_BUFFER,<sp/>1,<sp/>input0_view.name());</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>raw_anchors_view<sp/>=<sp/>raw_anchors_buffer_-&gt;GetOpenGlBufferReadView();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBindBufferBase(GL_SHADER_STORAGE_BUFFER,<sp/>2,<sp/>raw_anchors_view.name());</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glUseProgram(decode_program_);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glDispatchCompute(num_boxes_,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Score<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBindBufferBase(GL_SHADER_STORAGE_BUFFER,<sp/>0,<sp/>scored_boxes_view.name());</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>input1_view<sp/>=<sp/>input_tensors[tensor_mapping_.scores_tensor_index()]</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.GetOpenGlBufferReadView();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glBindBufferBase(GL_SHADER_STORAGE_BUFFER,<sp/>1,<sp/>input1_view.name());</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glUseProgram(score_program_);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glDispatchCompute(num_boxes_,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>}));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>b/138851969.<sp/>Is<sp/>it<sp/>possible<sp/>to<sp/>output<sp/>a<sp/>float<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>score<sp/>and<sp/>an<sp/>int<sp/>vector<sp/>for<sp/>class<sp/>so<sp/>that<sp/>we<sp/>can<sp/>avoid<sp/>copying<sp/>twice?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>detection_scores(num_boxes_);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>detection_classes(num_boxes_);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>order<sp/>of<sp/>requesting<sp/>of<sp/>CpuViews<sp/>must<sp/>be<sp/>the<sp/>same<sp/>as<sp/>the<sp/>order<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>requesting<sp/>OpenGlViews<sp/>above<sp/>to<sp/>avoid<sp/>&apos;Potential<sp/>mutex<sp/>deadlock&apos;<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>compiled<sp/>without<sp/>&apos;-c<sp/>opt&apos;<sp/>option.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>scored_boxes_view<sp/>=<sp/>scored_boxes_buffer_-&gt;GetCpuReadView();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>score_class_id_pairs<sp/>=<sp/>scored_boxes_view.buffer&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_boxes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>detection_scores[i]<sp/>=<sp/>score_class_id_pairs[i<sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>detection_classes[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(score_class_id_pairs[i<sp/>*<sp/>2<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoded_boxes_view<sp/>=<sp/>decoded_boxes_buffer_-&gt;GetCpuReadView();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>boxes<sp/>=<sp/>decoded_boxes_view.buffer&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>MP_RETURN_IF_ERROR(ConvertToDetections(boxes,<sp/>detection_scores.data(),</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detection_classes.data(),</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_detections));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>MEDIAPIPE_METAL_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!anchors_init_)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_tensors.size()<sp/>==<sp/>kNumInputTensorsWithAnchors)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK_EQ(input_tensors.size(),<sp/>kNumInputTensorsWithAnchors);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>command_buffer<sp/>=<sp/>[gpu_helper_<sp/>commandBuffer];</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>src_buffer<sp/>=<sp/>MtlBufferView::GetReadView(</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_tensors[tensor_mapping_.anchors_tensor_index()],</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_buffer);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dest_buffer<sp/>=</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MtlBufferView::GetWriteView(*raw_anchors_buffer_,<sp/>command_buffer);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>id&lt;MTLBlitCommandEncoder&gt;<sp/>blit_command<sp/>=</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[command_buffer<sp/>blitCommandEncoder];</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[blit_command<sp/>copyFromBuffer:src_buffer.buffer()</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceOffset:0</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toBuffer:dest_buffer.buffer()</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destinationOffset:0</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size:input_tensors[tensor_mapping_</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.anchors_tensor_index()]</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bytes()];</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[blit_command<sp/>endEncoding];</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[command_buffer<sp/>commit];</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!kInAnchors(cc).IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>anchors<sp/>=<sp/>*kInAnchors(cc);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw_anchors_view<sp/>=<sp/>raw_anchors_buffer_-&gt;GetCpuWriteView();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ConvertAnchorsToRawValues(anchors,<sp/>num_boxes_,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_anchors_view.buffer&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;());</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::UnavailableError(</highlight><highlight class="stringliteral">&quot;No<sp/>anchor<sp/>data<sp/>available.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>anchors_init_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>scope<sp/>to<sp/>release<sp/>the<sp/>writable<sp/>buffers&apos;<sp/>views<sp/>before<sp/>requesting<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reading<sp/>buffers&apos;<sp/>views.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>id&lt;MTLCommandBuffer&gt;<sp/>command_buffer<sp/>=<sp/>[gpu_helper_<sp/>commandBuffer];</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>command_buffer.label<sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;DecodeAndScoreBoxes&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>id&lt;MTLComputeCommandEncoder&gt;<sp/>command_encoder<sp/>=</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[command_buffer<sp/>computeCommandEncoder];</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>[command_encoder<sp/>setComputePipelineState:decode_program_];</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>scored_boxes_view<sp/>=</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MtlBufferView::GetWriteView(*scored_boxes_buffer_,<sp/>command_buffer);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoded_boxes_view<sp/>=</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MtlBufferView::GetWriteView(*decoded_boxes_buffer_,<sp/>command_buffer);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>[command_encoder<sp/>setBuffer:decoded_boxes_view.buffer()<sp/>offset:0<sp/>atIndex:0];</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input0_view<sp/>=<sp/>MtlBufferView::GetReadView(</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_tensors[tensor_mapping_.detections_tensor_index()],</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_buffer);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>[command_encoder<sp/>setBuffer:input0_view.buffer()<sp/>offset:0<sp/>atIndex:1];</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>raw_anchors_view<sp/>=</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MtlBufferView::GetReadView(*raw_anchors_buffer_,<sp/>command_buffer);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>[command_encoder<sp/>setBuffer:raw_anchors_view.buffer()<sp/>offset:0<sp/>atIndex:2];</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>MTLSize<sp/>decode_threads_per_group<sp/>=<sp/>MTLSizeMake(1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>MTLSize<sp/>decode_threadgroups<sp/>=<sp/>MTLSizeMake(num_boxes_,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>[command_encoder<sp/>dispatchThreadgroups:decode_threadgroups</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadsPerThreadgroup:decode_threads_per_group];</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>[command_encoder<sp/>setComputePipelineState:score_program_];</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>[command_encoder<sp/>setBuffer:scored_boxes_view.buffer()<sp/>offset:0<sp/>atIndex:0];</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input1_view<sp/>=<sp/>MtlBufferView::GetReadView(</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_tensors[tensor_mapping_.scores_tensor_index()],<sp/>command_buffer);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>[command_encoder<sp/>setBuffer:input1_view.buffer()<sp/>offset:0<sp/>atIndex:1];</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>MTLSize<sp/>score_threads_per_group<sp/>=<sp/>MTLSizeMake(1,<sp/>num_classes_,<sp/>1);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>MTLSize<sp/>score_threadgroups<sp/>=<sp/>MTLSizeMake(num_boxes_,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>[command_encoder<sp/>dispatchThreadgroups:score_threadgroups</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadsPerThreadgroup:score_threads_per_group];</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>[command_encoder<sp/>endEncoding];</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>[command_buffer<sp/>commit];</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>detections.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Adjust<sp/>shader<sp/>to<sp/>avoid<sp/>copying<sp/>shader<sp/>output<sp/>twice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>detection_scores(num_boxes_);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>detection_classes(num_boxes_);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>scored_boxes_view<sp/>=<sp/>scored_boxes_buffer_-&gt;GetCpuReadView();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>score_class_id_pairs<sp/>=<sp/>scored_boxes_view.buffer&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_boxes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detection_scores[i]<sp/>=<sp/>score_class_id_pairs[i<sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detection_classes[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(score_class_id_pairs[i<sp/>*<sp/>2<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoded_boxes_view<sp/>=<sp/>decoded_boxes_buffer_-&gt;GetCpuReadView();</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>boxes<sp/>=<sp/>decoded_boxes_view.buffer&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>MP_RETURN_IF_ERROR(ConvertToDetections(boxes,<sp/>detection_scores.data(),</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detection_classes.data(),</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_detections));</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>ABSL_LOG(ERROR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GPU<sp/>input<sp/>on<sp/>non-Android<sp/>not<sp/>supported<sp/>yet.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>!defined(MEDIAPIPE_DISABLE_GL_COMPUTE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal">absl::Status<sp/>TensorsToDetectionsCalculator::Close(CalculatorContext*<sp/>cc)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>UNUSED(cc);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEDIAPIPE_DISABLE_GL_COMPUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gpu_inited_)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>gpu_helper_.RunInGlContext([</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>decoded_boxes_buffer_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scored_boxes_buffer_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>raw_anchors_buffer_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteProgram(decode_program_);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteProgram(score_program_);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>MEDIAPIPE_METAL_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>decoded_boxes_buffer_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>scored_boxes_buffer_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>raw_anchors_buffer_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>decode_program_<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>score_program_<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>!defined(MEDIAPIPE_DISABLE_GL_COMPUTE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal">absl::Status<sp/>TensorsToDetectionsCalculator::LoadOptions(CalculatorContext*<sp/>cc)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>calculator<sp/>options<sp/>specified<sp/>in<sp/>the<sp/>graph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>options_<sp/>=<sp/>cc-&gt;Options&lt;::mediapipe::TensorsToDetectionsCalculatorOptions&gt;();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>RET_CHECK(options_.has_num_classes());</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>RET_CHECK(options_.has_num_coords());</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>num_classes_<sp/>=<sp/>options_.num_classes();</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>num_boxes_<sp/>=<sp/>options_.num_boxes();</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>num_coords_<sp/>=<sp/>options_.num_coords();</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>box_output_format_<sp/>=<sp/>GetBoxFormat(options_);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>ABSL_CHECK_NE(options_.max_results(),<sp/>0)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>maximum<sp/>number<sp/>of<sp/>the<sp/>top-scored<sp/>detection<sp/>results<sp/>must<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;non-zero.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>max_results_<sp/>=<sp/>options_.max_results();</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>only<sp/>support<sp/>2D<sp/>when<sp/>num_values_per_keypoint<sp/>equals<sp/>to<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>ABSL_CHECK_EQ(options_.num_values_per_keypoint(),<sp/>2);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>output<sp/>size<sp/>is<sp/>equal<sp/>to<sp/>the<sp/>requested<sp/>boxes<sp/>and<sp/>keypoints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>ABSL_CHECK_EQ(options_.num_keypoints()<sp/>*<sp/>options_.num_values_per_keypoint()<sp/>+</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kNumCoordsPerBox,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_coords_);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kSideInIgnoreClasses(cc).IsConnected())<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(!kSideInIgnoreClasses(cc).IsEmpty());</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(options_.allow_classes().empty());</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>class_index_set_.is_allowlist<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ignore_class<sp/>:<sp/>*kSideInIgnoreClasses(cc))<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>class_index_set_.values.insert(ignore_class);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!options_.allow_classes().empty())<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(options_.ignore_classes().empty());</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>class_index_set_.is_allowlist<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>options_.allow_classes_size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>class_index_set_.values.insert(options_.allow_classes(i));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>class_index_set_.is_allowlist<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>options_.ignore_classes_size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>class_index_set_.values.insert(options_.ignore_classes(i));</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options_.has_tensor_mapping())<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_OK(CheckCustomTensorMapping(options_.tensor_mapping()));</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_mapping_<sp/>=<sp/>options_.tensor_mapping();</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>scores_tensor_index_is_set_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assigns<sp/>the<sp/>default<sp/>tensor<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_mapping_.set_detections_tensor_index(0);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_mapping_.set_classes_tensor_index(1);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_mapping_.set_anchors_tensor_index(2);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_mapping_.set_num_detections_tensor_index(3);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>scores<sp/>tensor<sp/>index<sp/>needs<sp/>to<sp/>be<sp/>determined<sp/>based<sp/>on<sp/>the<sp/>number<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>model&apos;s<sp/>output<sp/>tensors,<sp/>which<sp/>will<sp/>be<sp/>available<sp/>in<sp/>the<sp/>first<sp/>invocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>Process()<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_mapping_.set_scores_tensor_index(-1);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>scores_tensor_index_is_set_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options_.has_box_boundaries_indices())<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>box_indices_<sp/>=<sp/>{options_.box_boundaries_indices().ymin(),</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_.box_boundaries_indices().xmin(),</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_.box_boundaries_indices().ymax(),</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_.box_boundaries_indices().xmax()};</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitmap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>box_indices_)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmap<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK_EQ(bitmap,<sp/>15)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>custom<sp/>box<sp/>boundaries<sp/>indices<sp/>should<sp/>only<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cover<sp/>index<sp/>0,<sp/>1,<sp/>2,<sp/>and<sp/>3.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>has_custom_box_indices_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal">absl::Status<sp/>TensorsToDetectionsCalculator::DecodeBoxes(</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>raw_boxes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Anchor&gt;&amp;<sp/>anchors,</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;*<sp/>boxes)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_boxes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box_offset<sp/>=<sp/>i<sp/>*<sp/>num_coords_<sp/>+<sp/>options_.box_coord_offset();</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_center<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_center<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(box_output_format_)<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::UNSPECIFIED:</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::YXHW:</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_center<sp/>=<sp/>raw_boxes[box_offset];</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_center<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::XYWH:</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_center<sp/>=<sp/>raw_boxes[box_offset];</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_center<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::XYXY:</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_center<sp/>=<sp/>(-raw_boxes[box_offset]<sp/>+<sp/>raw_boxes[box_offset<sp/>+<sp/>2])<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_center<sp/>=<sp/>(-raw_boxes[box_offset<sp/>+<sp/>1]<sp/>+<sp/>raw_boxes[box_offset<sp/>+<sp/>3])<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>2]<sp/>+<sp/>raw_boxes[box_offset];</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>3]<sp/>+<sp/>raw_boxes[box_offset<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>x_center<sp/>=</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_center<sp/>/<sp/>options_.x_scale()<sp/>*<sp/>anchors[i].w()<sp/>+<sp/>anchors[i].x_center();</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>y_center<sp/>=</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_center<sp/>/<sp/>options_.y_scale()<sp/>*<sp/>anchors[i].h()<sp/>+<sp/>anchors[i].y_center();</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options_.apply_exponential_on_box_size())<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>std::exp(h<sp/>/<sp/>options_.h_scale())<sp/>*<sp/>anchors[i].h();</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>std::exp(w<sp/>/<sp/>options_.w_scale())<sp/>*<sp/>anchors[i].w();</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>h<sp/>/<sp/>options_.h_scale()<sp/>*<sp/>anchors[i].h();</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>w<sp/>/<sp/>options_.w_scale()<sp/>*<sp/>anchors[i].w();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ymin<sp/>=<sp/>y_center<sp/>-<sp/>h<sp/>/<sp/>2.f;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xmin<sp/>=<sp/>x_center<sp/>-<sp/>w<sp/>/<sp/>2.f;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ymax<sp/>=<sp/>y_center<sp/>+<sp/>h<sp/>/<sp/>2.f;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xmax<sp/>=<sp/>x_center<sp/>+<sp/>w<sp/>/<sp/>2.f;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>(*boxes)[i<sp/>*<sp/>num_coords_<sp/>+<sp/>0]<sp/>=<sp/>ymin;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>(*boxes)[i<sp/>*<sp/>num_coords_<sp/>+<sp/>1]<sp/>=<sp/>xmin;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>(*boxes)[i<sp/>*<sp/>num_coords_<sp/>+<sp/>2]<sp/>=<sp/>ymax;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>(*boxes)[i<sp/>*<sp/>num_coords_<sp/>+<sp/>3]<sp/>=<sp/>xmax;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options_.num_keypoints())<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>options_.num_keypoints();<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>i<sp/>*<sp/>num_coords_<sp/>+<sp/>options_.keypoint_coord_offset()<sp/>+</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>*<sp/>options_.num_values_per_keypoint();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>keypoint_y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>keypoint_x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(box_output_format_)<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::UNSPECIFIED:</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::YXHW:</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keypoint_y<sp/>=<sp/>raw_boxes[offset];</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keypoint_x<sp/>=<sp/>raw_boxes[offset<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::XYWH:</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::XYXY:</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keypoint_x<sp/>=<sp/>raw_boxes[offset];</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keypoint_y<sp/>=<sp/>raw_boxes[offset<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*boxes)[offset]<sp/>=<sp/>keypoint_x<sp/>/<sp/>options_.x_scale()<sp/>*<sp/>anchors[i].w()<sp/>+</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchors[i].x_center();</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*boxes)[offset<sp/>+<sp/>1]<sp/>=</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keypoint_y<sp/>/<sp/>options_.y_scale()<sp/>*<sp/>anchors[i].h()<sp/>+</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchors[i].y_center();</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal">absl::Status<sp/>TensorsToDetectionsCalculator::ConvertToDetections(</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>detection_boxes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>detection_scores,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>detection_classes,<sp/>std::vector&lt;Detection&gt;*<sp/>output_detections)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_boxes_<sp/>*<sp/>classes_per_detection_;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>classes_per_detection_)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_results_<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>output_detections-&gt;size()<sp/>==<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)max_results_)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box_offset<sp/>=<sp/>i<sp/>*<sp/>num_coords_;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>Detection<sp/>detection<sp/>=<sp/>ConvertToDetection(</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*box_ymin=*/</highlight><highlight class="normal">detection_boxes[box_offset<sp/>+<sp/>box_indices_[0]],</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*box_xmin=*/</highlight><highlight class="normal">detection_boxes[box_offset<sp/>+<sp/>box_indices_[1]],</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*box_ymax=*/</highlight><highlight class="normal">detection_boxes[box_offset<sp/>+<sp/>box_indices_[2]],</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*box_xmax=*/</highlight><highlight class="normal">detection_boxes[box_offset<sp/>+<sp/>box_indices_[3]],</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>absl::MakeConstSpan(detection_scores<sp/>+<sp/>i,<sp/>classes_per_detection_),</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>absl::MakeConstSpan(detection_classes<sp/>+<sp/>i,<sp/>classes_per_detection_),</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_.flip_vertically());</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>all<sp/>the<sp/>scores<sp/>and<sp/>classes<sp/>are<sp/>filtered<sp/>out,<sp/>we<sp/>skip<sp/>the<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detection.score().empty())<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bbox<sp/>=<sp/>detection.location_data().relative_bounding_box();</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox.width()<sp/>&lt;<sp/>0<sp/>||<sp/>bbox.height()<sp/>&lt;<sp/>0<sp/>||<sp/>std::isnan(bbox.width())<sp/>||</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::isnan(bbox.height()))<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decoded<sp/>detection<sp/>boxes<sp/>could<sp/>have<sp/>negative<sp/>values<sp/>for<sp/>width/height<sp/>due</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>model<sp/>prediction.<sp/>Filter<sp/>out<sp/>those<sp/>boxes<sp/>since<sp/>some<sp/>downstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculators<sp/>may<sp/>assume<sp/>non-negative<sp/>values.<sp/>(b/171391719)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>keypoints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options_.num_keypoints()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>location_data<sp/>=<sp/>detection.mutable_location_data();</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kp_id<sp/>=<sp/>0;<sp/>kp_id<sp/>&lt;<sp/>options_.num_keypoints()<sp/>*</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_.num_values_per_keypoint();</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kp_id<sp/>+=<sp/>options_.num_values_per_keypoint())<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keypoint<sp/>=<sp/>location_data-&gt;add_relative_keypoints();</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keypoint_index<sp/>=</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box_offset<sp/>+<sp/>options_.keypoint_coord_offset()<sp/>+<sp/>kp_id;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keypoint-&gt;set_x(detection_boxes[keypoint_index<sp/>+<sp/>0]);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keypoint-&gt;set_y(options_.flip_vertically()</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>1.f<sp/>-<sp/>detection_boxes[keypoint_index<sp/>+<sp/>1]</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detection_boxes[keypoint_index<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>output_detections-&gt;emplace_back(detection);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal">Detection<sp/>TensorsToDetectionsCalculator::ConvertToDetection(</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_ymin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_xmin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_ymax,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_xmax,</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>absl::Span&lt;const<sp/>float&gt;<sp/>scores,<sp/>absl::Span&lt;const<sp/>int&gt;<sp/>class_ids,</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flip_vertically)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/>Detection<sp/>detection;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(int)scores.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsClassIndexAllowed(class_ids[i]))<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options_.has_min_score_thresh()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scores[i]<sp/>&lt;<sp/>options_.min_score_thresh())<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>detection.add_score(scores[i]);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>detection.add_label_id(class_ids[i]);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>LocationData*<sp/>location_data<sp/>=<sp/>detection.mutable_location_data();</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>location_data-&gt;set_format(LocationData::RELATIVE_BOUNDING_BOX);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>LocationData::RelativeBoundingBox*<sp/>relative_bbox<sp/>=</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>location_data-&gt;mutable_relative_bounding_box();</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>relative_bbox-&gt;set_xmin(box_xmin);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>relative_bbox-&gt;set_ymin(flip_vertically<sp/>?<sp/>1.f<sp/>-<sp/>box_ymax<sp/>:<sp/>box_ymin);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>relative_bbox-&gt;set_width(box_xmax<sp/>-<sp/>box_xmin);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>relative_bbox-&gt;set_height(box_ymax<sp/>-<sp/>box_ymin);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detection;</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal">absl::Status<sp/>TensorsToDetectionsCalculator::GpuInit(CalculatorContext*<sp/>cc)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>UNUSED(cc);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_format_flag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(box_output_format_)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::UNSPECIFIED:</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::YXHW:</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_format_flag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::XYWH:</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_format_flag<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediapipe::TensorsToDetectionsCalculatorOptions::XYXY:</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_format_flag<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEDIAPIPE_DISABLE_GL_COMPUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>MP_RETURN_IF_ERROR(gpu_helper_.Open(cc));</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>MP_RETURN_IF_ERROR(gpu_helper_.RunInGlContext([</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>output_format_flag]()</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>absl::Status<sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>shader<sp/>to<sp/>decode<sp/>detection<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>std::string<sp/>decode_src<sp/>=<sp/>absl::Substitute(</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(<sp/>#version<sp/>310<sp/>es</highlight></codeline>
<codeline lineno="979"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="980"><highlight class="stringliteral">layout(local_size_x<sp/>=<sp/>1,<sp/>local_size_y<sp/>=<sp/>1,<sp/>local_size_z<sp/>=<sp/>1)<sp/>in;</highlight></codeline>
<codeline lineno="981"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="982"><highlight class="stringliteral">layout(location<sp/>=<sp/>0)<sp/>uniform<sp/>vec4<sp/>scale;</highlight></codeline>
<codeline lineno="983"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="984"><highlight class="stringliteral">layout(std430,<sp/>binding<sp/>=<sp/>0)<sp/>writeonly<sp/>buffer<sp/>Output<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="stringliteral"><sp/><sp/>float<sp/>data[];</highlight></codeline>
<codeline lineno="986"><highlight class="stringliteral">}<sp/>boxes;</highlight></codeline>
<codeline lineno="987"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="988"><highlight class="stringliteral">layout(std430,<sp/>binding<sp/>=<sp/>1)<sp/>readonly<sp/>buffer<sp/>Input0<sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="stringliteral"><sp/><sp/>float<sp/>data[];</highlight></codeline>
<codeline lineno="990"><highlight class="stringliteral">}<sp/>raw_boxes;</highlight></codeline>
<codeline lineno="991"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="992"><highlight class="stringliteral">layout(std430,<sp/>binding<sp/>=<sp/>2)<sp/>readonly<sp/>buffer<sp/>Input1<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="stringliteral"><sp/><sp/>float<sp/>data[];</highlight></codeline>
<codeline lineno="994"><highlight class="stringliteral">}<sp/>raw_anchors;</highlight></codeline>
<codeline lineno="995"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="996"><highlight class="stringliteral">uint<sp/>num_coords<sp/>=<sp/>uint($0);</highlight></codeline>
<codeline lineno="997"><highlight class="stringliteral">int<sp/>output_format_flag<sp/>=<sp/>int($1);</highlight></codeline>
<codeline lineno="998"><highlight class="stringliteral">int<sp/>apply_exponential<sp/>=<sp/>int($2);</highlight></codeline>
<codeline lineno="999"><highlight class="stringliteral">int<sp/>box_coord_offset<sp/>=<sp/>int($3);</highlight></codeline>
<codeline lineno="1000"><highlight class="stringliteral">int<sp/>num_keypoints<sp/>=<sp/>int($4);</highlight></codeline>
<codeline lineno="1001"><highlight class="stringliteral">int<sp/>keypt_coord_offset<sp/>=<sp/>int($5);</highlight></codeline>
<codeline lineno="1002"><highlight class="stringliteral">int<sp/>num_values_per_keypt<sp/>=<sp/>int($6);</highlight></codeline>
<codeline lineno="1003"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1004"><highlight class="stringliteral">void<sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="stringliteral"><sp/><sp/>uint<sp/>g_idx<sp/>=<sp/>gl_GlobalInvocationID.x;<sp/><sp/>//<sp/>box<sp/>index</highlight></codeline>
<codeline lineno="1006"><highlight class="stringliteral"><sp/><sp/>uint<sp/>box_offset<sp/>=<sp/>g_idx<sp/>*<sp/>num_coords<sp/>+<sp/>uint(box_coord_offset);</highlight></codeline>
<codeline lineno="1007"><highlight class="stringliteral"><sp/><sp/>uint<sp/>anchor_offset<sp/>=<sp/>g_idx<sp/>*<sp/>uint(4);<sp/><sp/>//<sp/>check<sp/>kNumCoordsPerBox</highlight></codeline>
<codeline lineno="1008"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1009"><highlight class="stringliteral"><sp/><sp/>float<sp/>y_center,<sp/>x_center,<sp/>h,<sp/>w;</highlight></codeline>
<codeline lineno="1010"><highlight class="stringliteral"><sp/><sp/>if<sp/>(output_format_flag<sp/>==<sp/>int(0))<sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>y_center<sp/>=<sp/>raw_boxes.data[box_offset<sp/>+<sp/>uint(0)];</highlight></codeline>
<codeline lineno="1012"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>x_center<sp/>=<sp/>raw_boxes.data[box_offset<sp/>+<sp/>uint(1)];</highlight></codeline>
<codeline lineno="1013"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>raw_boxes.data[box_offset<sp/>+<sp/>uint(2)];</highlight></codeline>
<codeline lineno="1014"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>raw_boxes.data[box_offset<sp/>+<sp/>uint(3)];</highlight></codeline>
<codeline lineno="1015"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>if<sp/>(output_format_flag<sp/>==<sp/>int(1))<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>x_center<sp/>=<sp/>raw_boxes.data[box_offset<sp/>+<sp/>uint(0)];</highlight></codeline>
<codeline lineno="1017"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>y_center<sp/>=<sp/>raw_boxes.data[box_offset<sp/>+<sp/>uint(1)];</highlight></codeline>
<codeline lineno="1018"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>raw_boxes.data[box_offset<sp/>+<sp/>uint(2)];</highlight></codeline>
<codeline lineno="1019"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>raw_boxes.data[box_offset<sp/>+<sp/>uint(3)];</highlight></codeline>
<codeline lineno="1020"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>if<sp/>(output_format_flag<sp/>==<sp/>int(2))<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>x_center<sp/>=<sp/>(-raw_boxes.data[box_offset<sp/>+<sp/>uint(0)]</highlight></codeline>
<codeline lineno="1022"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+raw_boxes.data[box_offset<sp/>+<sp/>uint(2)])<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1023"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>y_center<sp/>=<sp/>(-raw_boxes.data[box_offset<sp/>+<sp/>uint(1)]</highlight></codeline>
<codeline lineno="1024"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+raw_boxes.data[box_offset<sp/>+<sp/>uint(3)])<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1025"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>raw_boxes.data[box_offset<sp/>+<sp/>uint(0)]</highlight></codeline>
<codeline lineno="1026"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>raw_boxes.data[box_offset<sp/>+<sp/>uint(2)];</highlight></codeline>
<codeline lineno="1027"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>raw_boxes.data[box_offset<sp/>+<sp/>uint(1)]</highlight></codeline>
<codeline lineno="1028"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>raw_boxes.data[box_offset<sp/>+<sp/>uint(3)];</highlight></codeline>
<codeline lineno="1029"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1031"><highlight class="stringliteral"><sp/><sp/>float<sp/>anchor_yc<sp/>=<sp/>raw_anchors.data[anchor_offset<sp/>+<sp/>uint(0)];</highlight></codeline>
<codeline lineno="1032"><highlight class="stringliteral"><sp/><sp/>float<sp/>anchor_xc<sp/>=<sp/>raw_anchors.data[anchor_offset<sp/>+<sp/>uint(1)];</highlight></codeline>
<codeline lineno="1033"><highlight class="stringliteral"><sp/><sp/>float<sp/>anchor_h<sp/><sp/>=<sp/>raw_anchors.data[anchor_offset<sp/>+<sp/>uint(2)];</highlight></codeline>
<codeline lineno="1034"><highlight class="stringliteral"><sp/><sp/>float<sp/>anchor_w<sp/><sp/>=<sp/>raw_anchors.data[anchor_offset<sp/>+<sp/>uint(3)];</highlight></codeline>
<codeline lineno="1035"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1036"><highlight class="stringliteral"><sp/><sp/>x_center<sp/>=<sp/>x_center<sp/>/<sp/>scale.x<sp/>*<sp/>anchor_w<sp/>+<sp/>anchor_xc;</highlight></codeline>
<codeline lineno="1037"><highlight class="stringliteral"><sp/><sp/>y_center<sp/>=<sp/>y_center<sp/>/<sp/>scale.y<sp/>*<sp/>anchor_h<sp/>+<sp/>anchor_yc;</highlight></codeline>
<codeline lineno="1038"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1039"><highlight class="stringliteral"><sp/><sp/>if<sp/>(apply_exponential<sp/>==<sp/>int(1))<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>exp(h<sp/>/<sp/>scale.w)<sp/>*<sp/>anchor_h;</highlight></codeline>
<codeline lineno="1041"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>exp(w<sp/>/<sp/>scale.z)<sp/>*<sp/>anchor_w;</highlight></codeline>
<codeline lineno="1042"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>(h<sp/>/<sp/>scale.w)<sp/>*<sp/>anchor_h;</highlight></codeline>
<codeline lineno="1044"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>(w<sp/>/<sp/>scale.z)<sp/>*<sp/>anchor_w;</highlight></codeline>
<codeline lineno="1045"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1047"><highlight class="stringliteral"><sp/><sp/>float<sp/>ymin<sp/>=<sp/>y_center<sp/>-<sp/>h<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1048"><highlight class="stringliteral"><sp/><sp/>float<sp/>xmin<sp/>=<sp/>x_center<sp/>-<sp/>w<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1049"><highlight class="stringliteral"><sp/><sp/>float<sp/>ymax<sp/>=<sp/>y_center<sp/>+<sp/>h<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1050"><highlight class="stringliteral"><sp/><sp/>float<sp/>xmax<sp/>=<sp/>x_center<sp/>+<sp/>w<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1051"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1052"><highlight class="stringliteral"><sp/><sp/>boxes.data[box_offset<sp/>+<sp/>uint(0)]<sp/>=<sp/>ymin;</highlight></codeline>
<codeline lineno="1053"><highlight class="stringliteral"><sp/><sp/>boxes.data[box_offset<sp/>+<sp/>uint(1)]<sp/>=<sp/>xmin;</highlight></codeline>
<codeline lineno="1054"><highlight class="stringliteral"><sp/><sp/>boxes.data[box_offset<sp/>+<sp/>uint(2)]<sp/>=<sp/>ymax;</highlight></codeline>
<codeline lineno="1055"><highlight class="stringliteral"><sp/><sp/>boxes.data[box_offset<sp/>+<sp/>uint(3)]<sp/>=<sp/>xmax;</highlight></codeline>
<codeline lineno="1056"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1057"><highlight class="stringliteral"><sp/><sp/>if<sp/>(num_keypoints<sp/>&gt;<sp/>int(0)){</highlight></codeline>
<codeline lineno="1058"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>num_keypoints;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>kp_offset<sp/>=</highlight></codeline>
<codeline lineno="1060"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int(g_idx<sp/>*<sp/>num_coords)<sp/>+<sp/>keypt_coord_offset<sp/>+<sp/>k<sp/>*<sp/>num_values_per_keypt;</highlight></codeline>
<codeline lineno="1061"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>kp_y,<sp/>kp_x;</highlight></codeline>
<codeline lineno="1062"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(output_format_flag<sp/>==<sp/>int(0))<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kp_y<sp/>=<sp/>raw_boxes.data[kp_offset<sp/>+<sp/>int(0)];</highlight></codeline>
<codeline lineno="1064"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kp_x<sp/>=<sp/>raw_boxes.data[kp_offset<sp/>+<sp/>int(1)];</highlight></codeline>
<codeline lineno="1065"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kp_x<sp/>=<sp/>raw_boxes.data[kp_offset<sp/>+<sp/>int(0)];</highlight></codeline>
<codeline lineno="1067"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kp_y<sp/>=<sp/>raw_boxes.data[kp_offset<sp/>+<sp/>int(1)];</highlight></codeline>
<codeline lineno="1068"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>boxes.data[kp_offset<sp/>+<sp/>int(0)]<sp/>=<sp/>kp_x<sp/>/<sp/>scale.x<sp/>*<sp/>anchor_w<sp/>+<sp/>anchor_xc;</highlight></codeline>
<codeline lineno="1070"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>boxes.data[kp_offset<sp/>+<sp/>int(1)]<sp/>=<sp/>kp_y<sp/>/<sp/>scale.y<sp/>*<sp/>anchor_h<sp/>+<sp/>anchor_yc;</highlight></codeline>
<codeline lineno="1071"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="stringliteral">})&quot;,</highlight></codeline>
<codeline lineno="1074"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_.num_coords(),<sp/><sp/></highlight><highlight class="comment">//<sp/>box<sp/>xywh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_format_flag,<sp/>options_.apply_exponential_on_box_size()<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_.box_coord_offset(),<sp/>options_.num_keypoints(),</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_.keypoint_coord_offset(),<sp/>options_.num_values_per_keypoint());</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shader<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>shader<sp/>=<sp/>glCreateShader(GL_COMPUTE_SHADER);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>GLchar*<sp/>sources[]<sp/>=<sp/>{decode_src.c_str()};</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(shader,<sp/>1,<sp/>sources,<sp/>NULL);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(shader);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>compiled<sp/>=<sp/>GL_FALSE;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(shader,<sp/>GL_COMPILE_STATUS,<sp/>&amp;compiled);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(compiled<sp/>==<sp/>GL_TRUE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Shader<sp/>compilation<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>[shader]<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>length;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderiv(shader,<sp/>GL_INFO_LOG_LENGTH,<sp/>&amp;length);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str.reserve(length);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderInfoLog(shader,<sp/>length,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>str.data());</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>decode_program_<sp/>=<sp/>glCreateProgram();</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(decode_program_,<sp/>shader);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteShader(shader);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>glLinkProgram(decode_program_);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>decoded_boxes_buffer_<sp/>=</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>absl::make_unique&lt;Tensor&gt;(Tensor::ElementType::kFloat32,</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor::Shape{1,<sp/>num_boxes_<sp/>*<sp/>num_coords_});</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>raw_anchors_buffer_<sp/>=<sp/>absl::make_unique&lt;Tensor&gt;(</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor::ElementType::kFloat32,</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor::Shape{1,<sp/>num_boxes_<sp/>*<sp/>kNumCoordsPerBox});</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(decode_program_);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform4f(0,<sp/>options_.x_scale(),<sp/>options_.y_scale(),<sp/>options_.w_scale(),</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_.h_scale());</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>shader<sp/>to<sp/>score<sp/>detection<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>score_src<sp/>=<sp/>absl::Substitute(</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(<sp/>#version<sp/>310<sp/>es</highlight></codeline>
<codeline lineno="1114"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1115"><highlight class="stringliteral">layout(local_size_x<sp/>=<sp/>1,<sp/>local_size_y<sp/>=<sp/>$0,<sp/>local_size_z<sp/>=<sp/>1)<sp/>in;</highlight></codeline>
<codeline lineno="1116"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1117"><highlight class="stringliteral">#define<sp/>FLT_MAX<sp/>1.0e+37</highlight></codeline>
<codeline lineno="1118"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1119"><highlight class="stringliteral">shared<sp/>float<sp/>local_scores[$0];</highlight></codeline>
<codeline lineno="1120"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1121"><highlight class="stringliteral">layout(std430,<sp/>binding<sp/>=<sp/>0)<sp/>writeonly<sp/>buffer<sp/>Output<sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="stringliteral"><sp/><sp/>float<sp/>data[];</highlight></codeline>
<codeline lineno="1123"><highlight class="stringliteral">}<sp/>scored_boxes;</highlight></codeline>
<codeline lineno="1124"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1125"><highlight class="stringliteral">layout(std430,<sp/>binding<sp/>=<sp/>1)<sp/>readonly<sp/>buffer<sp/>Input0<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="stringliteral"><sp/><sp/>float<sp/>data[];</highlight></codeline>
<codeline lineno="1127"><highlight class="stringliteral">}<sp/>raw_scores;</highlight></codeline>
<codeline lineno="1128"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1129"><highlight class="stringliteral">uint<sp/>num_classes<sp/>=<sp/>uint($0);</highlight></codeline>
<codeline lineno="1130"><highlight class="stringliteral">int<sp/>apply_sigmoid<sp/>=<sp/>int($1);</highlight></codeline>
<codeline lineno="1131"><highlight class="stringliteral">int<sp/>apply_clipping_thresh<sp/>=<sp/>int($2);</highlight></codeline>
<codeline lineno="1132"><highlight class="stringliteral">float<sp/>clipping_thresh<sp/>=<sp/>float($3);</highlight></codeline>
<codeline lineno="1133"><highlight class="stringliteral">int<sp/>ignore_class_0<sp/>=<sp/>int($4);</highlight></codeline>
<codeline lineno="1134"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1135"><highlight class="stringliteral">float<sp/>optional_sigmoid(float<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="stringliteral"><sp/><sp/>if<sp/>(apply_sigmoid<sp/>==<sp/>int(0))<sp/>return<sp/>x;</highlight></codeline>
<codeline lineno="1137"><highlight class="stringliteral"><sp/><sp/>if<sp/>(apply_clipping_thresh<sp/>==<sp/>int(1))<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>clamp(x,<sp/>-clipping_thresh,<sp/>clipping_thresh);</highlight></codeline>
<codeline lineno="1139"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="stringliteral"><sp/><sp/>x<sp/>=<sp/>1.0<sp/>/<sp/>(1.0<sp/>+<sp/>exp(-x));</highlight></codeline>
<codeline lineno="1141"><highlight class="stringliteral"><sp/><sp/>return<sp/>x;</highlight></codeline>
<codeline lineno="1142"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1143"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1144"><highlight class="stringliteral">void<sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="stringliteral"><sp/><sp/>uint<sp/>g_idx<sp/>=<sp/>gl_GlobalInvocationID.x;<sp/><sp/><sp/>//<sp/>box<sp/>idx</highlight></codeline>
<codeline lineno="1146"><highlight class="stringliteral"><sp/><sp/>uint<sp/>s_idx<sp/>=<sp/><sp/>gl_LocalInvocationID.y;<sp/><sp/><sp/>//<sp/>score/class<sp/>idx</highlight></codeline>
<codeline lineno="1147"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1148"><highlight class="stringliteral"><sp/><sp/>//<sp/>load<sp/>all<sp/>scores<sp/>into<sp/>shared<sp/>memory</highlight></codeline>
<codeline lineno="1149"><highlight class="stringliteral"><sp/><sp/>float<sp/>score<sp/>=<sp/>raw_scores.data[g_idx<sp/>*<sp/>num_classes<sp/>+<sp/>s_idx];</highlight></codeline>
<codeline lineno="1150"><highlight class="stringliteral"><sp/><sp/>local_scores[s_idx]<sp/>=<sp/>optional_sigmoid(score);</highlight></codeline>
<codeline lineno="1151"><highlight class="stringliteral"><sp/><sp/>memoryBarrierShared();</highlight></codeline>
<codeline lineno="1152"><highlight class="stringliteral"><sp/><sp/>barrier();</highlight></codeline>
<codeline lineno="1153"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1154"><highlight class="stringliteral"><sp/><sp/>//<sp/>find<sp/>max<sp/>score<sp/>in<sp/>shared<sp/>memory</highlight></codeline>
<codeline lineno="1155"><highlight class="stringliteral"><sp/><sp/>if<sp/>(s_idx<sp/>==<sp/>uint(0))<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>float<sp/>max_score<sp/>=<sp/>-FLT_MAX;</highlight></codeline>
<codeline lineno="1157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>float<sp/>max_class<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="1158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i=ignore_class_0;<sp/>i&lt;int(num_classes);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(local_scores[i]<sp/>&gt;<sp/>max_score)<sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_score<sp/>=<sp/>local_scores[i];</highlight></codeline>
<codeline lineno="1161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_class<sp/>=<sp/>float(i);</highlight></codeline>
<codeline lineno="1162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>scored_boxes.data[g_idx<sp/>*<sp/>uint(2)<sp/>+<sp/>uint(0)]<sp/>=<sp/>max_score;</highlight></codeline>
<codeline lineno="1165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>scored_boxes.data[g_idx<sp/>*<sp/>uint(2)<sp/>+<sp/>uint(1)]<sp/>=<sp/>max_class;</highlight></codeline>
<codeline lineno="1166"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="stringliteral">})&quot;,</highlight></codeline>
<codeline lineno="1168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_classes_,<sp/>options_.sigmoid_score()<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="1169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_.has_score_clipping_thresh()<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="1170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_.has_score_clipping_thresh()<sp/>?<sp/>options_.score_clipping_thresh()</highlight></codeline>
<codeline lineno="1171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="1172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!IsClassIndexAllowed(0));</highlight></codeline>
<codeline lineno="1173"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#<sp/>filter<sp/>classes<sp/>supported<sp/>is<sp/>hardware<sp/>dependent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_wg_size;<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>typically<sp/>&lt;=<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetIntegeri_v(GL_MAX_COMPUTE_WORK_GROUP_SIZE,<sp/>1,</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;max_wg_size);<sp/><sp/></highlight><highlight class="comment">//<sp/>y-dim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>gpu_has_enough_work_groups_<sp/>=<sp/>num_classes_<sp/>&lt;<sp/>max_wg_size;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gpu_has_enough_work_groups_)<sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::FailedPreconditionError(absl::StrFormat(</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Hardware<sp/>limitation:<sp/>Processing<sp/>will<sp/>be<sp/>done<sp/>on<sp/>CPU,<sp/>because<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;num_classes<sp/>%d<sp/>exceeds<sp/>the<sp/>max<sp/>work_group<sp/>size<sp/>%d.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_classes_,<sp/>max_wg_size));</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>support<sp/>better<sp/>filtering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_index_set_.is_allowlist)<sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ABSL_CHECK_EQ(class_index_set_.values.size(),</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsClassIndexAllowed(0)<sp/>?<sp/>num_classes_<sp/>:<sp/>num_classes_<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>all<sp/>classes<sp/><sp/>&gt;=<sp/>class<sp/>0<sp/><sp/>or<sp/><sp/>&gt;=<sp/>class<sp/>1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ABSL_CHECK_EQ(class_index_set_.values.size(),</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsClassIndexAllowed(0)<sp/>?<sp/>0<sp/>:<sp/>1)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>ignore<sp/>class<sp/>0<sp/>is<sp/>allowed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shader<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GLuint<sp/>shader<sp/>=<sp/>glCreateShader(GL_COMPUTE_SHADER);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar*<sp/>sources[]<sp/>=<sp/>{score_src.c_str()};</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glShaderSource(shader,<sp/>1,<sp/>sources,<sp/>NULL);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glCompileShader(shader);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>compiled<sp/>=<sp/>GL_FALSE;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderiv(shader,<sp/>GL_COMPILE_STATUS,<sp/>&amp;compiled);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RET_CHECK(compiled<sp/>==<sp/>GL_TRUE);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score_program_<sp/>=<sp/>glCreateProgram();</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glAttachShader(score_program_,<sp/>shader);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteShader(shader);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glLinkProgram(score_program_);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>scored_boxes_buffer_<sp/>=<sp/>absl::make_unique&lt;Tensor&gt;(</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor::ElementType::kFloat32,<sp/>Tensor::Shape{1,<sp/>num_boxes_<sp/>*<sp/>2});</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/>}));</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>MEDIAPIPE_METAL_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>id&lt;MTLDevice&gt;<sp/>device<sp/>=<sp/>gpu_helper_.mtlDevice;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>shader<sp/>to<sp/>decode<sp/>detection<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>std::string<sp/>decode_src<sp/>=<sp/>absl::Substitute(</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(</highlight></codeline>
<codeline lineno="1224"><highlight class="stringliteral">#include<sp/>&lt;metal_stdlib&gt;</highlight></codeline>
<codeline lineno="1225"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1226"><highlight class="stringliteral">using<sp/>namespace<sp/>metal;</highlight></codeline>
<codeline lineno="1227"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1228"><highlight class="stringliteral">kernel<sp/>void<sp/>decodeKernel(</highlight></codeline>
<codeline lineno="1229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>device<sp/>float*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes<sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[<sp/>buffer(0)<sp/>]],</highlight></codeline>
<codeline lineno="1230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>device<sp/>float*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_boxes<sp/><sp/><sp/>[[<sp/>buffer(1)<sp/>]],</highlight></codeline>
<codeline lineno="1231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>device<sp/>float*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_anchors<sp/>[[<sp/>buffer(2)<sp/>]],</highlight></codeline>
<codeline lineno="1232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uint2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[<sp/>thread_position_in_grid<sp/>]])<sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1234"><highlight class="stringliteral"><sp/><sp/>uint<sp/>num_coords<sp/>=<sp/>uint($0);</highlight></codeline>
<codeline lineno="1235"><highlight class="stringliteral"><sp/><sp/>int<sp/>output_format_flag<sp/>=<sp/>int($1);</highlight></codeline>
<codeline lineno="1236"><highlight class="stringliteral"><sp/><sp/>int<sp/>apply_exponential<sp/>=<sp/>int($2);</highlight></codeline>
<codeline lineno="1237"><highlight class="stringliteral"><sp/><sp/>int<sp/>box_coord_offset<sp/>=<sp/>int($3);</highlight></codeline>
<codeline lineno="1238"><highlight class="stringliteral"><sp/><sp/>int<sp/>num_keypoints<sp/>=<sp/>int($4);</highlight></codeline>
<codeline lineno="1239"><highlight class="stringliteral"><sp/><sp/>int<sp/>keypt_coord_offset<sp/>=<sp/>int($5);</highlight></codeline>
<codeline lineno="1240"><highlight class="stringliteral"><sp/><sp/>int<sp/>num_values_per_keypt<sp/>=<sp/>int($6);</highlight></codeline>
<codeline lineno="1241"><highlight class="stringliteral">)&quot;,</highlight></codeline>
<codeline lineno="1242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>options_.num_coords(),<sp/><sp/></highlight><highlight class="comment">//<sp/>box<sp/>xywh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_format_flag,<sp/>options_.apply_exponential_on_box_size()<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>options_.box_coord_offset(),<sp/>options_.num_keypoints(),</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>options_.keypoint_coord_offset(),<sp/>options_.num_values_per_keypoint());</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>decode_src<sp/>+=<sp/>absl::Substitute(</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(</highlight></codeline>
<codeline lineno="1248"><highlight class="stringliteral"><sp/><sp/>float4<sp/>scale<sp/>=<sp/>float4(($0),($1),($2),($3));</highlight></codeline>
<codeline lineno="1249"><highlight class="stringliteral">)&quot;,</highlight></codeline>
<codeline lineno="1250"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>options_.x_scale(),<sp/>options_.y_scale(),<sp/>options_.w_scale(),</highlight></codeline>
<codeline lineno="1251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>options_.h_scale());</highlight></codeline>
<codeline lineno="1252"><highlight class="stringliteral"><sp/><sp/>decode_src<sp/>+=<sp/>R</highlight><highlight class="stringliteral">&quot;(</highlight></codeline>
<codeline lineno="1253"><highlight class="stringliteral"><sp/><sp/>uint<sp/>g_idx<sp/>=<sp/>gid.x;</highlight></codeline>
<codeline lineno="1254"><highlight class="stringliteral"><sp/><sp/>uint<sp/>box_offset<sp/>=<sp/>g_idx<sp/>*<sp/>num_coords<sp/>+<sp/>uint(box_coord_offset);</highlight></codeline>
<codeline lineno="1255"><highlight class="stringliteral"><sp/><sp/>uint<sp/>anchor_offset<sp/>=<sp/>g_idx<sp/>*<sp/>uint(4);<sp/><sp/>//<sp/>check<sp/>kNumCoordsPerBox</highlight></codeline>
<codeline lineno="1256"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1257"><highlight class="stringliteral"><sp/><sp/>float<sp/>y_center,<sp/>x_center,<sp/>h,<sp/>w;</highlight></codeline>
<codeline lineno="1258"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1259"><highlight class="stringliteral"><sp/><sp/>if<sp/>(output_format_flag<sp/>==<sp/>int(0))<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>y_center<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>uint(0)];</highlight></codeline>
<codeline lineno="1261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>x_center<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>uint(1)];</highlight></codeline>
<codeline lineno="1262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>uint(2)];</highlight></codeline>
<codeline lineno="1263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>uint(3)];</highlight></codeline>
<codeline lineno="1264"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>if<sp/>(output_format_flag<sp/>==<sp/>int(1))<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>x_center<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>uint(0)];</highlight></codeline>
<codeline lineno="1266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>y_center<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>uint(1)];</highlight></codeline>
<codeline lineno="1267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>uint(2)];</highlight></codeline>
<codeline lineno="1268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>uint(3)];</highlight></codeline>
<codeline lineno="1269"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>if<sp/>(output_format_flag<sp/>==<sp/>int(2))<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>x_center<sp/>=<sp/>(-raw_boxes[box_offset<sp/>+<sp/>uint(0)]</highlight></codeline>
<codeline lineno="1271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+raw_boxes[box_offset<sp/>+<sp/>uint(2)])<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>y_center<sp/>=<sp/>(-raw_boxes[box_offset<sp/>+<sp/>uint(1)]</highlight></codeline>
<codeline lineno="1273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+raw_boxes[box_offset<sp/>+<sp/>uint(3)])<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>uint(0)]</highlight></codeline>
<codeline lineno="1275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>raw_boxes[box_offset<sp/>+<sp/>uint(2)];</highlight></codeline>
<codeline lineno="1276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>raw_boxes[box_offset<sp/>+<sp/>uint(1)]</highlight></codeline>
<codeline lineno="1277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>raw_boxes[box_offset<sp/>+<sp/>uint(3)];</highlight></codeline>
<codeline lineno="1278"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1280"><highlight class="stringliteral"><sp/><sp/>float<sp/>anchor_yc<sp/>=<sp/>raw_anchors[anchor_offset<sp/>+<sp/>uint(0)];</highlight></codeline>
<codeline lineno="1281"><highlight class="stringliteral"><sp/><sp/>float<sp/>anchor_xc<sp/>=<sp/>raw_anchors[anchor_offset<sp/>+<sp/>uint(1)];</highlight></codeline>
<codeline lineno="1282"><highlight class="stringliteral"><sp/><sp/>float<sp/>anchor_h<sp/><sp/>=<sp/>raw_anchors[anchor_offset<sp/>+<sp/>uint(2)];</highlight></codeline>
<codeline lineno="1283"><highlight class="stringliteral"><sp/><sp/>float<sp/>anchor_w<sp/><sp/>=<sp/>raw_anchors[anchor_offset<sp/>+<sp/>uint(3)];</highlight></codeline>
<codeline lineno="1284"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1285"><highlight class="stringliteral"><sp/><sp/>x_center<sp/>=<sp/>x_center<sp/>/<sp/>scale.x<sp/>*<sp/>anchor_w<sp/>+<sp/>anchor_xc;</highlight></codeline>
<codeline lineno="1286"><highlight class="stringliteral"><sp/><sp/>y_center<sp/>=<sp/>y_center<sp/>/<sp/>scale.y<sp/>*<sp/>anchor_h<sp/>+<sp/>anchor_yc;</highlight></codeline>
<codeline lineno="1287"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1288"><highlight class="stringliteral"><sp/><sp/>if<sp/>(apply_exponential<sp/>==<sp/>int(1))<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>exp(h<sp/>/<sp/>scale.w)<sp/>*<sp/>anchor_h;</highlight></codeline>
<codeline lineno="1290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>exp(w<sp/>/<sp/>scale.z)<sp/>*<sp/>anchor_w;</highlight></codeline>
<codeline lineno="1291"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>(h<sp/>/<sp/>scale.w)<sp/>*<sp/>anchor_h;</highlight></codeline>
<codeline lineno="1293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>(w<sp/>/<sp/>scale.z)<sp/>*<sp/>anchor_w;</highlight></codeline>
<codeline lineno="1294"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1296"><highlight class="stringliteral"><sp/><sp/>float<sp/>ymin<sp/>=<sp/>y_center<sp/>-<sp/>h<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1297"><highlight class="stringliteral"><sp/><sp/>float<sp/>xmin<sp/>=<sp/>x_center<sp/>-<sp/>w<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1298"><highlight class="stringliteral"><sp/><sp/>float<sp/>ymax<sp/>=<sp/>y_center<sp/>+<sp/>h<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1299"><highlight class="stringliteral"><sp/><sp/>float<sp/>xmax<sp/>=<sp/>x_center<sp/>+<sp/>w<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1300"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1301"><highlight class="stringliteral"><sp/><sp/>boxes[box_offset<sp/>+<sp/>uint(0)]<sp/>=<sp/>ymin;</highlight></codeline>
<codeline lineno="1302"><highlight class="stringliteral"><sp/><sp/>boxes[box_offset<sp/>+<sp/>uint(1)]<sp/>=<sp/>xmin;</highlight></codeline>
<codeline lineno="1303"><highlight class="stringliteral"><sp/><sp/>boxes[box_offset<sp/>+<sp/>uint(2)]<sp/>=<sp/>ymax;</highlight></codeline>
<codeline lineno="1304"><highlight class="stringliteral"><sp/><sp/>boxes[box_offset<sp/>+<sp/>uint(3)]<sp/>=<sp/>xmax;</highlight></codeline>
<codeline lineno="1305"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1306"><highlight class="stringliteral"><sp/><sp/>if<sp/>(num_keypoints<sp/>&gt;<sp/>int(0)){</highlight></codeline>
<codeline lineno="1307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>num_keypoints;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>kp_offset<sp/>=</highlight></codeline>
<codeline lineno="1309"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int(g_idx<sp/>*<sp/>num_coords)<sp/>+<sp/>keypt_coord_offset<sp/>+<sp/>k<sp/>*<sp/>num_values_per_keypt;</highlight></codeline>
<codeline lineno="1310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>kp_y,<sp/>kp_x;</highlight></codeline>
<codeline lineno="1311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(output_format_flag<sp/>==<sp/>int(0))<sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kp_y<sp/>=<sp/>raw_boxes[kp_offset<sp/>+<sp/>int(0)];</highlight></codeline>
<codeline lineno="1313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kp_x<sp/>=<sp/>raw_boxes[kp_offset<sp/>+<sp/>int(1)];</highlight></codeline>
<codeline lineno="1314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kp_x<sp/>=<sp/>raw_boxes[kp_offset<sp/>+<sp/>int(0)];</highlight></codeline>
<codeline lineno="1316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kp_y<sp/>=<sp/>raw_boxes[kp_offset<sp/>+<sp/>int(1)];</highlight></codeline>
<codeline lineno="1317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>boxes[kp_offset<sp/>+<sp/>int(0)]<sp/>=<sp/>kp_x<sp/>/<sp/>scale.x<sp/>*<sp/>anchor_w<sp/>+<sp/>anchor_xc;</highlight></codeline>
<codeline lineno="1319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>boxes[kp_offset<sp/>+<sp/>int(1)]<sp/>=<sp/>kp_y<sp/>/<sp/>scale.y<sp/>*<sp/>anchor_h<sp/>+<sp/>anchor_yc;</highlight></codeline>
<codeline lineno="1320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="stringliteral">})&quot;;</highlight></codeline>
<codeline lineno="1323"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1324"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shader<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString*<sp/>library_source<sp/>=</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[NSString<sp/>stringWithUTF8String:decode_src.c_str()];</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>NSError*<sp/>error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>id&lt;MTLLibrary&gt;<sp/>library<sp/>=<sp/>[device<sp/>newLibraryWithSource:library_source</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(library<sp/>!=<sp/>nil)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>create<sp/>shader<sp/>library<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>[[error<sp/>localizedDescription]<sp/>UTF8String];</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>id&lt;MTLFunction&gt;<sp/>kernel_func<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_func<sp/>=<sp/>[library<sp/>newFunctionWithName:</highlight><highlight class="stringliteral">@&quot;decodeKernel&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(kernel_func<sp/>!=<sp/>nil)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>create<sp/>kernel<sp/>function.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>decode_program_<sp/>=</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[device<sp/>newComputePipelineStateWithFunction:kernel_func<sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(decode_program_<sp/>!=<sp/>nil)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>create<sp/>pipeline<sp/>state<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[error<sp/>localizedDescription]<sp/>UTF8String];</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>decoded_boxes_buffer_<sp/>=</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>absl::make_unique&lt;Tensor&gt;(Tensor::ElementType::kFloat32,</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor::Shape{1,<sp/>num_boxes_<sp/>*<sp/>num_coords_});</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>raw_anchors_buffer_<sp/>=<sp/>absl::make_unique&lt;Tensor&gt;(</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor::ElementType::kFloat32,</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor::Shape{1,<sp/>num_boxes_<sp/>*<sp/>kNumCoordsPerBox});</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>shader<sp/>to<sp/>score<sp/>detection<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>score_src<sp/>=<sp/>absl::Substitute(</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(</highlight></codeline>
<codeline lineno="1354"><highlight class="stringliteral">#include<sp/>&lt;metal_stdlib&gt;</highlight></codeline>
<codeline lineno="1355"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1356"><highlight class="stringliteral">using<sp/>namespace<sp/>metal;</highlight></codeline>
<codeline lineno="1357"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1358"><highlight class="stringliteral">float<sp/>optional_sigmoid(float<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="stringliteral"><sp/><sp/>int<sp/>apply_sigmoid<sp/>=<sp/>int($1);</highlight></codeline>
<codeline lineno="1360"><highlight class="stringliteral"><sp/><sp/>int<sp/>apply_clipping_thresh<sp/>=<sp/>int($2);</highlight></codeline>
<codeline lineno="1361"><highlight class="stringliteral"><sp/><sp/>float<sp/>clipping_thresh<sp/>=<sp/>float($3);</highlight></codeline>
<codeline lineno="1362"><highlight class="stringliteral"><sp/><sp/>if<sp/>(apply_sigmoid<sp/>==<sp/>int(0))<sp/>return<sp/>x;</highlight></codeline>
<codeline lineno="1363"><highlight class="stringliteral"><sp/><sp/>if<sp/>(apply_clipping_thresh<sp/>==<sp/>int(1))<sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>clamp(x,<sp/>-clipping_thresh,<sp/>clipping_thresh);</highlight></codeline>
<codeline lineno="1365"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1366"><highlight class="stringliteral"><sp/><sp/>x<sp/>=<sp/>1.0<sp/>/<sp/>(1.0<sp/>+<sp/>exp(-x));</highlight></codeline>
<codeline lineno="1367"><highlight class="stringliteral"><sp/><sp/>return<sp/>x;</highlight></codeline>
<codeline lineno="1368"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1369"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1370"><highlight class="stringliteral">kernel<sp/>void<sp/>scoreKernel(</highlight></codeline>
<codeline lineno="1371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>device<sp/>float*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scored_boxes<sp/>[[<sp/>buffer(0)<sp/>]],</highlight></codeline>
<codeline lineno="1372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>device<sp/>float*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_scores<sp/><sp/><sp/>[[<sp/>buffer(1)<sp/>]],</highlight></codeline>
<codeline lineno="1373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uint2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[<sp/>thread_position_in_threadgroup<sp/>]],</highlight></codeline>
<codeline lineno="1374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uint2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[<sp/>thread_position_in_grid<sp/>]])<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1376"><highlight class="stringliteral"><sp/><sp/>uint<sp/>num_classes<sp/>=<sp/>uint($0);</highlight></codeline>
<codeline lineno="1377"><highlight class="stringliteral"><sp/><sp/>int<sp/>apply_sigmoid<sp/>=<sp/>int($1);</highlight></codeline>
<codeline lineno="1378"><highlight class="stringliteral"><sp/><sp/>int<sp/>apply_clipping_thresh<sp/>=<sp/>int($2);</highlight></codeline>
<codeline lineno="1379"><highlight class="stringliteral"><sp/><sp/>float<sp/>clipping_thresh<sp/>=<sp/>float($3);</highlight></codeline>
<codeline lineno="1380"><highlight class="stringliteral"><sp/><sp/>int<sp/>ignore_class_0<sp/>=<sp/>int($4);</highlight></codeline>
<codeline lineno="1381"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1382"><highlight class="stringliteral"><sp/><sp/>uint<sp/>g_idx<sp/>=<sp/>gid.x;<sp/><sp/><sp/>//<sp/>box<sp/>idx</highlight></codeline>
<codeline lineno="1383"><highlight class="stringliteral"><sp/><sp/>uint<sp/>s_idx<sp/>=<sp/>tid.y;<sp/><sp/><sp/>//<sp/>score/class<sp/>idx</highlight></codeline>
<codeline lineno="1384"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1385"><highlight class="stringliteral"><sp/><sp/>//<sp/>load<sp/>all<sp/>scores<sp/>into<sp/>shared<sp/>memory</highlight></codeline>
<codeline lineno="1386"><highlight class="stringliteral"><sp/><sp/>threadgroup<sp/>float<sp/>local_scores[$0];</highlight></codeline>
<codeline lineno="1387"><highlight class="stringliteral"><sp/><sp/>float<sp/>score<sp/>=<sp/>raw_scores[g_idx<sp/>*<sp/>num_classes<sp/>+<sp/>s_idx];</highlight></codeline>
<codeline lineno="1388"><highlight class="stringliteral"><sp/><sp/>local_scores[s_idx]<sp/>=<sp/>optional_sigmoid(score);</highlight></codeline>
<codeline lineno="1389"><highlight class="stringliteral"><sp/><sp/>threadgroup_barrier(mem_flags::mem_threadgroup);</highlight></codeline>
<codeline lineno="1390"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1391"><highlight class="stringliteral"><sp/><sp/>//<sp/>find<sp/>max<sp/>score<sp/>in<sp/>shared<sp/>memory</highlight></codeline>
<codeline lineno="1392"><highlight class="stringliteral"><sp/><sp/>if<sp/>(s_idx<sp/>==<sp/>uint(0))<sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>float<sp/>max_score<sp/>=<sp/>-FLT_MAX;</highlight></codeline>
<codeline lineno="1394"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>float<sp/>max_class<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="1395"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i=ignore_class_0;<sp/>i&lt;int(num_classes);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(local_scores[i]<sp/>&gt;<sp/>max_score)<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_score<sp/>=<sp/>local_scores[i];</highlight></codeline>
<codeline lineno="1398"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_class<sp/>=<sp/>float(i);</highlight></codeline>
<codeline lineno="1399"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>scored_boxes[g_idx<sp/>*<sp/>uint(2)<sp/>+<sp/>uint(0)]<sp/>=<sp/>max_score;</highlight></codeline>
<codeline lineno="1402"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>scored_boxes[g_idx<sp/>*<sp/>uint(2)<sp/>+<sp/>uint(1)]<sp/>=<sp/>max_class;</highlight></codeline>
<codeline lineno="1403"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="stringliteral">})&quot;,</highlight></codeline>
<codeline lineno="1405"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>num_classes_,<sp/>options_.sigmoid_score()<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="1406"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>options_.has_score_clipping_thresh()<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="1407"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>options_.has_score_clipping_thresh()<sp/>?<sp/>options_.score_clipping_thresh()</highlight></codeline>
<codeline lineno="1408"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="1409"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>!IsClassIndexAllowed(0));</highlight></codeline>
<codeline lineno="1410"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1411"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>support<sp/>better<sp/>filtering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_index_set_.is_allowlist)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>ABSL_CHECK_EQ(class_index_set_.values.size(),</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsClassIndexAllowed(0)<sp/>?<sp/>num_classes_<sp/>:<sp/>num_classes_<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>all<sp/>classes<sp/><sp/>&gt;=<sp/>class<sp/>0<sp/><sp/>or<sp/><sp/>&gt;=<sp/>class<sp/>1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>ABSL_CHECK_EQ(class_index_set_.values.size(),</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsClassIndexAllowed(0)<sp/>?<sp/>0<sp/>:<sp/>1)</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>ignore<sp/>class<sp/>0<sp/>is<sp/>allowed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shader<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString*<sp/>library_source<sp/>=</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[NSString<sp/>stringWithUTF8String:score_src.c_str()];</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>NSError*<sp/>error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>id&lt;MTLLibrary&gt;<sp/>library<sp/>=<sp/>[device<sp/>newLibraryWithSource:library_source</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(library<sp/>!=<sp/>nil)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>create<sp/>shader<sp/>library<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>[[error<sp/>localizedDescription]<sp/>UTF8String];</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>id&lt;MTLFunction&gt;<sp/>kernel_func<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_func<sp/>=<sp/>[library<sp/>newFunctionWithName:</highlight><highlight class="stringliteral">@&quot;scoreKernel&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(kernel_func<sp/>!=<sp/>nil)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>create<sp/>kernel<sp/>function.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>score_program_<sp/>=</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[device<sp/>newComputePipelineStateWithFunction:kernel_func<sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>RET_CHECK(score_program_<sp/>!=<sp/>nil)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>create<sp/>pipeline<sp/>state<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[error<sp/>localizedDescription]<sp/>UTF8String];</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>scored_boxes_buffer_<sp/>=<sp/>absl::make_unique&lt;Tensor&gt;(</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor::ElementType::kFloat32,<sp/>Tensor::Shape{1,<sp/>num_boxes_<sp/>*<sp/>2});</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#<sp/>filter<sp/>classes<sp/>supported<sp/>is<sp/>hardware<sp/>dependent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_wg_size<sp/>=<sp/>score_program_.maxTotalThreadsPerThreadgroup;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>gpu_has_enough_work_groups_<sp/>=<sp/>num_classes_<sp/>&lt;<sp/>max_wg_size;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gpu_has_enough_work_groups_)<sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::FailedPreconditionError(absl::StrFormat(</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Hardware<sp/>limitation:<sp/>Processing<sp/>will<sp/>be<sp/>done<sp/>on<sp/>CPU,<sp/>because<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;num_classes<sp/>%d<sp/>exceeds<sp/>the<sp/>max<sp/>work_group<sp/>size<sp/>%d.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_classes_,<sp/>max_wg_size));</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>!defined(MEDIAPIPE_DISABLE_GL_COMPUTE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::OkStatus();</highlight></codeline>
<codeline lineno="1455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TensorsToDetectionsCalculator::IsClassIndexAllowed(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_index)<sp/>{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_index_set_.values.empty())<sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_index_set_.is_allowlist)<sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>class_index_set_.values.contains(class_index);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!class_index_set_.values.contains(class_index);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>api2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mediapipe</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/calculators/tensor/tensors_to_detections_calculator.cc"/>
  </compounddef>
</doxygen>
