<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacemediapipe_1_1internal" kind="namespace" language="C++">
    <compoundname>mediapipe::internal</compoundname>
    <innerclass refid="classmediapipe_1_1internal_1_1Attachment" prot="public">mediapipe::internal::Attachment</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1AttachmentBase" prot="public">mediapipe::internal::AttachmentBase</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1CalculatorBaseFactory" prot="public">mediapipe::internal::CalculatorBaseFactory</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1CalculatorBaseFactoryFor" prot="public">mediapipe::internal::CalculatorBaseFactoryFor</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1CalculatorBaseFactoryFor_3_01T_00_01typename_01std_1_1enable__if_342464ce782e07bc5f12f1e473166b19f" prot="public">mediapipe::internal::CalculatorBaseFactoryFor&lt; T, typename std::enable_if&lt; std::is_base_of&lt; mediapipe::api2::Node, T &gt;{}&gt;::type &gt;</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1CalculatorBaseFactoryFor_3_01T_00_01typename_01std_1_1enable__if_3978b5a77015ad3a9f375a285ae88013f" prot="public">mediapipe::internal::CalculatorBaseFactoryFor&lt; T, typename std::enable_if&lt; std::is_base_of&lt; mediapipe::CalculatorBase, T &gt;{} &amp;&amp;!std::is_base_of&lt; mediapipe::api2::Node, T &gt;{}&gt;::type &gt;</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1Collection" prot="public">mediapipe::internal::Collection</innerclass>
    <innerclass refid="structmediapipe_1_1internal_1_1CollectionErrorHandlerFatal" prot="public">mediapipe::internal::CollectionErrorHandlerFatal</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1DelegatingExecutor" prot="public">mediapipe::internal::DelegatingExecutor</innerclass>
    <innerclass refid="structmediapipe_1_1internal_1_1ForceStaticInstantiation" prot="public">mediapipe::internal::ForceStaticInstantiation</innerclass>
    <innerclass refid="structmediapipe_1_1internal_1_1GpuBufferSpec" prot="public">mediapipe::internal::GpuBufferSpec</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1GpuBufferStorage" prot="public">mediapipe::internal::GpuBufferStorage</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1GpuBufferStorageImpl" prot="public">mediapipe::internal::GpuBufferStorageImpl</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1GpuBufferStorageRegistry" prot="public">mediapipe::internal::GpuBufferStorageRegistry</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1GraphOutputStream" prot="public">mediapipe::internal::GraphOutputStream</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1OutputStreamObserver" prot="public">mediapipe::internal::OutputStreamObserver</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1OutputStreamPollerImpl" prot="public">mediapipe::internal::OutputStreamPollerImpl</innerclass>
    <innerclass refid="structmediapipe_1_1internal_1_1overload__priority" prot="public">mediapipe::internal::overload_priority</innerclass>
    <innerclass refid="structmediapipe_1_1internal_1_1overload__priority_3_010_01_4" prot="public">mediapipe::internal::overload_priority&lt; 0 &gt;</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1QuoteFormatter" prot="public">mediapipe::internal::QuoteFormatter</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1Scheduler" prot="public">mediapipe::internal::Scheduler</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1SchedulerQueue" prot="public">mediapipe::internal::SchedulerQueue</innerclass>
    <innerclass refid="structmediapipe_1_1internal_1_1SchedulerShared" prot="public">mediapipe::internal::SchedulerShared</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1SchedulerTimer" prot="public">mediapipe::internal::SchedulerTimer</innerclass>
    <innerclass refid="structmediapipe_1_1internal_1_1SchedulerTimes" prot="public">mediapipe::internal::SchedulerTimes</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1StaticAccessToGenerator" prot="public">mediapipe::internal::StaticAccessToGenerator</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1StaticAccessToGeneratorTyped" prot="public">mediapipe::internal::StaticAccessToGeneratorTyped</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1StaticAccessToStatusHandler" prot="public">mediapipe::internal::StaticAccessToStatusHandler</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1StaticAccessToStatusHandlerTyped" prot="public">mediapipe::internal::StaticAccessToStatusHandlerTyped</innerclass>
    <innerclass refid="structmediapipe_1_1internal_1_1TypeIdFormatter" prot="public">mediapipe::internal::TypeIdFormatter</innerclass>
    <innerclass refid="structmediapipe_1_1internal_1_1types" prot="public">mediapipe::internal::types</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1ViewProvider" prot="public">mediapipe::internal::ViewProvider</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1ViewProvider_3_01FrameBuffer_01_4" prot="public">mediapipe::internal::ViewProvider&lt; FrameBuffer &gt;</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1ViewProvider_3_01GlTextureView_01_4" prot="private">mediapipe::internal::ViewProvider&lt; GlTextureView &gt;</innerclass>
    <innerclass refid="classmediapipe_1_1internal_1_1ViewProvider_3_01ImageFrame_01_4" prot="public">mediapipe::internal::ViewProvider&lt; ImageFrame &gt;</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="collection_8h_1a130acfd70612a67bbe47ee07c44527fe" prot="public" static="no" strong="yes">
        <type></type>
        <name>CollectionStorage</name>
        <qualifiedname>mediapipe::internal::CollectionStorage</qualifiedname>
        <enumvalue id="collection_8h_1a130acfd70612a67bbe47ee07c44527feabac4f1a22b713d2bc2533f4d2df70226" prot="public">
          <name>kStoreValue</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="collection_8h_1a130acfd70612a67bbe47ee07c44527fea8e962889d5b5a8f2b1022f0be5f9adea" prot="public">
          <name>kStorePointer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/collection.h" line="61" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/collection.h" bodystart="61" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="packet__generator_8h_1ae154e577ed253c607a25a99cf64ac925" prot="public" static="no">
        <type>GlobalFactoryRegistry&lt; std::unique_ptr&lt; StaticAccessToGenerator &gt; &gt;</type>
        <definition>using mediapipe::internal::StaticAccessToGeneratorRegistry = typedef GlobalFactoryRegistry&lt;std::unique_ptr&lt;StaticAccessToGenerator&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>StaticAccessToGeneratorRegistry</name>
        <qualifiedname>mediapipe::internal::StaticAccessToGeneratorRegistry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_generator.h" line="83" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_generator.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="status__handler_8h_1ab27c58f414ef4936d7dec39226526d8e" prot="public" static="no">
        <type>GlobalFactoryRegistry&lt; std::unique_ptr&lt; StaticAccessToStatusHandler &gt; &gt;</type>
        <definition>using mediapipe::internal::StaticAccessToStatusHandlerRegistry = typedef GlobalFactoryRegistry&lt;std::unique_ptr&lt;StaticAccessToStatusHandler&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>StaticAccessToStatusHandlerRegistry</name>
        <qualifiedname>mediapipe::internal::StaticAccessToStatusHandlerRegistry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h" line="105" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="attachments_8h_1ae6a4cda9ddd3382636ca16cbc79aa741" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; T, std::function&lt; void(void *)&gt; &gt;</type>
        <definition>using mediapipe::internal::AttachmentPtr = typedef std::unique_ptr&lt;T, std::function&lt;void(void*)&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>AttachmentPtr</name>
        <qualifiedname>mediapipe::internal::AttachmentPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/attachments.h" line="12" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/attachments.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gpu__buffer__storage_8cc_1aada0a7240354d1515d2c0a7085ab1e81" prot="public" static="no">
        <type>GpuBufferStorageRegistry::StorageFactory</type>
        <definition>using mediapipe::internal::StorageFactory = typedef GpuBufferStorageRegistry::StorageFactory</definition>
        <argsstring></argsstring>
        <name>StorageFactory</name>
        <qualifiedname>mediapipe::internal::StorageFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.cc" line="6" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.cc" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gpu__buffer__storage_8cc_1acaa950fe8b212085cdc62cd720f8628d" prot="public" static="no">
        <type>GpuBufferStorageRegistry::StorageConverter</type>
        <definition>using mediapipe::internal::StorageConverter = typedef GpuBufferStorageRegistry::StorageConverter</definition>
        <argsstring></argsstring>
        <name>StorageConverter</name>
        <qualifiedname>mediapipe::internal::StorageConverter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.cc" line="7" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.cc" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gpu__buffer__storage_8cc_1ab11a8322afc70441c2dd052fcf4cb8ac" prot="public" static="no">
        <type>GpuBufferStorageRegistry::RegistryToken</type>
        <definition>using mediapipe::internal::RegistryToken = typedef GpuBufferStorageRegistry::RegistryToken</definition>
        <argsstring></argsstring>
        <name>RegistryToken</name>
        <qualifiedname>mediapipe::internal::RegistryToken</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.cc" line="8" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.cc" bodystart="8" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="validate__name_8h_1a7ff0b250ab06baa9eab9672fad644478" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int mediapipe::internal::kMaxCollectionItemId</definition>
        <argsstring></argsstring>
        <name>kMaxCollectionItemId</name>
        <qualifiedname>mediapipe::internal::kMaxCollectionItemId</qualifiedname>
        <initializer>= 10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/validate_name.h" line="31" column="15" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/validate_name.h" bodystart="31" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="calculator__base_8h_1a506f3853bb1b632fd7a5e2e46cea3150" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool mediapipe::internal::CalculatorHasGetContract</definition>
        <argsstring>(decltype(&amp;T::GetContract))</argsstring>
        <name>CalculatorHasGetContract</name>
        <qualifiedname>mediapipe::internal::CalculatorHasGetContract</qualifiedname>
        <param>
          <type>decltype &amp;::GetContract</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_base.h" line="191" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_base.h" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="calculator__base_8h_1a04117f006bc898917468c7e88f62283e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool mediapipe::internal::CalculatorHasGetContract</definition>
        <argsstring>(...)</argsstring>
        <name>CalculatorHasGetContract</name>
        <qualifiedname>mediapipe::internal::CalculatorHasGetContract</qualifiedname>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_base.h" line="196" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/calculator_base.h" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="deps_2threadpool_8h_1a5f26b0ce1a5ec076d3af84219f2aa084" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mediapipe::internal::CreateThreadName</definition>
        <argsstring>(const std::string &amp;prefix, int thread_id)</argsstring>
        <name>CreateThreadName</name>
        <qualifiedname>mediapipe::internal::CreateThreadName</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/threadpool_pthread_impl.cc" line="193" column="13" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/threadpool_pthread_impl.cc" bodystart="193" bodyend="200" declfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/deps/threadpool.h" declline="111" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="packet__generator_8h_1aaa91c418b9bfccc21855050d05b16c55" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool mediapipe::internal::PacketGeneratorHasFillExpectations</definition>
        <argsstring>(decltype(&amp;T::FillExpectations))</argsstring>
        <name>PacketGeneratorHasFillExpectations</name>
        <qualifiedname>mediapipe::internal::PacketGeneratorHasFillExpectations</qualifiedname>
        <param>
          <type>decltype &amp;::FillExpectations</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_generator.h" line="89" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_generator.h" bodystart="89" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="packet__generator_8h_1a6b9cff2df3a91ee158fe09ced82bd168" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool mediapipe::internal::PacketGeneratorHasFillExpectations</definition>
        <argsstring>(...)</argsstring>
        <name>PacketGeneratorHasFillExpectations</name>
        <qualifiedname>mediapipe::internal::PacketGeneratorHasFillExpectations</qualifiedname>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_generator.h" line="99" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_generator.h" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="packet__generator_8h_1abbbb681171d2893724fedf9fd3ce5141" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool mediapipe::internal::PacketGeneratorHasGenerate</definition>
        <argsstring>(decltype(&amp;T::Generate))</argsstring>
        <name>PacketGeneratorHasGenerate</name>
        <qualifiedname>mediapipe::internal::PacketGeneratorHasGenerate</qualifiedname>
        <param>
          <type>decltype &amp;::Generate</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_generator.h" line="103" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_generator.h" bodystart="103" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="packet__generator_8h_1ae844b988318a940ca008474c9f26c679" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool mediapipe::internal::PacketGeneratorHasGenerate</definition>
        <argsstring>(...)</argsstring>
        <name>PacketGeneratorHasGenerate</name>
        <qualifiedname>mediapipe::internal::PacketGeneratorHasGenerate</qualifiedname>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_generator.h" line="111" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_generator.h" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="packet__type_8cc_1adc6a3e30ae81e303e11dad7b41924c27" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Formatter</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>mediapipe::internal::QuoteFormatter</definition>
        <argsstring>(Formatter f) -&gt; QuoteFormatter&lt; Formatter &gt;</argsstring>
        <name>QuoteFormatter</name>
        <qualifiedname>mediapipe::internal::QuoteFormatter</qualifiedname>
        <param>
          <type>Formatter</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_type.cc" line="167" column="10" declfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/packet_type.cc" declline="167" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="status__handler_8h_1a7bc9c38c813caeafa16b124782f27ec5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool mediapipe::internal::StatusHandlerHasFillExpectations</definition>
        <argsstring>(decltype(&amp;T::FillExpectations))</argsstring>
        <name>StatusHandlerHasFillExpectations</name>
        <qualifiedname>mediapipe::internal::StatusHandlerHasFillExpectations</qualifiedname>
        <param>
          <type>decltype &amp;::FillExpectations</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h" line="111" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h" bodystart="111" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="status__handler_8h_1a2bbdc88816d1a71a64f0c21cf8eadeee" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool mediapipe::internal::StatusHandlerHasFillExpectations</definition>
        <argsstring>(...)</argsstring>
        <name>StatusHandlerHasFillExpectations</name>
        <qualifiedname>mediapipe::internal::StatusHandlerHasFillExpectations</qualifiedname>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h" line="120" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="status__handler_8h_1a316c49d78db89a043bc6c10c4608ebf6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool mediapipe::internal::StatusHandlerHasHandlePreRunStatus</definition>
        <argsstring>(decltype(&amp;T::HandlePreRunStatus))</argsstring>
        <name>StatusHandlerHasHandlePreRunStatus</name>
        <qualifiedname>mediapipe::internal::StatusHandlerHasHandlePreRunStatus</qualifiedname>
        <param>
          <type>decltype &amp;::HandlePreRunStatus</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h" line="124" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h" bodystart="124" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="status__handler_8h_1a4a9e44ac8ce2ca0fe34821726fc79378" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool mediapipe::internal::StatusHandlerHasHandleStatus</definition>
        <argsstring>(decltype(&amp;T::HandleStatus))</argsstring>
        <name>StatusHandlerHasHandleStatus</name>
        <qualifiedname>mediapipe::internal::StatusHandlerHasHandleStatus</qualifiedname>
        <param>
          <type>decltype &amp;::HandleStatus</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h" line="133" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h" bodystart="133" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="status__handler_8h_1a4ac024f15d7d4ec57d4eb2ddb3a610ed" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool mediapipe::internal::StatusHandlerHasHandleStatus</definition>
        <argsstring>(...)</argsstring>
        <name>StatusHandlerHasHandleStatus</name>
        <qualifiedname>mediapipe::internal::StatusHandlerHasHandleStatus</qualifiedname>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h" line="141" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/status_handler.h" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="attachments_8h_1a7f3cc0448e5cc68ea73dfba16fa23861" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt;!std::is_array&lt; T &gt;::value, AttachmentPtr&lt; T &gt; &gt;</type>
        <definition>static std::enable_if_t&lt;!std::is_array&lt; T &gt;::value, AttachmentPtr&lt; T &gt; &gt; mediapipe::internal::MakeAttachmentPtr</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>MakeAttachmentPtr</name>
        <qualifiedname>mediapipe::internal::MakeAttachmentPtr</qualifiedname>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/attachments.h" line="17" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/attachments.h" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="gpu__buffer__format_8h_1a431e1d791bd997f079a19b0152bac97a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::internal::operator==</definition>
        <argsstring>(const GpuBufferSpec &amp;lhs, const GpuBufferSpec &amp;rhs)</argsstring>
        <name>operator==</name>
        <qualifiedname>mediapipe::internal::operator==</qualifiedname>
        <param>
          <type>const GpuBufferSpec &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const GpuBufferSpec &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_format.h" line="197" column="13" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_format.h" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="gpu__buffer__format_8h_1ae15d7d6b28ebf067a212352430c608f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::internal::operator!=</definition>
        <argsstring>(const GpuBufferSpec &amp;lhs, const GpuBufferSpec &amp;rhs)</argsstring>
        <name>operator!=</name>
        <qualifiedname>mediapipe::internal::operator!=</qualifiedname>
        <param>
          <type>const GpuBufferSpec &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const GpuBufferSpec &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_format.h" line="201" column="13" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_format.h" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="resource__util__default_8cc_1ae68e696a06e2ddd353ba55477311dca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::internal::DefaultGetResourceContents</definition>
        <argsstring>(const std::string &amp;path, std::string *output, bool read_as_binary)</argsstring>
        <name>DefaultGetResourceContents</name>
        <qualifiedname>mediapipe::internal::DefaultGetResourceContents</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>read_as_binary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/util/resource_util_default.cc" line="34" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/util/resource_util_default.cc" bodystart="34" bodyend="38" declfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/util/resource_util_internal.h" declline="13" declcolumn="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/node.h" line="28" column="1"/>
  </compounddef>
</doxygen>
