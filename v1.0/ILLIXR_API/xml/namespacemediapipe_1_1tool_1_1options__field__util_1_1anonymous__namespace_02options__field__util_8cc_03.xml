<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03" kind="namespace" language="C++">
    <compoundname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}</compoundname>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1af1689027a5bbdcdeba4ca1747bc0fec2" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr absl::string_view</type>
        <definition>constexpr absl::string_view mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::kGoogleProtobufAny</definition>
        <argsstring></argsstring>
        <name>kGoogleProtobufAny</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::kGoogleProtobufAny</qualifiedname>
        <initializer>= &quot;google.protobuf.Any&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="35" column="29" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="35" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1a02e359af00ad20b7e0dd03261c3caa7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FieldType</type>
        <definition>FieldType mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::AsFieldType</definition>
        <argsstring>(proto_ns::FieldDescriptorProto::Type type)</argsstring>
        <name>AsFieldType</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::AsFieldType</qualifiedname>
        <param>
          <type>proto_ns::FieldDescriptorProto::Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="38" column="11" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1a9408855cd1af8c05e6c1dd7e51419d4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::WriteField</definition>
        <argsstring>(const FieldData &amp;packet, const FieldDescriptor *field, std::string *result)</argsstring>
        <name>WriteField</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::WriteField</qualifiedname>
        <param>
          <type>const FieldData &amp;</type>
          <declname>packet</declname>
        </param>
        <param>
          <type>const FieldDescriptor *</type>
          <declname>field</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="43" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1a1c8c85fad3e3d8cffc4fc74a68b64fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::ReadField</definition>
        <argsstring>(absl::string_view bytes, const FieldDescriptor &amp;field, FieldData *result)</argsstring>
        <name>ReadField</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::ReadField</qualifiedname>
        <param>
          <type>absl::string_view</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>const FieldDescriptor &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type>FieldData *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="49" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1a7dc4290adc89da3b8fffa285734fc092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::StatusOr&lt; std::vector&lt; FieldData &gt; &gt;</type>
        <definition>absl::StatusOr&lt; std::vector&lt; FieldData &gt; &gt; mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::GetFieldValues</definition>
        <argsstring>(const FieldData &amp;message_data, const FieldDescriptor &amp;field)</argsstring>
        <name>GetFieldValues</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::GetFieldValues</qualifiedname>
        <param>
          <type>const FieldData &amp;</type>
          <declname>message_data</declname>
        </param>
        <param>
          <type>const FieldDescriptor &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="58" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="58" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1a6c501bba19dc9d806764e6e0a93e9d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::GetFieldValue</definition>
        <argsstring>(const FieldData &amp;message_data, const FieldPathEntry &amp;entry, FieldData *result)</argsstring>
        <name>GetFieldValue</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::GetFieldValue</qualifiedname>
        <param>
          <type>const FieldData &amp;</type>
          <declname>message_data</declname>
        </param>
        <param>
          <type>const FieldPathEntry &amp;</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>FieldData *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="78" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="78" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1a4c9109f0a8234e8e91c62028764d2b43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::SetFieldValue</definition>
        <argsstring>(FieldData &amp;result, const FieldPathEntry &amp;entry, const FieldData &amp;value)</argsstring>
        <name>SetFieldValue</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::SetFieldValue</qualifiedname>
        <param>
          <type>FieldData &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const FieldPathEntry &amp;</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>const FieldData &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="93" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="93" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1aa559bf8a3645a953a64515632647bc17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::SetFieldValues</definition>
        <argsstring>(FieldData &amp;result, const FieldPathEntry &amp;entry, const std::vector&lt; FieldData &gt; &amp;values)</argsstring>
        <name>SetFieldValues</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::SetFieldValues</qualifiedname>
        <param>
          <type>FieldData &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const FieldPathEntry &amp;</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>const std::vector&lt; FieldData &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="117" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="117" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1a7444cbf03a4a7bc84a787bda69a3d8c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::IsProtobufAny</definition>
        <argsstring>(const FieldDescriptor *field)</argsstring>
        <name>IsProtobufAny</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::IsProtobufAny</qualifiedname>
        <param>
          <type>const FieldDescriptor *</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="144" column="6" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1a3ed7b230d869723dfb1ca7de72fa7a29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FieldData</type>
        <definition>FieldData mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::ParseProtobufAny</definition>
        <argsstring>(const FieldData &amp;data)</argsstring>
        <name>ParseProtobufAny</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::ParseProtobufAny</qualifiedname>
        <param>
          <type>const FieldData &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="150" column="11" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="150" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1a9744d4c2fd9d748f695bef98e8eaf779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FieldData</type>
        <definition>FieldData mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::SerializeProtobufAny</definition>
        <argsstring>(const FieldData &amp;data)</argsstring>
        <name>SerializeProtobufAny</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::SerializeProtobufAny</qualifiedname>
        <param>
          <type>const FieldData &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="160" column="11" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="160" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1adea29b5d46d3c0f73e8112d0aa5ae5c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusOr&lt; int &gt;</type>
        <definition>StatusOr&lt; int &gt; mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::FindExtensionIndex</definition>
        <argsstring>(const FieldData &amp;message_data, FieldPathEntry *entry)</argsstring>
        <name>FindExtensionIndex</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::FindExtensionIndex</qualifiedname>
        <param>
          <type>const FieldData &amp;</type>
          <declname>message_data</declname>
        </param>
        <param>
          <type>FieldPathEntry *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="171" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="171" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1a07630174e480b7f4d0ebe1c06719bca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::HasField</definition>
        <argsstring>(const FieldPath &amp;field_path, const FieldData &amp;message_data)</argsstring>
        <name>HasField</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::HasField</qualifiedname>
        <param>
          <type>const FieldPath &amp;</type>
          <declname>field_path</declname>
        </param>
        <param>
          <type>const FieldData &amp;</type>
          <declname>message_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="191" column="6" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1ad0de2bd65f6583c9e9f6b9c00d08c06e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const FieldDescriptor *</type>
        <definition>const FieldDescriptor * mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::FindExtensionField</definition>
        <argsstring>(const FieldData &amp;message_data, absl::string_view extension_type)</argsstring>
        <name>FindExtensionField</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::FindExtensionField</qualifiedname>
        <param>
          <type>const FieldData &amp;</type>
          <declname>message_data</declname>
        </param>
        <param>
          <type>absl::string_view</type>
          <declname>extension_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="198" column="23" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="198" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1tool_1_1options__field__util_1_1anonymous__namespace_02options__field__util_8cc_03_1a413ce95872666941d526556cab832671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::SetOptionsMessage</definition>
        <argsstring>(const FieldData &amp;node_options, proto_ns::RepeatedPtrField&lt; mediapipe::protobuf::Any &gt; *result)</argsstring>
        <name>SetOptionsMessage</name>
        <qualifiedname>mediapipe::tool::options_field_util::anonymous_namespace{options_field_util.cc}::SetOptionsMessage</qualifiedname>
        <param>
          <type>const FieldData &amp;</type>
          <declname>node_options</declname>
        </param>
        <param>
          <type>proto_ns::RepeatedPtrField&lt; mediapipe::protobuf::Any &gt; *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="216" column="6" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" bodystart="216" bodyend="230"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/tool/options_field_util.cc" line="32" column="1"/>
  </compounddef>
</doxygen>
