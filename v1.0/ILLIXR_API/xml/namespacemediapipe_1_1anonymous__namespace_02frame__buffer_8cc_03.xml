<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacemediapipe_1_1anonymous__namespace_02frame__buffer_8cc_03" kind="namespace" language="C++">
    <compoundname>mediapipe::anonymous_namespace{frame_buffer.cc}</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02frame__buffer_8cc_03_1a0c18c22a3b3f457e673c6f9b0338676d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::anonymous_namespace{frame_buffer.cc}::IsSupportedYuvFormat</definition>
        <argsstring>(FrameBuffer::Format format)</argsstring>
        <name>IsSupportedYuvFormat</name>
        <qualifiedname>mediapipe::anonymous_namespace{frame_buffer.cc}::IsSupportedYuvFormat</qualifiedname>
        <param>
          <type>FrameBuffer::Format</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/frame_buffer.cc" line="26" column="6" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/frame_buffer.cc" bodystart="26" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02frame__buffer_8cc_03_1a70775caed3438e632a895b4c36cc4017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::StatusOr&lt; FrameBuffer::YuvData &gt;</type>
        <definition>absl::StatusOr&lt; FrameBuffer::YuvData &gt; mediapipe::anonymous_namespace{frame_buffer.cc}::GetYuvDataFromOnePlaneFrameBuffer</definition>
        <argsstring>(const FrameBuffer &amp;source)</argsstring>
        <name>GetYuvDataFromOnePlaneFrameBuffer</name>
        <qualifiedname>mediapipe::anonymous_namespace{frame_buffer.cc}::GetYuvDataFromOnePlaneFrameBuffer</qualifiedname>
        <param>
          <type>const FrameBuffer &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/frame_buffer.cc" line="34" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/frame_buffer.cc" bodystart="34" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02frame__buffer_8cc_03_1adaf3323a518c4ab35a8dff367cb21f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::StatusOr&lt; FrameBuffer::YuvData &gt;</type>
        <definition>absl::StatusOr&lt; FrameBuffer::YuvData &gt; mediapipe::anonymous_namespace{frame_buffer.cc}::GetYuvDataFromTwoPlaneFrameBuffer</definition>
        <argsstring>(const FrameBuffer &amp;source)</argsstring>
        <name>GetYuvDataFromTwoPlaneFrameBuffer</name>
        <qualifiedname>mediapipe::anonymous_namespace{frame_buffer.cc}::GetYuvDataFromTwoPlaneFrameBuffer</qualifiedname>
        <param>
          <type>const FrameBuffer &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/frame_buffer.cc" line="86" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/frame_buffer.cc" bodystart="86" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="namespacemediapipe_1_1anonymous__namespace_02frame__buffer_8cc_03_1a26f7f810006cee059134483f870573ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::StatusOr&lt; FrameBuffer::YuvData &gt;</type>
        <definition>absl::StatusOr&lt; FrameBuffer::YuvData &gt; mediapipe::anonymous_namespace{frame_buffer.cc}::GetYuvDataFromThreePlaneFrameBuffer</definition>
        <argsstring>(const FrameBuffer &amp;source)</argsstring>
        <name>GetYuvDataFromThreePlaneFrameBuffer</name>
        <qualifiedname>mediapipe::anonymous_namespace{frame_buffer.cc}::GetYuvDataFromThreePlaneFrameBuffer</qualifiedname>
        <param>
          <type>const FrameBuffer &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/frame_buffer.cc" line="119" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/frame_buffer.cc" bodystart="119" bodyend="154"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/formats/frame_buffer.cc" line="23" column="1"/>
  </compounddef>
</doxygen>
