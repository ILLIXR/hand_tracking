<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmediapipe_1_1api2_1_1InputShardOrSideAccess" kind="class" language="C++" prot="public">
    <compoundname>mediapipe::api2::InputShardOrSideAccess</compoundname>
    <basecompoundref prot="public" virt="non-virtual">mediapipe::api2::Packet&lt; T &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1adf70c3b3e1dd23ae25d40f78ff34ec38" prot="private" static="no" mutable="no">
        <type>InputStreamShard *</type>
        <definition>InputStreamShard* mediapipe::api2::InputShardOrSideAccess&lt; T &gt;::stream_</definition>
        <argsstring></argsstring>
        <name>stream_</name>
        <qualifiedname>mediapipe::api2::InputShardOrSideAccess::stream_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="703" column="20" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1afd96c5a9d9331fd5462a92109c622b15" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mediapipe::api2::InputShardOrSideAccess&lt; T &gt;::connected_</definition>
        <argsstring></argsstring>
        <name>connected_</name>
        <qualifiedname>mediapipe::api2::InputShardOrSideAccess::connected_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="704" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="704" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1a5214f4784cc4ebfe85635ab0761ce4e7" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>const PacketBase &amp;</type>
        <definition>const PacketBase &amp; mediapipe::api2::InputShardOrSideAccess&lt; T &gt;::packet</definition>
        <argsstring>() const &amp;</argsstring>
        <name>packet</name>
        <qualifiedname>mediapipe::api2::InputShardOrSideAccess::packet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="686" column="20" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="686" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1a39f230cba084a2974ca3c80f7e021a50" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>PacketBase</type>
        <definition>PacketBase mediapipe::api2::InputShardOrSideAccess&lt; T &gt;::packet</definition>
        <argsstring>() const &amp;&amp;</argsstring>
        <name>packet</name>
        <qualifiedname>mediapipe::api2::InputShardOrSideAccess::packet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="687" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="687" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1a4e234cc7dc39e111823c1ec8314a3eae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::api2::InputShardOrSideAccess&lt; T &gt;::IsDone</definition>
        <argsstring>() const</argsstring>
        <name>IsDone</name>
        <qualifiedname>mediapipe::api2::InputShardOrSideAccess::IsDone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="689" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="689" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1a20e90cb59e37e5add3a52e796c9f8700" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::api2::InputShardOrSideAccess&lt; T &gt;::IsConnected</definition>
        <argsstring>() const</argsstring>
        <name>IsConnected</name>
        <qualifiedname>mediapipe::api2::InputShardOrSideAccess::IsConnected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="690" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="690" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1aacaf8f48744f300392498f0a8421390d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mediapipe::api2::InputShardOrSideAccess&lt; T &gt;::IsStream</definition>
        <argsstring>() const</argsstring>
        <name>IsStream</name>
        <qualifiedname>mediapipe::api2::InputShardOrSideAccess::IsStream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="691" column="8" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="691" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1aaffa8343970de0001de734a9a13882fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PacketBase</type>
        <definition>PacketBase mediapipe::api2::InputShardOrSideAccess&lt; T &gt;::Header</definition>
        <argsstring>() const</argsstring>
        <name>Header</name>
        <qualifiedname>mediapipe::api2::InputShardOrSideAccess::Header</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="693" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="693" bodyend="693"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1a9f2c0a9e31fd9cf70228de5043c9fb63" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::api2::InputShardOrSideAccess&lt; T &gt;::InputShardOrSideAccess</definition>
        <argsstring>(const CalculatorContext &amp;, InputStreamShard *stream, const mediapipe::Packet *packet)</argsstring>
        <name>InputShardOrSideAccess</name>
        <qualifiedname>mediapipe::api2::InputShardOrSideAccess::InputShardOrSideAccess</qualifiedname>
        <param>
          <type>const CalculatorContext &amp;</type>
        </param>
        <param>
          <type>InputStreamShard *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const mediapipe::Packet *</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="696" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="696" bodyend="702"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1a94466b7d177288a4c46a60c0428f8310" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>InputShardOrSideAccess&lt; T &gt;</type>
        <definition>InputShardOrSideAccess&lt; T &gt; internal::SinglePortAccess</definition>
        <argsstring>(mediapipe::CalculatorContext *, InputStreamShard *, const mediapipe::Packet *)</argsstring>
        <name>internal::SinglePortAccess</name>
        <qualifiedname>mediapipe::api2::InputShardOrSideAccess::SinglePortAccess</qualifiedname>
        <param>
          <type>mediapipe::CalculatorContext *</type>
        </param>
        <param>
          <type>InputStreamShard *</type>
        </param>
        <param>
          <type>const mediapipe::Packet *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="706" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" line="684" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/port.h" bodystart="684" bodyend="709"/>
    <listofallmembers>
      <member refid="classmediapipe_1_1api2_1_1Packet_1af2eb93c651e4277522c5fbf1d6e4c24f" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>At</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1aea3a0717b75567709dd16bde76484e83" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>At</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1afd96c5a9d9331fd5462a92109c622b15" prot="private" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>connected_</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1a73d30836719cec9b48bb0a462832af34" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>Consume</name></member>
      <member refid="classmediapipe_1_1Packet_1ab35adcfdae3312b0b6a5955c589ac55a" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>ConsumeOrCopy</name></member>
      <member refid="classmediapipe_1_1Packet_1a561614e3288d5d53f9acc0a7164b6dd1" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>ConsumeOrCopy</name></member>
      <member refid="classmediapipe_1_1Packet_1aeb56ee77a22e887c3763208b0065a2ed" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>ConsumeOrCopy</name></member>
      <member refid="classmediapipe_1_1Packet_1a0627f0fbd9e124a8d201b33d5856c63f" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>DebugString</name></member>
      <member refid="classmediapipe_1_1Packet_1aaa404549082464a31fab7c9775d85019" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>DebugTypeName</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1a442beb81374e239eb7f4fe817c6b87e2" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>Get</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1a729553fa1e3fa16a9a185521017a6678" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>GetOr</name></member>
      <member refid="classmediapipe_1_1Packet_1ad22b4546494896be7ea07f40845bd425" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>GetProtoMessageLite</name></member>
      <member refid="classmediapipe_1_1Packet_1a318eef50fb446646f9b8650c73521d60" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>GetTypeId</name></member>
      <member refid="classmediapipe_1_1Packet_1a03945a9fdd61d3e84a9bf24cd688d386" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>GetVectorOfProtoMessageLitePtrs</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1aaffa8343970de0001de734a9a13882fb" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>Header</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1a9f2c0a9e31fd9cf70228de5043c9fb63" prot="private" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>InputShardOrSideAccess</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1a94466b7d177288a4c46a60c0428f8310" prot="private" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>internal::SinglePortAccess</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1a20e90cb59e37e5add3a52e796c9f8700" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>IsConnected</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1a4e234cc7dc39e111823c1ec8314a3eae" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>IsDone</name></member>
      <member refid="classmediapipe_1_1Packet_1ae90e065151b6c857aa9bb3c9db951ca2" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>IsEmpty</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1aacaf8f48744f300392498f0a8421390d" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>IsStream</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1a956d62eb47752cce2ee3883b734491db" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>operator*</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1a7bc7b7442bcb35d2cae8ac4c42977206" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>operator-&gt;</name></member>
      <member refid="classmediapipe_1_1Packet_1aa02795edd37c8d8712545b7ba33d7ded" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1Packet_1a1de447a6116a0e1bd0c02c77e73d89fd" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>operator=</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1a5214f4784cc4ebfe85635ab0761ce4e7" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>packet</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1a39f230cba084a2974ca3c80f7e021a50" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>packet</name></member>
      <member refid="classmediapipe_1_1api2_1_1Packet_1ab51d868101a00de691e65e7d20384e40" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1Packet_1ae4c2120527d85809cb8e094cc5f5e82b" prot="public" virt="non-virtual" ambiguityscope="mediapipe::Packet::"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1Packet_1aaa5a7957cb3a943e6b6caea780ea7e6f" prot="public" virt="non-virtual" ambiguityscope="mediapipe::Packet::"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>Packet</name></member>
      <member refid="classmediapipe_1_1Packet_1a95df7b7a403bf0a5da3920fb8922080a" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>RegisteredTypeName</name></member>
      <member refid="classmediapipe_1_1api2_1_1InputShardOrSideAccess_1adf70c3b3e1dd23ae25d40f78ff34ec38" prot="private" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>stream_</name></member>
      <member refid="classmediapipe_1_1Packet_1a84895fb61cd280d59b8df4cab9afe3ba" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>Timestamp</name></member>
      <member refid="classmediapipe_1_1Packet_1ade7cd267df98a8f0297d9a7d9f93d28a" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>ValidateAsProtoMessageLite</name></member>
      <member refid="classmediapipe_1_1Packet_1ae2fec6fa30c3c61e18bd89a1c55b33fb" prot="public" virt="non-virtual"><scope>mediapipe::api2::InputShardOrSideAccess</scope><name>ValidateAsType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
