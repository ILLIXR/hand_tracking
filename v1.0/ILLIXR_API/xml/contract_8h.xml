<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="contract_8h" kind="file" language="C++">
    <compoundname>contract.h</compoundname>
    <includes local="no">tuple</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="yes">mediapipe/framework/api2/const_str.h</includes>
    <includes local="yes">mediapipe/framework/api2/packet.h</includes>
    <includes local="yes">mediapipe/framework/api2/port.h</includes>
    <includes local="yes">mediapipe/framework/api2/tag.h</includes>
    <includes local="yes">mediapipe/framework/api2/tuple.h</includes>
    <includes refid="calculator__context_8h" local="yes">mediapipe/framework/calculator_context.h</includes>
    <includes refid="calculator__contract_8h" local="yes">mediapipe/framework/calculator_contract.h</includes>
    <includes refid="output__side__packet_8h" local="yes">mediapipe/framework/output_side_packet.h</includes>
    <includes refid="logging_8h" local="yes">mediapipe/framework/port/logging.h</includes>
    <includes refid="unused_8hpp" local="yes">mediapipe/util/unused.hpp</includes>
    <incdepgraph>
      <node id="19">
        <label>mediapipe/framework/calculator.pb.h</label>
        <link refid="calculator_8pb_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>mediapipe/framework/calculator_options.pb.h</label>
        <link refid="calculator__options_8pb_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>mediapipe/framework/mediapipe_options.pb.h</label>
        <link refid="mediapipe__options_8pb_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>mediapipe/framework/packet_factory.pb.h</label>
        <link refid="packet__factory_8pb_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>mediapipe/framework/packet_generator.pb.h</label>
        <link refid="packet__generator_8pb_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>mediapipe/framework/status_handler.pb.h</label>
        <link refid="status__handler_8pb_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>mediapipe/framework/stream_handler.pb.h</label>
        <link refid="stream__handler_8pb_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h</label>
        <link refid="contract_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>mediapipe/framework/calculator_context.h</label>
        <link refid="calculator__context_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>mediapipe/framework/calculator_contract.h</label>
        <link refid="calculator__contract_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>mediapipe/framework/calculator_state.h</label>
        <link refid="calculator__state_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>mediapipe/framework/collection.h</label>
        <link refid="collection_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>mediapipe/framework/collection_item_id.h</label>
        <link refid="collection__item__id_8h_source"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>mediapipe/framework/counter.h</label>
        <link refid="counter_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>mediapipe/framework/counter_factory.h</label>
        <link refid="counter__factory_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>mediapipe/framework/demangle.h</label>
        <link refid="demangle_8h_source"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>mediapipe/framework/deps/canonical_errors.h</label>
        <link refid="deps_2canonical__errors_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>mediapipe/framework/deps/map_util.h</label>
        <link refid="deps_2map__util_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>mediapipe/framework/deps/no_destructor.h</label>
        <link refid="no__destructor_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>mediapipe/framework/deps/registration.h</label>
        <link refid="registration_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>mediapipe/framework/deps/registration_token.h</label>
        <link refid="registration__token_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>mediapipe/framework/deps/safe_int.h</label>
        <link refid="safe__int_8h_source"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>mediapipe/framework/deps/source_location.h</label>
        <link refid="deps_2source__location_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>mediapipe/framework/deps/status.h</label>
        <link refid="deps_2status_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>mediapipe/framework/deps/status_builder.h</label>
        <link refid="deps_2status__builder_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>mediapipe/framework/deps/status_macros.h</label>
        <link refid="deps_2status__macros_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>mediapipe/framework/deps/strong_int.h</label>
        <link refid="strong__int_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>mediapipe/framework/graph_service.h</label>
        <link refid="graph__service_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>mediapipe/framework/graph_service_manager.h</label>
        <link refid="graph__service__manager_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>mediapipe/framework/input_stream.h</label>
        <link refid="input__stream_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>mediapipe/framework/input_stream_shard.h</label>
        <link refid="input__stream__shard_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>mediapipe/framework/output_side_packet.h</label>
        <link refid="output__side__packet_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>mediapipe/framework/output_stream.h</label>
        <link refid="output__stream_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>mediapipe/framework/output_stream_shard.h</label>
        <link refid="output__stream__shard_8h_source"/>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>mediapipe/framework/packet.h</label>
        <link refid="packet_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>mediapipe/framework/packet_set.h</label>
        <link refid="packet__set_8h_source"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>mediapipe/framework/packet_type.h</label>
        <link refid="packet__type_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>mediapipe/framework/port.h</label>
        <link refid="port_8h_source"/>
      </node>
      <node id="120">
        <label>mediapipe/framework/port/any_proto.h</label>
        <link refid="any__proto_8h_source"/>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>mediapipe/framework/port/canonical_errors.h</label>
        <link refid="port_2canonical__errors_8h_source"/>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>mediapipe/framework/port/core_proto_inc.h</label>
        <link refid="core__proto__inc_8h_source"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>mediapipe/framework/port/logging.h</label>
        <link refid="logging_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>mediapipe/framework/port/map_util.h</label>
        <link refid="port_2map__util_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>mediapipe/framework/port/port.h</label>
        <link refid="port_2port_8h_source"/>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>mediapipe/framework/port/proto_ns.h</label>
        <link refid="proto__ns_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>mediapipe/framework/port/status.h</label>
        <link refid="port_2status_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>mediapipe/framework/port/status_builder.h</label>
        <link refid="port_2status__builder_8h_source"/>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>mediapipe/framework/port/status_macros.h</label>
        <link refid="port_2status__macros_8h_source"/>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>mediapipe/framework/port/statusor.h</label>
        <link refid="statusor_8h_source"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>mediapipe/framework/timestamp.h</label>
        <link refid="timestamp_8h_source"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>mediapipe/framework/tool/options_map.h</label>
        <link refid="options__map_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>mediapipe/framework/tool/status_util.h</label>
        <link refid="status__util_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>mediapipe/framework/tool/tag_map.h</label>
        <link refid="tag__map_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>mediapipe/framework/tool/tag_map_helper.h</label>
        <link refid="tag__map__helper_8h_source"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>mediapipe/framework/tool/type_util.h</label>
        <link refid="type__util_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>mediapipe/framework/tool/validate_name.h</label>
        <link refid="validate__name_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>mediapipe/framework/type_map.h</label>
        <link refid="type__map_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>mediapipe/util/unused.hpp</label>
        <link refid="unused_8hpp_source"/>
      </node>
      <node id="82">
        <label>absl/base/attributes.h</label>
      </node>
      <node id="18">
        <label>absl/base/macros.h</label>
      </node>
      <node id="100">
        <label>absl/base/port.h</label>
      </node>
      <node id="46">
        <label>absl/base/thread_annotations.h</label>
      </node>
      <node id="114">
        <label>absl/container/btree_map.h</label>
      </node>
      <node id="71">
        <label>absl/container/flat_hash_map.h</label>
      </node>
      <node id="72">
        <label>absl/container/flat_hash_set.h</label>
      </node>
      <node id="15">
        <label>absl/log/absl_check.h</label>
      </node>
      <node id="63">
        <label>absl/log/absl_log.h</label>
      </node>
      <node id="64">
        <label>absl/memory/memory.h</label>
      </node>
      <node id="73">
        <label>absl/meta/type_traits.h</label>
      </node>
      <node id="83">
        <label>absl/status/status.h</label>
      </node>
      <node id="65">
        <label>absl/status/statusor.h</label>
      </node>
      <node id="57">
        <label>absl/strings/has_ostream_operator.h</label>
      </node>
      <node id="61">
        <label>absl/strings/str_cat.h</label>
      </node>
      <node id="74">
        <label>absl/strings/str_join.h</label>
      </node>
      <node id="75">
        <label>absl/strings/str_split.h</label>
      </node>
      <node id="76">
        <label>absl/strings/string_view.h</label>
      </node>
      <node id="47">
        <label>absl/synchronization/mutex.h</label>
      </node>
      <node id="48">
        <label>absl/time/time.h</label>
      </node>
      <node id="128">
        <label>absl/types/span.h</label>
      </node>
      <node id="45">
        <label>algorithm</label>
      </node>
      <node id="95">
        <label>cmath</label>
      </node>
      <node id="55">
        <label>cstddef</label>
      </node>
      <node id="43">
        <label>cstdint</label>
      </node>
      <node id="110">
        <label>cstdlib</label>
      </node>
      <node id="68">
        <label>functional</label>
      </node>
      <node id="58">
        <label>glog/logging.h</label>
      </node>
      <node id="36">
        <label>google/protobuf/any.pb.h</label>
      </node>
      <node id="24">
        <label>google/protobuf/arena.h</label>
      </node>
      <node id="25">
        <label>google/protobuf/arenastring.h</label>
      </node>
      <node id="32">
        <label>google/protobuf/extension_set.h</label>
      </node>
      <node id="33">
        <label>google/protobuf/generated_enum_reflection.h</label>
      </node>
      <node id="29">
        <label>google/protobuf/generated_message_reflection.h</label>
      </node>
      <node id="26">
        <label>google/protobuf/generated_message_table_driven.h</label>
      </node>
      <node id="27">
        <label>google/protobuf/generated_message_util.h</label>
      </node>
      <node id="23">
        <label>google/protobuf/io/coded_stream.h</label>
      </node>
      <node id="116">
        <label>google/protobuf/io/tokenizer.h</label>
      </node>
      <node id="30">
        <label>google/protobuf/message.h</label>
      </node>
      <node id="86">
        <label>google/protobuf/message_lite.h</label>
      </node>
      <node id="28">
        <label>google/protobuf/metadata_lite.h</label>
      </node>
      <node id="21">
        <label>google/protobuf/port_def.inc</label>
      </node>
      <node id="22">
        <label>google/protobuf/port_undef.inc</label>
      </node>
      <node id="31">
        <label>google/protobuf/repeated_field.h</label>
      </node>
      <node id="117">
        <label>google/protobuf/text_format.h</label>
      </node>
      <node id="34">
        <label>google/protobuf/unknown_field_set.h</label>
      </node>
      <node id="81">
        <label>iosfwd</label>
      </node>
      <node id="53">
        <label>iterator</label>
      </node>
      <node id="20">
        <label>limits</label>
      </node>
      <node id="97">
        <label>limits.h</label>
      </node>
      <node id="125">
        <label>list</label>
      </node>
      <node id="17">
        <label>map</label>
      </node>
      <node id="6">
        <label>mediapipe/framework/api2/const_str.h</label>
      </node>
      <node id="7">
        <label>mediapipe/framework/api2/packet.h</label>
      </node>
      <node id="8">
        <label>mediapipe/framework/api2/port.h</label>
      </node>
      <node id="9">
        <label>mediapipe/framework/api2/tag.h</label>
      </node>
      <node id="10">
        <label>mediapipe/framework/api2/tuple.h</label>
      </node>
      <node id="12">
        <label>memory</label>
      </node>
      <node id="56">
        <label>ostream</label>
      </node>
      <node id="13">
        <label>queue</label>
      </node>
      <node id="111">
        <label>set</label>
      </node>
      <node id="90">
        <label>sstream</label>
      </node>
      <node id="52">
        <label>stddef.h</label>
      </node>
      <node id="104">
        <label>stdlib.h</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="2">
        <label>tuple</label>
      </node>
      <node id="3">
        <label>type_traits</label>
      </node>
      <node id="130">
        <label>typeindex</label>
      </node>
      <node id="102">
        <label>typeinfo</label>
      </node>
      <node id="69">
        <label>unordered_map</label>
      </node>
      <node id="70">
        <label>unordered_set</label>
      </node>
      <node id="4">
        <label>utility</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmediapipe_1_1api2_1_1StreamHandler" prot="public">mediapipe::api2::StreamHandler</innerclass>
    <innerclass refid="classmediapipe_1_1api2_1_1TimestampChange" prot="public">mediapipe::api2::TimestampChange</innerclass>
    <innerclass refid="structmediapipe_1_1api2_1_1internal_1_1IsSubclass" prot="private">mediapipe::api2::internal::IsSubclass</innerclass>
    <innerclass refid="structmediapipe_1_1api2_1_1internal_1_1HasProcessMethod" prot="private">mediapipe::api2::internal::HasProcessMethod</innerclass>
    <innerclass refid="structmediapipe_1_1api2_1_1internal_1_1HasProcessMethod_3_01T_00_01std_1_1void__t_3_01decltype_033eb240342e04a20c72dbf8a72195e1a" prot="private">mediapipe::api2::internal::HasProcessMethod&lt; T, std::void_t&lt; decltype(absl::Status(std::declval&lt; std::decay_t&lt; T &gt; &gt;().Process(std::declval&lt; mediapipe::CalculatorContext * &gt;())))&gt; &gt;</innerclass>
    <innerclass refid="structmediapipe_1_1api2_1_1internal_1_1HasNestedItems" prot="private">mediapipe::api2::internal::HasNestedItems</innerclass>
    <innerclass refid="structmediapipe_1_1api2_1_1internal_1_1HasNestedItems_3_01T_00_01std_1_1void__t_3_01decltype_07s99cf8d49d0214e0cab7b8b460dbb8485" prot="private">mediapipe::api2::internal::HasNestedItems&lt; T, std::void_t&lt; decltype(std::declval&lt; std::decay_t&lt; T &gt; &gt;().nested_items())&gt; &gt;</innerclass>
    <innerclass refid="structmediapipe_1_1api2_1_1internal_1_1TagTuple" prot="private">mediapipe::api2::internal::TagTuple</innerclass>
    <innerclass refid="structmediapipe_1_1api2_1_1internal_1_1TagTuple_1_1S" prot="public">mediapipe::api2::internal::TagTuple::S</innerclass>
    <innerclass refid="structmediapipe_1_1api2_1_1internal_1_1TaggedAccess" prot="private">mediapipe::api2::internal::TaggedAccess</innerclass>
    <innerclass refid="classmediapipe_1_1api2_1_1internal_1_1Contract" prot="private">mediapipe::api2::internal::Contract</innerclass>
    <innerclass refid="classmediapipe_1_1api2_1_1internal_1_1TaggedContract" prot="private">mediapipe::api2::internal::TaggedContract</innerclass>
    <innerclass refid="structmediapipe_1_1api2_1_1internal_1_1TaggedContract_1_1GetMember" prot="public">mediapipe::api2::internal::TaggedContract::GetMember</innerclass>
    <innerclass refid="structmediapipe_1_1api2_1_1internal_1_1IsInputPort" prot="private">mediapipe::api2::internal::IsInputPort</innerclass>
    <innerclass refid="structmediapipe_1_1api2_1_1internal_1_1IsOutputPort" prot="private">mediapipe::api2::internal::IsOutputPort</innerclass>
    <innerclass refid="classmediapipe_1_1api2_1_1internal_1_1PortArg" prot="private">mediapipe::api2::internal::PortArg</innerclass>
    <innerclass refid="classmediapipe_1_1api2_1_1internal_1_1OutputSender" prot="private">mediapipe::api2::internal::OutputSender</innerclass>
    <innerclass refid="classmediapipe_1_1api2_1_1internal_1_1FunCaller" prot="private">mediapipe::api2::internal::FunCaller</innerclass>
    <innernamespace refid="namespacemediapipe">mediapipe</innernamespace>
    <innernamespace refid="namespacemediapipe_1_1api2">mediapipe::api2</innernamespace>
    <innernamespace refid="namespacemediapipe_1_1api2_1_1internal">mediapipe::api2::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MEDIAPIPE_FRAMEWORK_API2_CONTRACT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEDIAPIPE_FRAMEWORK_API2_CONTRACT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/api2/const_str.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/api2/packet.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/api2/port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/api2/tag.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/api2/tuple.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/calculator_context.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/calculator_contract.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/output_side_packet.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/framework/port/logging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mediapipe/util/unused.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mediapipe<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">api2<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StreamHandler<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>StreamHandler(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>(&amp;name)[N])<sp/>:<sp/>name_(N,<sp/>name)<sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>const_str&amp;<sp/>name()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name_;<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>absl::Status<sp/>AddToContract(CalculatorContract*<sp/>cc)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>cc-&gt;SetInputStreamHandler(name_.data());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>const_str<sp/>name_;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TimestampChange<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>we<sp/>don&apos;t<sp/>use<sp/>TimestampDiff<sp/>as<sp/>an<sp/>argument<sp/>because<sp/>it&apos;s<sp/>not<sp/>constexpr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>TimestampChange<sp/>Offset(int64_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TimestampChange(offset);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>TimestampChange<sp/>Arbitrary()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>value<sp/>as<sp/>used<sp/>for<sp/>Timestamp::Unset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TimestampChange(kUnset);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>absl::Status<sp/>AddToContract(CalculatorContract*<sp/>cc)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset_<sp/>!=<sp/>kUnset)<sp/>cc-&gt;SetTimestampOffset(offset_);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>TimestampChange(int64_t<sp/>offset)<sp/>:<sp/>offset_(offset)<sp/>{}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>int64_t<sp/>kUnset<sp/>=<sp/>std::numeric_limits&lt;int64_t&gt;::min();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>int64_t<sp/>offset_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IsSubclass<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">pred<sp/>=<sp/>std::is_base_of&lt;Base,<sp/>std::decay_t&lt;T&gt;&gt;;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">HasProcessMethod<sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">HasProcessMethod&lt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>T,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::void_t&lt;decltype(absl::Status(std::declval&lt;std::decay_t&lt;T&gt;&gt;().Process(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::declval&lt;mediapipe::CalculatorContext*&gt;())))&gt;&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">HasNestedItems<sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">HasNestedItems&lt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>T,<sp/><ref refid="namespacestd" kindref="compound">std</ref>::void_t&lt;decltype(std::declval&lt;std::decay_t&lt;T&gt;&gt;().nested_items())&gt;&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>construct<sp/>a<sp/>tuple<sp/>of<sp/>Tag<sp/>types<sp/>(see<sp/>tag.h)<sp/>from<sp/>a<sp/>tuple<sp/>of<sp/>ports.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TupleRef&gt;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TagTuple<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>J&gt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">S<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>const_str<sp/>tag{std::get&lt;J&gt;(TupleRef::get()).tag_};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t...<sp/>I&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Make(std::index_sequence&lt;I...&gt;<sp/>indices)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UNUSED(indices);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(mediapipe::api2::internal::tag_build(S&lt;I&gt;{})...);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Make()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TupleT<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(TupleRef::get());</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Make(internal::tuple_index_sequence&lt;TupleT&gt;());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>access<sp/>a<sp/>tuple<sp/>of<sp/>ports<sp/>by<sp/>static<sp/>tag.<sp/>Attempts<sp/>to<sp/>look<sp/>up<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>missing<sp/>tag<sp/>will<sp/>not<sp/>compile.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TupleRef&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TaggedAccess<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>not<sp/>functionally<sp/>necessary<sp/>(we<sp/>could<sp/>do<sp/>the<sp/>tag<sp/>search<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>port<sp/>tuple),<sp/>but<sp/>it<sp/>gives<sp/>a<sp/>more<sp/>readable<sp/>error<sp/>message<sp/>when<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>static_assert<sp/>below<sp/>fails.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kTagTuple<sp/>=<sp/>TagTuple&lt;TupleRef&gt;::Make();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tag&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>get(Tag<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::tuple_find([tag](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>==<sp/>tag;<sp/>},<sp/>kTagTuple);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(i<sp/>&lt;<sp/>std::tuple_size_v&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(kTagTuple)&gt;,<sp/></highlight><highlight class="stringliteral">&quot;tag<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;i&gt;(TupleRef::get());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ExtractNestedItems(std::tuple&lt;T...&gt;<sp/>tuple)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::flatten_tuple(internal::map_tuple(</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>item)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(HasNestedItems&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(item)&gt;{})<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tuple_cat(std::make_tuple(item),<sp/>item.nested_items());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(item);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuple));</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>contract<sp/>type.<sp/>Takes<sp/>a<sp/>list<sp/>of<sp/>ports<sp/>or<sp/>other<sp/>contract<sp/>items.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Contract<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>Contract(std::tuple&lt;T...&gt;<sp/>tuple)<sp/>:<sp/>items(tuple)<sp/>{}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>Contract(T&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Contract(<ref refid="namespacestd" kindref="compound">std</ref>::tuple&lt;T...&gt;{std::move(args)...})<sp/>{}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>absl::Status<sp/>GetContract(mediapipe::CalculatorContract*<sp/>cc)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;absl::Status&gt;<sp/>statuses;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>store_status<sp/>=<sp/>[&amp;statuses](absl::Status<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status.ok())<sp/>statuses.push_back(std::move(status));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>internal::tuple_for_each(</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cc,<sp/>&amp;store_status](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>item)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store_status(item.AddToContract(cc));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_items);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timestamp_change_count()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>to<sp/>SetOffset(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>store_status(TimestampChange::Offset(0).AddToContract(cc));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(statuses.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(statuses.size()<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>statuses[0];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tool::CombinedStatus(</highlight><highlight class="stringliteral">&quot;Multiple<sp/>errors&quot;</highlight><highlight class="normal">,<sp/>statuses);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>std::tuple&lt;T...&gt;<sp/>items;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>when<sp/>forwarding<sp/>nested<sp/>items<sp/>(e.g.<sp/>ports),<sp/>check<sp/>for<sp/>conflicts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(ExtractNestedItems(items))<sp/>all_items{ExtractNestedItems(items)};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>inputs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::filter_tuple&lt;IsSubclass&lt;InputBase&gt;::pred&gt;(all_items);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::filter_tuple&lt;IsSubclass&lt;OutputBase&gt;::pred&gt;(all_items);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>side_inputs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::filter_tuple&lt;IsSubclass&lt;SideInputBase&gt;::pred&gt;(all_items);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>side_outputs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::filter_tuple&lt;IsSubclass&lt;SideOutputBase&gt;::pred&gt;(all_items);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timestamp_change_count()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::filtered_tuple_indices&lt;IsSubclass&lt;TimestampChange&gt;::pred&gt;(</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_items)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.size();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>process_items()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::filter_tuple&lt;HasProcessMethod&gt;(all_items);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal">};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers<sp/>to<sp/>construct<sp/>a<sp/>Contract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>MakeContract(T&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Contract&lt;T...&gt;(std::forward&lt;T&gt;(args)...);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>MakeContract(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::tuple&lt;T...&gt;&amp;<sp/>tuple)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Contract&lt;T...&gt;(tuple);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>for<sp/>accessing<sp/>the<sp/>ports<sp/>of<sp/>a<sp/>Contract<sp/>by<sp/>static<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C2T,<sp/>const<sp/>C2T&amp;<sp/>c2&gt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TaggedContract<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>TaggedContract()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>absl::Status<sp/>GetContract(mediapipe::CalculatorContract*<sp/>cc)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c2.GetContract(cc);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tuple,<sp/>Tuple<sp/>(C2T::*member)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GetMember<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>get()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(c2.*member)();<sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TaggedInputs<sp/>=</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TaggedAccess&lt;GetMember&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(c2.inputs()),<sp/>&amp;C2T::inputs&gt;&gt;;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TaggedOutputs<sp/>=</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TaggedAccess&lt;GetMember&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(c2.outputs()),<sp/>&amp;C2T::outputs&gt;&gt;;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TaggedSideInputs<sp/>=</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TaggedAccess&lt;GetMember&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(c2.side_inputs()),<sp/>&amp;C2T::side_inputs&gt;&gt;;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TaggedSideOutputs<sp/>=</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TaggedAccess&lt;GetMember&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(c2.side_outputs()),<sp/>&amp;C2T::side_outputs&gt;&gt;;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Support<sp/>for<sp/>function-based<sp/>Process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IsInputPort</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>std::bool_constant&lt;std::is_base_of&lt;InputBase,<sp/>std::decay_t&lt;T&gt;&gt;{}<sp/>||</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;SideInputBase,<sp/>std::decay_t&lt;T&gt;&gt;{}&gt;<sp/>{};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IsOutputPort</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>std::bool_constant&lt;std::is_base_of&lt;OutputBase,<sp/>std::decay_t&lt;T&gt;&gt;{}<sp/>||</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;SideOutputBase,<sp/>std::decay_t&lt;T&gt;&gt;{}&gt;<sp/>{};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>class<sp/>that<sp/>converts<sp/>a<sp/>port<sp/>specification<sp/>into<sp/>a<sp/>function<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PortArg<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>PortArg(CalculatorContext*<sp/>cc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>P&amp;<sp/>port)<sp/>:<sp/>cc_(cc),<sp/>port_(port)<sp/>{}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">PayloadT<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P::PayloadT;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PayloadT&amp;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>port_(cc_).Get();<sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>Packet&lt;typename<sp/>P::value_t&gt;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>port_(cc_);<sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>PacketBase()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>port_(cc_).packet();<sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>CalculatorContext*<sp/>cc_;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>P&amp;<sp/>port_;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>MakePortArg(CalculatorContext*<sp/>cc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>P&amp;<sp/>port)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PortArg&lt;P&gt;(cc,<sp/>port);</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>class<sp/>that<sp/>takes<sp/>a<sp/>function<sp/>result<sp/>and<sp/>sends<sp/>it<sp/>into<sp/>outputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>P&gt;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OutputSender<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>OutputSender(P&amp;&amp;...<sp/>args)<sp/>:<sp/>outputs_(args...)<sp/>{}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>OutputSender(std::tuple&lt;P...&gt;&amp;&amp;<sp/>args)<sp/>:<sp/>outputs_(args)<sp/>{}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">R,<sp/>std::enable_if_t&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(P)<sp/>==<sp/>1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>absl::Status<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">()(CalculatorContext*<sp/>cc,<sp/>absl::StatusOr&lt;R&gt;&amp;&amp;<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.ok())<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(cc,<sp/>result.value());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.status();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">R,<sp/>std::enable_if_t&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(P)<sp/>==<sp/>1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>absl::Status<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">()(CalculatorContext*<sp/>cc,<sp/>R&amp;&amp;<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>std::get&lt;0&gt;(outputs_)(cc).Send(std::forward&lt;R&gt;(result));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>R&gt;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>absl::Status<sp/>operator()(CalculatorContext*<sp/>cc,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>absl::StatusOr&lt;std::tuple&lt;R...&gt;&gt;&amp;&amp;<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.ok())<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(cc,<sp/>result.value());</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.status();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>R&gt;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>absl::Status<sp/>operator()(CalculatorContext*<sp/>cc,<sp/>std::tuple&lt;R...&gt;&amp;&amp;<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(P)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(R),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>internal::tuple_for_each(</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cc,<sp/>&amp;result](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>port,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i_const)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::size_t<sp/>i<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(i_const)::value;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port(cc).Send(std::get&lt;i&gt;(result));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs_);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>std::tuple&lt;P...&gt;<sp/>outputs_;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>P&gt;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>MakeOutputSender(P&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputSender&lt;P...&gt;(std::forward&lt;P&gt;(args)...);</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>P&gt;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>MakeOutputSender(std::tuple&lt;P...&gt;&amp;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputSender&lt;P...&gt;(std::forward&lt;std::tuple&lt;P...&gt;&gt;(args));</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Contract<sp/>item<sp/>that<sp/>specifies<sp/>that<sp/>certain<sp/>I/O<sp/>ports<sp/>are<sp/>handled<sp/>by<sp/>invoking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>specific<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>P&gt;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunCaller<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>FunCaller(F&amp;&amp;<sp/>f,<sp/>P&amp;&amp;...<sp/>args)<sp/>:<sp/>f_(f),<sp/>args_(args...)<sp/>{}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator()(CalculatorContext*<sp/>cc)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output_sender<sp/>=<sp/>MakeOutputSender(outputs());</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tuple_apply<sp/>gives<sp/>better<sp/>error<sp/>messages<sp/>than<sp/>std::apply<sp/>if<sp/>the<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>types<sp/>don&apos;t<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output_sender(</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc,<sp/>internal::tuple_apply(f_,<sp/>internal::map_tuple(</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[cc](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>port)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MakePortArg(cc,<sp/>port);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs())));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>inputs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::filter_tuple&lt;IsInputPort&gt;(args_);<sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::filter_tuple&lt;IsOutputPort&gt;(args_);<sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>absl::Status<sp/>AddToContract(CalculatorContract*<sp/>cc)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>UNUSED(cc);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};<sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>absl::Status<sp/>Process(CalculatorContext*<sp/>cc)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(cc);<sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::tuple&lt;P...&gt;<sp/>nested_items()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>args_;<sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>F<sp/>f_;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>std::tuple&lt;P...&gt;<sp/>args_;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">};</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>invoke<sp/>function<sp/>callers<sp/>in<sp/>Process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>implement<sp/>multiple<sp/>callers<sp/>for<sp/>syncsets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">absl::Status<sp/>ProcessFnCallers(CalculatorContext*<sp/>cc,<sp/>std::tuple&lt;T...&gt;<sp/>callers);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>absl::Status<sp/>ProcessFnCallers(CalculatorContext*<sp/>cc,<sp/>std::tuple&lt;&gt;)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>UNUSED(cc);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absl::InternalError(</highlight><highlight class="stringliteral">&quot;Process<sp/>unimplemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">absl::Status<sp/>ProcessFnCallers(CalculatorContext*<sp/>cc,<sp/>std::tuple&lt;T&gt;<sp/>callers)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;0&gt;(callers).Process(cc);</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>used<sp/>to<sp/>add<sp/>a<sp/>process<sp/>function<sp/>to<sp/>a<sp/>calculator<sp/>contract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>P&gt;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ProcessFn(F&amp;&amp;<sp/>f,<sp/>P&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal::FunCaller&lt;F,<sp/>P...&gt;(std::forward&lt;F&gt;(f),</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;P&gt;(args)...);</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>api2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mediapipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>MEDIAPIPE_FRAMEWORK_API2_CONTRACT_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h"/>
  </compounddef>
</doxygen>
