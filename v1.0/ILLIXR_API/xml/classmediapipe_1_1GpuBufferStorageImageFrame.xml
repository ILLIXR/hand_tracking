<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmediapipe_1_1GpuBufferStorageImageFrame" kind="class" language="C++" prot="public">
    <compoundname>mediapipe::GpuBufferStorageImageFrame</compoundname>
    <basecompoundref prot="public" virt="non-virtual">mediapipe::internal::GpuBufferStorageImpl&lt; GpuBufferStorageImageFrame, internal::ViewProvider&lt; ImageFrame &gt;, internal::ViewProvider&lt; FrameBuffer &gt; &gt;</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmediapipe_1_1GpuBufferStorageImageFrame_1a342f71163cfd6105f66a2e30df40cf4a" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; ImageFrame &gt;</type>
        <definition>std::shared_ptr&lt;ImageFrame&gt; mediapipe::GpuBufferStorageImageFrame::image_frame_</definition>
        <argsstring></argsstring>
        <name>image_frame_</name>
        <qualifiedname>mediapipe::GpuBufferStorageImageFrame::image_frame_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="63" column="19" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" bodystart="63" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmediapipe_1_1GpuBufferStorageImageFrame_1a8c7aff443d8d7a04095cbddfefbec355" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::GpuBufferStorageImageFrame::GpuBufferStorageImageFrame</definition>
        <argsstring>(std::shared_ptr&lt; ImageFrame &gt; image_frame)</argsstring>
        <name>GpuBufferStorageImageFrame</name>
        <qualifiedname>mediapipe::GpuBufferStorageImageFrame::GpuBufferStorageImageFrame</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; ImageFrame &gt;</type>
          <declname>image_frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="36" column="12" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" bodystart="36" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBufferStorageImageFrame_1a36a76ba3a75769c9cc3216cd33944441" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::GpuBufferStorageImageFrame::GpuBufferStorageImageFrame</definition>
        <argsstring>(int width, int height, GpuBufferFormat format)</argsstring>
        <name>GpuBufferStorageImageFrame</name>
        <qualifiedname>mediapipe::GpuBufferStorageImageFrame::GpuBufferStorageImageFrame</qualifiedname>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GpuBufferFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="38" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBufferStorageImageFrame_1a91d83f0529af1353b42bb2a85a36608c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mediapipe::GpuBufferStorageImageFrame::width</definition>
        <argsstring>() const override</argsstring>
        <name>width</name>
        <qualifiedname>mediapipe::GpuBufferStorageImageFrame::width</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="42" column="7" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBufferStorageImageFrame_1a8bd6890296a66856d393a752e0fffd8a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mediapipe::GpuBufferStorageImageFrame::height</definition>
        <argsstring>() const override</argsstring>
        <name>height</name>
        <qualifiedname>mediapipe::GpuBufferStorageImageFrame::height</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="43" column="7" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBufferStorageImageFrame_1a6400f6644157f61819221a868b936b13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GpuBufferFormat</type>
        <definition>GpuBufferFormat mediapipe::GpuBufferStorageImageFrame::format</definition>
        <argsstring>() const override</argsstring>
        <name>format</name>
        <qualifiedname>mediapipe::GpuBufferStorageImageFrame::format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="44" column="19" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBufferStorageImageFrame_1ac1f70a2fa7673b9a1a9f3402d3512805" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; const ImageFrame &gt;</type>
        <definition>std::shared_ptr&lt; const ImageFrame &gt; mediapipe::GpuBufferStorageImageFrame::image_frame</definition>
        <argsstring>() const</argsstring>
        <name>image_frame</name>
        <qualifiedname>mediapipe::GpuBufferStorageImageFrame::image_frame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="47" column="19" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBufferStorageImageFrame_1a4ea7313f5eb80f4601672f5a3d671806" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; ImageFrame &gt;</type>
        <definition>std::shared_ptr&lt; ImageFrame &gt; mediapipe::GpuBufferStorageImageFrame::image_frame</definition>
        <argsstring>()</argsstring>
        <name>image_frame</name>
        <qualifiedname>mediapipe::GpuBufferStorageImageFrame::image_frame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="48" column="19" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBufferStorageImageFrame_1a87fc16ce928f0312fa5e40a16d861ae5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; const ImageFrame &gt;</type>
        <definition>std::shared_ptr&lt; const ImageFrame &gt; mediapipe::GpuBufferStorageImageFrame::GetReadView</definition>
        <argsstring>(internal::types&lt; ImageFrame &gt;) const override</argsstring>
        <name>GetReadView</name>
        <qualifiedname>mediapipe::GpuBufferStorageImageFrame::GetReadView</qualifiedname>
        <param>
          <type>internal::types&lt; ImageFrame &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="49" column="19" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBufferStorageImageFrame_1aa8dcfd4e831a63e2acc950727b3f020a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; ImageFrame &gt;</type>
        <definition>std::shared_ptr&lt; ImageFrame &gt; mediapipe::GpuBufferStorageImageFrame::GetWriteView</definition>
        <argsstring>(internal::types&lt; ImageFrame &gt;) override</argsstring>
        <name>GetWriteView</name>
        <qualifiedname>mediapipe::GpuBufferStorageImageFrame::GetWriteView</qualifiedname>
        <param>
          <type>internal::types&lt; ImageFrame &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="53" column="19" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBufferStorageImageFrame_1a5db3cfb826c81e279bae8e446427807c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; const FrameBuffer &gt;</type>
        <definition>std::shared_ptr&lt; const FrameBuffer &gt; mediapipe::GpuBufferStorageImageFrame::GetReadView</definition>
        <argsstring>(internal::types&lt; FrameBuffer &gt;) const override</argsstring>
        <name>GetReadView</name>
        <qualifiedname>mediapipe::GpuBufferStorageImageFrame::GetReadView</qualifiedname>
        <param>
          <type>internal::types&lt; FrameBuffer &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="57" column="19" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.cc" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1GpuBufferStorageImageFrame_1a2e023c44eaa0db076769e91dce8e10c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; FrameBuffer &gt;</type>
        <definition>std::shared_ptr&lt; FrameBuffer &gt; mediapipe::GpuBufferStorageImageFrame::GetWriteView</definition>
        <argsstring>(internal::types&lt; FrameBuffer &gt;) override</argsstring>
        <name>GetWriteView</name>
        <qualifiedname>mediapipe::GpuBufferStorageImageFrame::GetWriteView</qualifiedname>
        <param>
          <type>internal::types&lt; FrameBuffer &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="59" column="19" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.cc" bodystart="67" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" line="31" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage_image_frame.h" bodystart="34" bodyend="64"/>
    <listofallmembers>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorage_1ae79c17a40d6c5b7a4fc60606cbb01094" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>can_down_cast_to</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorage_1a1edb39489b5d86c44f01e18528780c2e" prot="public" virt="non-virtual" ambiguityscope="mediapipe::internal::GpuBufferStorage::"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>down_cast</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorage_1a2ca80b725d00d5fde71badcaa3f8ebd6" prot="public" virt="non-virtual" ambiguityscope="mediapipe::internal::GpuBufferStorage::"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>down_cast</name></member>
      <member refid="classmediapipe_1_1GpuBufferStorageImageFrame_1a6400f6644157f61819221a868b936b13" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>format</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1ac498febf3ec9202a9f1b6631a67f2daa" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>GetProviderTypes</name></member>
      <member refid="classmediapipe_1_1GpuBufferStorageImageFrame_1a87fc16ce928f0312fa5e40a16d861ae5" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>GetReadView</name></member>
      <member refid="classmediapipe_1_1GpuBufferStorageImageFrame_1a5db3cfb826c81e279bae8e446427807c" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>GetReadView</name></member>
      <member refid="classmediapipe_1_1GpuBufferStorageImageFrame_1aa8dcfd4e831a63e2acc950727b3f020a" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>GetWriteView</name></member>
      <member refid="classmediapipe_1_1GpuBufferStorageImageFrame_1a2e023c44eaa0db076769e91dce8e10c8" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>GetWriteView</name></member>
      <member refid="classmediapipe_1_1GpuBufferStorageImageFrame_1a8c7aff443d8d7a04095cbddfefbec355" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>GpuBufferStorageImageFrame</name></member>
      <member refid="classmediapipe_1_1GpuBufferStorageImageFrame_1a36a76ba3a75769c9cc3216cd33944441" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>GpuBufferStorageImageFrame</name></member>
      <member refid="classmediapipe_1_1GpuBufferStorageImageFrame_1a8bd6890296a66856d393a752e0fffd8a" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>height</name></member>
      <member refid="classmediapipe_1_1GpuBufferStorageImageFrame_1ac1f70a2fa7673b9a1a9f3402d3512805" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>image_frame</name></member>
      <member refid="classmediapipe_1_1GpuBufferStorageImageFrame_1a4ea7313f5eb80f4601672f5a3d671806" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>image_frame</name></member>
      <member refid="classmediapipe_1_1GpuBufferStorageImageFrame_1a342f71163cfd6105f66a2e30df40cf4a" prot="private" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>image_frame_</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1af96c4afd8fb2bf8c439bee0e52982390" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>RegisterOnce</name></member>
      <member refid="classmediapipe_1_1GpuBufferStorageImageFrame_1a91d83f0529af1353b42bb2a85a36608c" prot="public" virt="non-virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>width</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorage_1ad1d62b12ca23e73e0c2bb08fee508843" prot="public" virt="virtual"><scope>mediapipe::GpuBufferStorageImageFrame</scope><name>~GpuBufferStorage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
