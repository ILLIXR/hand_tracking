<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmediapipe_1_1api2_1_1internal_1_1OutputSender" kind="class" language="C++" prot="private">
    <compoundname>mediapipe::api2::internal::OutputSender</compoundname>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>P</declname>
        <defname>P</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1a72cd1e0a1575fd41e5c36fb530c77f2a" prot="public" static="no" mutable="no">
        <type>std::tuple&lt; P... &gt;</type>
        <definition>std::tuple&lt;P...&gt; mediapipe::api2::internal::OutputSender&lt; P &gt;::outputs_</definition>
        <argsstring></argsstring>
        <name>outputs_</name>
        <qualifiedname>mediapipe::api2::internal::OutputSender::outputs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" line="312" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" bodystart="312" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1a9fcf7c8f0b3f6d62b4f6469ac456e2c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::api2::internal::OutputSender&lt; P &gt;::OutputSender</definition>
        <argsstring>(P &amp;&amp;... args)</argsstring>
        <name>OutputSender</name>
        <qualifiedname>mediapipe::api2::internal::OutputSender::OutputSender</qualifiedname>
        <param>
          <type>P &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" line="272" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" bodystart="272" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1a36eef4f670a25079b50fba8a718a8154" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mediapipe::api2::internal::OutputSender&lt; P &gt;::OutputSender</definition>
        <argsstring>(std::tuple&lt; P... &gt; &amp;&amp;args)</argsstring>
        <name>OutputSender</name>
        <qualifiedname>mediapipe::api2::internal::OutputSender::OutputSender</qualifiedname>
        <param>
          <type>std::tuple&lt; P... &gt; &amp;&amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" line="273" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" bodystart="273" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1a9304bd58580673635d5e29d14afde5ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class R</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; sizeof...(P)==1, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::api2::internal::OutputSender&lt; P &gt;::operator()</definition>
        <argsstring>(CalculatorContext *cc, absl::StatusOr&lt; R &gt; &amp;&amp;result)</argsstring>
        <name>operator()</name>
        <qualifiedname>mediapipe::api2::internal::OutputSender::operator()</qualifiedname>
        <param>
          <type>CalculatorContext *</type>
          <declname>cc</declname>
        </param>
        <param>
          <type>absl::StatusOr&lt; R &gt; &amp;&amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" line="276" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" bodystart="276" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1a47d5311b59b8b5dff3d65f88a3fe8185" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class R</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; sizeof...(P)==1, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::api2::internal::OutputSender&lt; P &gt;::operator()</definition>
        <argsstring>(CalculatorContext *cc, R &amp;&amp;result)</argsstring>
        <name>operator()</name>
        <qualifiedname>mediapipe::api2::internal::OutputSender::operator()</qualifiedname>
        <param>
          <type>CalculatorContext *</type>
          <declname>cc</declname>
        </param>
        <param>
          <type>R &amp;&amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" line="285" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1a68954c5bcd0f80a40f20313b146a3198" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
        </templateparamlist>
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::api2::internal::OutputSender&lt; P &gt;::operator()</definition>
        <argsstring>(CalculatorContext *cc, absl::StatusOr&lt; std::tuple&lt; R... &gt; &gt; &amp;&amp;result)</argsstring>
        <name>operator()</name>
        <qualifiedname>mediapipe::api2::internal::OutputSender::operator()</qualifiedname>
        <param>
          <type>CalculatorContext *</type>
          <declname>cc</declname>
        </param>
        <param>
          <type>absl::StatusOr&lt; std::tuple&lt; R... &gt; &gt; &amp;&amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" line="291" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" bodystart="291" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1ae6579907389ebc61650e086162bf5682" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
        </templateparamlist>
        <type>absl::Status</type>
        <definition>absl::Status mediapipe::api2::internal::OutputSender&lt; P &gt;::operator()</definition>
        <argsstring>(CalculatorContext *cc, std::tuple&lt; R... &gt; &amp;&amp;result)</argsstring>
        <name>operator()</name>
        <qualifiedname>mediapipe::api2::internal::OutputSender::operator()</qualifiedname>
        <param>
          <type>CalculatorContext *</type>
          <declname>cc</declname>
        </param>
        <param>
          <type>std::tuple&lt; R... &gt; &amp;&amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" line="301" column="16" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" bodystart="301" bodyend="310"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" line="270" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/framework/api/contract.h" bodystart="270" bodyend="313"/>
    <listofallmembers>
      <member refid="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1a9304bd58580673635d5e29d14afde5ca" prot="public" virt="non-virtual"><scope>mediapipe::api2::internal::OutputSender</scope><name>operator()</name></member>
      <member refid="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1a47d5311b59b8b5dff3d65f88a3fe8185" prot="public" virt="non-virtual"><scope>mediapipe::api2::internal::OutputSender</scope><name>operator()</name></member>
      <member refid="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1a68954c5bcd0f80a40f20313b146a3198" prot="public" virt="non-virtual"><scope>mediapipe::api2::internal::OutputSender</scope><name>operator()</name></member>
      <member refid="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1ae6579907389ebc61650e086162bf5682" prot="public" virt="non-virtual"><scope>mediapipe::api2::internal::OutputSender</scope><name>operator()</name></member>
      <member refid="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1a72cd1e0a1575fd41e5c36fb530c77f2a" prot="public" virt="non-virtual"><scope>mediapipe::api2::internal::OutputSender</scope><name>outputs_</name></member>
      <member refid="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1a9fcf7c8f0b3f6d62b4f6469ac456e2c2" prot="public" virt="non-virtual"><scope>mediapipe::api2::internal::OutputSender</scope><name>OutputSender</name></member>
      <member refid="classmediapipe_1_1api2_1_1internal_1_1OutputSender_1a36eef4f670a25079b50fba8a718a8154" prot="public" virt="non-virtual"><scope>mediapipe::api2::internal::OutputSender</scope><name>OutputSender</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
