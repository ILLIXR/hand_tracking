<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmediapipe_1_1internal_1_1GpuBufferStorageImpl" kind="class" language="C++" prot="public">
    <compoundname>mediapipe::internal::GpuBufferStorageImpl</compoundname>
    <basecompoundref prot="public" virt="non-virtual">mediapipe::internal::GpuBufferStorage</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">U</basecompoundref>
    <derivedcompoundref refid="classmediapipe_1_1GlTextureBuffer" prot="public" virt="non-virtual">mediapipe::GlTextureBuffer</derivedcompoundref>
    <derivedcompoundref refid="classmediapipe_1_1GpuBufferStorageImageFrame" prot="public" virt="non-virtual">mediapipe::GpuBufferStorageImageFrame</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>class...</type>
        <declname>U</declname>
        <defname>U</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1a377ae8f6421ee80b8bafc9a21fd59dd9" prot="private" static="no">
        <type>ForceStaticInstantiation&lt;&amp;registration &gt;</type>
        <definition>using mediapipe::internal::GpuBufferStorageImpl&lt; T, U &gt;::RequireStatics =  ForceStaticInstantiation&lt;&amp;registration&gt;</definition>
        <argsstring></argsstring>
        <name>RequireStatics</name>
        <qualifiedname>mediapipe::internal::GpuBufferStorageImpl::RequireStatics</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" line="249" column="3" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" bodystart="249" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1ae5bfda503cb69c3a64a6d64dff00cea1" prot="private" static="yes" mutable="no">
        <type>auto</type>
        <definition>auto mediapipe::internal::GpuBufferStorageImpl&lt; T, U &gt;::registration</definition>
        <argsstring></argsstring>
        <name>registration</name>
        <qualifiedname>mediapipe::internal::GpuBufferStorageImpl::registration</qualifiedname>
        <initializer>= RegisterOnce()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" line="248" column="22" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" bodystart="248" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1ac498febf3ec9202a9f1b6631a67f2daa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; TypeId &gt; &amp;</type>
        <definition>static const std::vector&lt; TypeId &gt; &amp; mediapipe::internal::GpuBufferStorageImpl&lt; T, U &gt;::GetProviderTypes</definition>
        <argsstring>()</argsstring>
        <name>GetProviderTypes</name>
        <qualifiedname>mediapipe::internal::GpuBufferStorageImpl::GetProviderTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" line="222" column="28" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1af96c4afd8fb2bf8c439bee0e52982390" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GpuBufferStorageRegistry::RegistryToken</type>
        <definition>static GpuBufferStorageRegistry::RegistryToken mediapipe::internal::GpuBufferStorageImpl&lt; T, U &gt;::RegisterOnce</definition>
        <argsstring>()</argsstring>
        <name>RegisterOnce</name>
        <qualifiedname>mediapipe::internal::GpuBufferStorageImpl::RegisterOnce</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" line="229" column="50" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" bodystart="229" bodyend="232"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1a2fe3714d633a89600c217cb390468671" prot="private" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * mediapipe::internal::GpuBufferStorageImpl&lt; T, U &gt;::down_cast</definition>
        <argsstring>(TypeId to) const final</argsstring>
        <name>down_cast</name>
        <qualifiedname>mediapipe::internal::GpuBufferStorageImpl::down_cast</qualifiedname>
        <param>
          <type>TypeId</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" line="236" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1a50f1fcb03b90e6820f9f33d3bd45739b" prot="private" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="non-virtual">
        <type>TypeId</type>
        <definition>TypeId mediapipe::internal::GpuBufferStorageImpl&lt; T, U &gt;::storage_type</definition>
        <argsstring>() const final</argsstring>
        <name>storage_type</name>
        <qualifiedname>mediapipe::internal::GpuBufferStorageImpl::storage_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" line="239" column="10" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1ae439ea0521ee0064a089cb18017db507" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * mediapipe::internal::GpuBufferStorageImpl&lt; T, U &gt;::down_cast_impl</definition>
        <argsstring>(TypeId to, types&lt;&gt;) const</argsstring>
        <name>down_cast_impl</name>
        <qualifiedname>mediapipe::internal::GpuBufferStorageImpl::down_cast_impl</qualifiedname>
        <param>
          <type>TypeId</type>
          <declname>to</declname>
        </param>
        <param>
          <type>types&lt;&gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" line="241" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1a8e22b96666a146af7f9da29953618d1f" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class...</type>
            <declname>W</declname>
            <defname>W</defname>
          </param>
        </templateparamlist>
        <type>const void *</type>
        <definition>const void * mediapipe::internal::GpuBufferStorageImpl&lt; T, U &gt;::down_cast_impl</definition>
        <argsstring>(TypeId to, types&lt; V, W... &gt;) const</argsstring>
        <name>down_cast_impl</name>
        <qualifiedname>mediapipe::internal::GpuBufferStorageImpl::down_cast_impl</qualifiedname>
        <param>
          <type>TypeId</type>
          <declname>to</declname>
        </param>
        <param>
          <type>types&lt; V, W... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" line="243" column="14" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" bodystart="243" bodyend="246"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" line="220" column="1" bodyfile="/home/friedel/devel/ILLIXR-plugins/hand_tracking/mediapipe/gpu/gpu_buffer_storage.h" bodystart="220" bodyend="250"/>
    <listofallmembers>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorage_1ae79c17a40d6c5b7a4fc60606cbb01094" prot="public" virt="non-virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>can_down_cast_to</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1a2fe3714d633a89600c217cb390468671" prot="private" virt="non-virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>down_cast</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorage_1a1edb39489b5d86c44f01e18528780c2e" prot="public" virt="non-virtual" ambiguityscope="mediapipe::internal::GpuBufferStorage::"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>down_cast</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorage_1a2ca80b725d00d5fde71badcaa3f8ebd6" prot="public" virt="non-virtual" ambiguityscope="mediapipe::internal::GpuBufferStorage::"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>down_cast</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1ae439ea0521ee0064a089cb18017db507" prot="private" virt="non-virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>down_cast_impl</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1a8e22b96666a146af7f9da29953618d1f" prot="private" virt="non-virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>down_cast_impl</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorage_1aecda65362836ad9d5e937cb0a487c5df" prot="public" virt="pure-virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>format</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1ac498febf3ec9202a9f1b6631a67f2daa" prot="public" virt="non-virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>GetProviderTypes</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorage_1add82be1c51a43019a294b948ea7a5ab6" prot="public" virt="pure-virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>height</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1af96c4afd8fb2bf8c439bee0e52982390" prot="public" virt="non-virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>RegisterOnce</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1ae5bfda503cb69c3a64a6d64dff00cea1" prot="private" virt="non-virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>registration</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1a377ae8f6421ee80b8bafc9a21fd59dd9" prot="private" virt="non-virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>RequireStatics</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorageImpl_1a50f1fcb03b90e6820f9f33d3bd45739b" prot="private" virt="non-virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>storage_type</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorage_1a5b42bb14c9c408f6985fb7f59923d66a" prot="public" virt="pure-virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>width</name></member>
      <member refid="classmediapipe_1_1internal_1_1GpuBufferStorage_1ad1d62b12ca23e73e0c2bb08fee508843" prot="public" virt="virtual"><scope>mediapipe::internal::GpuBufferStorageImpl</scope><name>~GpuBufferStorage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
